
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Tutor
 * 
 */
export type Tutor = $Result.DefaultSelection<Prisma.$TutorPayload>
/**
 * Model Kelas
 * 
 */
export type Kelas = $Result.DefaultSelection<Prisma.$KelasPayload>
/**
 * Model Kategori_kelas
 * 
 */
export type Kategori_kelas = $Result.DefaultSelection<Prisma.$Kategori_kelasPayload>
/**
 * Model Kategori_kelas_relasi
 * 
 */
export type Kategori_kelas_relasi = $Result.DefaultSelection<Prisma.$Kategori_kelas_relasiPayload>
/**
 * Model Kelas_saya
 * 
 */
export type Kelas_saya = $Result.DefaultSelection<Prisma.$Kelas_sayaPayload>
/**
 * Model Material
 * 
 */
export type Material = $Result.DefaultSelection<Prisma.$MaterialPayload>
/**
 * Model Mengajar
 * 
 */
export type Mengajar = $Result.DefaultSelection<Prisma.$MengajarPayload>
/**
 * Model Modul_kelas
 * 
 */
export type Modul_kelas = $Result.DefaultSelection<Prisma.$Modul_kelasPayload>
/**
 * Model Modul_material
 * 
 */
export type Modul_material = $Result.DefaultSelection<Prisma.$Modul_materialPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model Orders_kelas
 * 
 */
export type Orders_kelas = $Result.DefaultSelection<Prisma.$Orders_kelasPayload>
/**
 * Model Pembayaran
 * 
 */
export type Pembayaran = $Result.DefaultSelection<Prisma.$PembayaranPayload>
/**
 * Model Orders_pembayaran
 * 
 */
export type Orders_pembayaran = $Result.DefaultSelection<Prisma.$Orders_pembayaranPayload>
/**
 * Model Pretest
 * 
 */
export type Pretest = $Result.DefaultSelection<Prisma.$PretestPayload>
/**
 * Model Pretest_kelas
 * 
 */
export type Pretest_kelas = $Result.DefaultSelection<Prisma.$Pretest_kelasPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Review_pretest
 * 
 */
export type Review_pretest = $Result.DefaultSelection<Prisma.$Review_pretestPayload>
/**
 * Model Silabus
 * 
 */
export type Silabus = $Result.DefaultSelection<Prisma.$SilabusPayload>
/**
 * Model Transaksi_kelas
 * 
 */
export type Transaksi_kelas = $Result.DefaultSelection<Prisma.$Transaksi_kelasPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Status_kelas: {
  Selesai: 'Selesai',
  Sedang_Berjalan: 'Sedang_Berjalan'
};

export type Status_kelas = (typeof Status_kelas)[keyof typeof Status_kelas]


export const Status_pembayaran: {
  Berhasil: 'Berhasil',
  Gagal: 'Gagal',
  Belum_Bayar: 'Belum_Bayar'
};

export type Status_pembayaran = (typeof Status_pembayaran)[keyof typeof Status_pembayaran]


export const Jenis_pembayaran: {
  Transfer_Bank: 'Transfer_Bank',
  E_Wallet: 'E_Wallet',
  Debit_Card: 'Debit_Card',
  Kredit_Card: 'Kredit_Card'
};

export type Jenis_pembayaran = (typeof Jenis_pembayaran)[keyof typeof Jenis_pembayaran]

}

export type Status_kelas = $Enums.Status_kelas

export const Status_kelas: typeof $Enums.Status_kelas

export type Status_pembayaran = $Enums.Status_pembayaran

export const Status_pembayaran: typeof $Enums.Status_pembayaran

export type Jenis_pembayaran = $Enums.Jenis_pembayaran

export const Jenis_pembayaran: typeof $Enums.Jenis_pembayaran

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.tutor`: Exposes CRUD operations for the **Tutor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tutors
    * const tutors = await prisma.tutor.findMany()
    * ```
    */
  get tutor(): Prisma.TutorDelegate<ExtArgs>;

  /**
   * `prisma.kelas`: Exposes CRUD operations for the **Kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kelas
    * const kelas = await prisma.kelas.findMany()
    * ```
    */
  get kelas(): Prisma.KelasDelegate<ExtArgs>;

  /**
   * `prisma.kategori_kelas`: Exposes CRUD operations for the **Kategori_kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kategori_kelas
    * const kategori_kelas = await prisma.kategori_kelas.findMany()
    * ```
    */
  get kategori_kelas(): Prisma.Kategori_kelasDelegate<ExtArgs>;

  /**
   * `prisma.kategori_kelas_relasi`: Exposes CRUD operations for the **Kategori_kelas_relasi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kategori_kelas_relasis
    * const kategori_kelas_relasis = await prisma.kategori_kelas_relasi.findMany()
    * ```
    */
  get kategori_kelas_relasi(): Prisma.Kategori_kelas_relasiDelegate<ExtArgs>;

  /**
   * `prisma.kelas_saya`: Exposes CRUD operations for the **Kelas_saya** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kelas_sayas
    * const kelas_sayas = await prisma.kelas_saya.findMany()
    * ```
    */
  get kelas_saya(): Prisma.Kelas_sayaDelegate<ExtArgs>;

  /**
   * `prisma.material`: Exposes CRUD operations for the **Material** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materials
    * const materials = await prisma.material.findMany()
    * ```
    */
  get material(): Prisma.MaterialDelegate<ExtArgs>;

  /**
   * `prisma.mengajar`: Exposes CRUD operations for the **Mengajar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mengajars
    * const mengajars = await prisma.mengajar.findMany()
    * ```
    */
  get mengajar(): Prisma.MengajarDelegate<ExtArgs>;

  /**
   * `prisma.modul_kelas`: Exposes CRUD operations for the **Modul_kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modul_kelas
    * const modul_kelas = await prisma.modul_kelas.findMany()
    * ```
    */
  get modul_kelas(): Prisma.Modul_kelasDelegate<ExtArgs>;

  /**
   * `prisma.modul_material`: Exposes CRUD operations for the **Modul_material** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modul_materials
    * const modul_materials = await prisma.modul_material.findMany()
    * ```
    */
  get modul_material(): Prisma.Modul_materialDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.orders_kelas`: Exposes CRUD operations for the **Orders_kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders_kelas
    * const orders_kelas = await prisma.orders_kelas.findMany()
    * ```
    */
  get orders_kelas(): Prisma.Orders_kelasDelegate<ExtArgs>;

  /**
   * `prisma.pembayaran`: Exposes CRUD operations for the **Pembayaran** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pembayarans
    * const pembayarans = await prisma.pembayaran.findMany()
    * ```
    */
  get pembayaran(): Prisma.PembayaranDelegate<ExtArgs>;

  /**
   * `prisma.orders_pembayaran`: Exposes CRUD operations for the **Orders_pembayaran** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders_pembayarans
    * const orders_pembayarans = await prisma.orders_pembayaran.findMany()
    * ```
    */
  get orders_pembayaran(): Prisma.Orders_pembayaranDelegate<ExtArgs>;

  /**
   * `prisma.pretest`: Exposes CRUD operations for the **Pretest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pretests
    * const pretests = await prisma.pretest.findMany()
    * ```
    */
  get pretest(): Prisma.PretestDelegate<ExtArgs>;

  /**
   * `prisma.pretest_kelas`: Exposes CRUD operations for the **Pretest_kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pretest_kelas
    * const pretest_kelas = await prisma.pretest_kelas.findMany()
    * ```
    */
  get pretest_kelas(): Prisma.Pretest_kelasDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.review_pretest`: Exposes CRUD operations for the **Review_pretest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Review_pretests
    * const review_pretests = await prisma.review_pretest.findMany()
    * ```
    */
  get review_pretest(): Prisma.Review_pretestDelegate<ExtArgs>;

  /**
   * `prisma.silabus`: Exposes CRUD operations for the **Silabus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Silabuses
    * const silabuses = await prisma.silabus.findMany()
    * ```
    */
  get silabus(): Prisma.SilabusDelegate<ExtArgs>;

  /**
   * `prisma.transaksi_kelas`: Exposes CRUD operations for the **Transaksi_kelas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaksi_kelas
    * const transaksi_kelas = await prisma.transaksi_kelas.findMany()
    * ```
    */
  get transaksi_kelas(): Prisma.Transaksi_kelasDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.18.0
   * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Tutor: 'Tutor',
    Kelas: 'Kelas',
    Kategori_kelas: 'Kategori_kelas',
    Kategori_kelas_relasi: 'Kategori_kelas_relasi',
    Kelas_saya: 'Kelas_saya',
    Material: 'Material',
    Mengajar: 'Mengajar',
    Modul_kelas: 'Modul_kelas',
    Modul_material: 'Modul_material',
    Order: 'Order',
    Orders_kelas: 'Orders_kelas',
    Pembayaran: 'Pembayaran',
    Orders_pembayaran: 'Orders_pembayaran',
    Pretest: 'Pretest',
    Pretest_kelas: 'Pretest_kelas',
    Review: 'Review',
    Review_pretest: 'Review_pretest',
    Silabus: 'Silabus',
    Transaksi_kelas: 'Transaksi_kelas'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "tutor" | "kelas" | "kategori_kelas" | "kategori_kelas_relasi" | "kelas_saya" | "material" | "mengajar" | "modul_kelas" | "modul_material" | "order" | "orders_kelas" | "pembayaran" | "orders_pembayaran" | "pretest" | "pretest_kelas" | "review" | "review_pretest" | "silabus" | "transaksi_kelas"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Tutor: {
        payload: Prisma.$TutorPayload<ExtArgs>
        fields: Prisma.TutorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TutorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TutorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          findFirst: {
            args: Prisma.TutorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TutorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          findMany: {
            args: Prisma.TutorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>[]
          }
          create: {
            args: Prisma.TutorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          createMany: {
            args: Prisma.TutorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TutorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          update: {
            args: Prisma.TutorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          deleteMany: {
            args: Prisma.TutorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TutorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TutorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          aggregate: {
            args: Prisma.TutorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTutor>
          }
          groupBy: {
            args: Prisma.TutorGroupByArgs<ExtArgs>
            result: $Utils.Optional<TutorGroupByOutputType>[]
          }
          count: {
            args: Prisma.TutorCountArgs<ExtArgs>
            result: $Utils.Optional<TutorCountAggregateOutputType> | number
          }
        }
      }
      Kelas: {
        payload: Prisma.$KelasPayload<ExtArgs>
        fields: Prisma.KelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          findFirst: {
            args: Prisma.KelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          findMany: {
            args: Prisma.KelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>[]
          }
          create: {
            args: Prisma.KelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          createMany: {
            args: Prisma.KelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.KelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          update: {
            args: Prisma.KelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          deleteMany: {
            args: Prisma.KelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.KelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KelasPayload>
          }
          aggregate: {
            args: Prisma.KelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKelas>
          }
          groupBy: {
            args: Prisma.KelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<KelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.KelasCountArgs<ExtArgs>
            result: $Utils.Optional<KelasCountAggregateOutputType> | number
          }
        }
      }
      Kategori_kelas: {
        payload: Prisma.$Kategori_kelasPayload<ExtArgs>
        fields: Prisma.Kategori_kelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Kategori_kelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Kategori_kelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          findFirst: {
            args: Prisma.Kategori_kelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Kategori_kelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          findMany: {
            args: Prisma.Kategori_kelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>[]
          }
          create: {
            args: Prisma.Kategori_kelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          createMany: {
            args: Prisma.Kategori_kelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Kategori_kelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          update: {
            args: Prisma.Kategori_kelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          deleteMany: {
            args: Prisma.Kategori_kelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Kategori_kelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Kategori_kelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelasPayload>
          }
          aggregate: {
            args: Prisma.Kategori_kelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKategori_kelas>
          }
          groupBy: {
            args: Prisma.Kategori_kelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Kategori_kelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Kategori_kelasCountArgs<ExtArgs>
            result: $Utils.Optional<Kategori_kelasCountAggregateOutputType> | number
          }
        }
      }
      Kategori_kelas_relasi: {
        payload: Prisma.$Kategori_kelas_relasiPayload<ExtArgs>
        fields: Prisma.Kategori_kelas_relasiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Kategori_kelas_relasiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Kategori_kelas_relasiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          findFirst: {
            args: Prisma.Kategori_kelas_relasiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Kategori_kelas_relasiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          findMany: {
            args: Prisma.Kategori_kelas_relasiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>[]
          }
          create: {
            args: Prisma.Kategori_kelas_relasiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          createMany: {
            args: Prisma.Kategori_kelas_relasiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Kategori_kelas_relasiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          update: {
            args: Prisma.Kategori_kelas_relasiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          deleteMany: {
            args: Prisma.Kategori_kelas_relasiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Kategori_kelas_relasiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Kategori_kelas_relasiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kategori_kelas_relasiPayload>
          }
          aggregate: {
            args: Prisma.Kategori_kelas_relasiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKategori_kelas_relasi>
          }
          groupBy: {
            args: Prisma.Kategori_kelas_relasiGroupByArgs<ExtArgs>
            result: $Utils.Optional<Kategori_kelas_relasiGroupByOutputType>[]
          }
          count: {
            args: Prisma.Kategori_kelas_relasiCountArgs<ExtArgs>
            result: $Utils.Optional<Kategori_kelas_relasiCountAggregateOutputType> | number
          }
        }
      }
      Kelas_saya: {
        payload: Prisma.$Kelas_sayaPayload<ExtArgs>
        fields: Prisma.Kelas_sayaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Kelas_sayaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Kelas_sayaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          findFirst: {
            args: Prisma.Kelas_sayaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Kelas_sayaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          findMany: {
            args: Prisma.Kelas_sayaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>[]
          }
          create: {
            args: Prisma.Kelas_sayaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          createMany: {
            args: Prisma.Kelas_sayaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Kelas_sayaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          update: {
            args: Prisma.Kelas_sayaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          deleteMany: {
            args: Prisma.Kelas_sayaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Kelas_sayaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Kelas_sayaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Kelas_sayaPayload>
          }
          aggregate: {
            args: Prisma.Kelas_sayaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKelas_saya>
          }
          groupBy: {
            args: Prisma.Kelas_sayaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Kelas_sayaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Kelas_sayaCountArgs<ExtArgs>
            result: $Utils.Optional<Kelas_sayaCountAggregateOutputType> | number
          }
        }
      }
      Material: {
        payload: Prisma.$MaterialPayload<ExtArgs>
        fields: Prisma.MaterialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          findFirst: {
            args: Prisma.MaterialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          findMany: {
            args: Prisma.MaterialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>[]
          }
          create: {
            args: Prisma.MaterialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          createMany: {
            args: Prisma.MaterialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MaterialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          update: {
            args: Prisma.MaterialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          deleteMany: {
            args: Prisma.MaterialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaterialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          aggregate: {
            args: Prisma.MaterialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterial>
          }
          groupBy: {
            args: Prisma.MaterialGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialCountAggregateOutputType> | number
          }
        }
      }
      Mengajar: {
        payload: Prisma.$MengajarPayload<ExtArgs>
        fields: Prisma.MengajarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MengajarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MengajarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          findFirst: {
            args: Prisma.MengajarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MengajarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          findMany: {
            args: Prisma.MengajarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>[]
          }
          create: {
            args: Prisma.MengajarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          createMany: {
            args: Prisma.MengajarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MengajarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          update: {
            args: Prisma.MengajarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          deleteMany: {
            args: Prisma.MengajarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MengajarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MengajarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MengajarPayload>
          }
          aggregate: {
            args: Prisma.MengajarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMengajar>
          }
          groupBy: {
            args: Prisma.MengajarGroupByArgs<ExtArgs>
            result: $Utils.Optional<MengajarGroupByOutputType>[]
          }
          count: {
            args: Prisma.MengajarCountArgs<ExtArgs>
            result: $Utils.Optional<MengajarCountAggregateOutputType> | number
          }
        }
      }
      Modul_kelas: {
        payload: Prisma.$Modul_kelasPayload<ExtArgs>
        fields: Prisma.Modul_kelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Modul_kelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Modul_kelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          findFirst: {
            args: Prisma.Modul_kelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Modul_kelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          findMany: {
            args: Prisma.Modul_kelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>[]
          }
          create: {
            args: Prisma.Modul_kelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          createMany: {
            args: Prisma.Modul_kelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Modul_kelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          update: {
            args: Prisma.Modul_kelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          deleteMany: {
            args: Prisma.Modul_kelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Modul_kelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Modul_kelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_kelasPayload>
          }
          aggregate: {
            args: Prisma.Modul_kelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModul_kelas>
          }
          groupBy: {
            args: Prisma.Modul_kelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Modul_kelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Modul_kelasCountArgs<ExtArgs>
            result: $Utils.Optional<Modul_kelasCountAggregateOutputType> | number
          }
        }
      }
      Modul_material: {
        payload: Prisma.$Modul_materialPayload<ExtArgs>
        fields: Prisma.Modul_materialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Modul_materialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Modul_materialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          findFirst: {
            args: Prisma.Modul_materialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Modul_materialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          findMany: {
            args: Prisma.Modul_materialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>[]
          }
          create: {
            args: Prisma.Modul_materialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          createMany: {
            args: Prisma.Modul_materialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Modul_materialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          update: {
            args: Prisma.Modul_materialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          deleteMany: {
            args: Prisma.Modul_materialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Modul_materialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Modul_materialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Modul_materialPayload>
          }
          aggregate: {
            args: Prisma.Modul_materialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModul_material>
          }
          groupBy: {
            args: Prisma.Modul_materialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Modul_materialGroupByOutputType>[]
          }
          count: {
            args: Prisma.Modul_materialCountArgs<ExtArgs>
            result: $Utils.Optional<Modul_materialCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      Orders_kelas: {
        payload: Prisma.$Orders_kelasPayload<ExtArgs>
        fields: Prisma.Orders_kelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Orders_kelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Orders_kelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          findFirst: {
            args: Prisma.Orders_kelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Orders_kelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          findMany: {
            args: Prisma.Orders_kelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>[]
          }
          create: {
            args: Prisma.Orders_kelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          createMany: {
            args: Prisma.Orders_kelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Orders_kelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          update: {
            args: Prisma.Orders_kelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          deleteMany: {
            args: Prisma.Orders_kelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Orders_kelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Orders_kelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_kelasPayload>
          }
          aggregate: {
            args: Prisma.Orders_kelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders_kelas>
          }
          groupBy: {
            args: Prisma.Orders_kelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Orders_kelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Orders_kelasCountArgs<ExtArgs>
            result: $Utils.Optional<Orders_kelasCountAggregateOutputType> | number
          }
        }
      }
      Pembayaran: {
        payload: Prisma.$PembayaranPayload<ExtArgs>
        fields: Prisma.PembayaranFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PembayaranFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PembayaranFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          findFirst: {
            args: Prisma.PembayaranFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PembayaranFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          findMany: {
            args: Prisma.PembayaranFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>[]
          }
          create: {
            args: Prisma.PembayaranCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          createMany: {
            args: Prisma.PembayaranCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PembayaranDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          update: {
            args: Prisma.PembayaranUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          deleteMany: {
            args: Prisma.PembayaranDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PembayaranUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PembayaranUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PembayaranPayload>
          }
          aggregate: {
            args: Prisma.PembayaranAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePembayaran>
          }
          groupBy: {
            args: Prisma.PembayaranGroupByArgs<ExtArgs>
            result: $Utils.Optional<PembayaranGroupByOutputType>[]
          }
          count: {
            args: Prisma.PembayaranCountArgs<ExtArgs>
            result: $Utils.Optional<PembayaranCountAggregateOutputType> | number
          }
        }
      }
      Orders_pembayaran: {
        payload: Prisma.$Orders_pembayaranPayload<ExtArgs>
        fields: Prisma.Orders_pembayaranFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Orders_pembayaranFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Orders_pembayaranFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          findFirst: {
            args: Prisma.Orders_pembayaranFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Orders_pembayaranFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          findMany: {
            args: Prisma.Orders_pembayaranFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>[]
          }
          create: {
            args: Prisma.Orders_pembayaranCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          createMany: {
            args: Prisma.Orders_pembayaranCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Orders_pembayaranDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          update: {
            args: Prisma.Orders_pembayaranUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          deleteMany: {
            args: Prisma.Orders_pembayaranDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Orders_pembayaranUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Orders_pembayaranUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Orders_pembayaranPayload>
          }
          aggregate: {
            args: Prisma.Orders_pembayaranAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders_pembayaran>
          }
          groupBy: {
            args: Prisma.Orders_pembayaranGroupByArgs<ExtArgs>
            result: $Utils.Optional<Orders_pembayaranGroupByOutputType>[]
          }
          count: {
            args: Prisma.Orders_pembayaranCountArgs<ExtArgs>
            result: $Utils.Optional<Orders_pembayaranCountAggregateOutputType> | number
          }
        }
      }
      Pretest: {
        payload: Prisma.$PretestPayload<ExtArgs>
        fields: Prisma.PretestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PretestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PretestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          findFirst: {
            args: Prisma.PretestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PretestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          findMany: {
            args: Prisma.PretestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>[]
          }
          create: {
            args: Prisma.PretestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          createMany: {
            args: Prisma.PretestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PretestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          update: {
            args: Prisma.PretestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          deleteMany: {
            args: Prisma.PretestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PretestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PretestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PretestPayload>
          }
          aggregate: {
            args: Prisma.PretestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePretest>
          }
          groupBy: {
            args: Prisma.PretestGroupByArgs<ExtArgs>
            result: $Utils.Optional<PretestGroupByOutputType>[]
          }
          count: {
            args: Prisma.PretestCountArgs<ExtArgs>
            result: $Utils.Optional<PretestCountAggregateOutputType> | number
          }
        }
      }
      Pretest_kelas: {
        payload: Prisma.$Pretest_kelasPayload<ExtArgs>
        fields: Prisma.Pretest_kelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Pretest_kelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Pretest_kelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          findFirst: {
            args: Prisma.Pretest_kelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Pretest_kelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          findMany: {
            args: Prisma.Pretest_kelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>[]
          }
          create: {
            args: Prisma.Pretest_kelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          createMany: {
            args: Prisma.Pretest_kelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Pretest_kelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          update: {
            args: Prisma.Pretest_kelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          deleteMany: {
            args: Prisma.Pretest_kelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Pretest_kelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Pretest_kelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pretest_kelasPayload>
          }
          aggregate: {
            args: Prisma.Pretest_kelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePretest_kelas>
          }
          groupBy: {
            args: Prisma.Pretest_kelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pretest_kelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Pretest_kelasCountArgs<ExtArgs>
            result: $Utils.Optional<Pretest_kelasCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Review_pretest: {
        payload: Prisma.$Review_pretestPayload<ExtArgs>
        fields: Prisma.Review_pretestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Review_pretestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Review_pretestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          findFirst: {
            args: Prisma.Review_pretestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Review_pretestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          findMany: {
            args: Prisma.Review_pretestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>[]
          }
          create: {
            args: Prisma.Review_pretestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          createMany: {
            args: Prisma.Review_pretestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Review_pretestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          update: {
            args: Prisma.Review_pretestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          deleteMany: {
            args: Prisma.Review_pretestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Review_pretestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Review_pretestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Review_pretestPayload>
          }
          aggregate: {
            args: Prisma.Review_pretestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview_pretest>
          }
          groupBy: {
            args: Prisma.Review_pretestGroupByArgs<ExtArgs>
            result: $Utils.Optional<Review_pretestGroupByOutputType>[]
          }
          count: {
            args: Prisma.Review_pretestCountArgs<ExtArgs>
            result: $Utils.Optional<Review_pretestCountAggregateOutputType> | number
          }
        }
      }
      Silabus: {
        payload: Prisma.$SilabusPayload<ExtArgs>
        fields: Prisma.SilabusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SilabusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SilabusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          findFirst: {
            args: Prisma.SilabusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SilabusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          findMany: {
            args: Prisma.SilabusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>[]
          }
          create: {
            args: Prisma.SilabusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          createMany: {
            args: Prisma.SilabusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SilabusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          update: {
            args: Prisma.SilabusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          deleteMany: {
            args: Prisma.SilabusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SilabusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SilabusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SilabusPayload>
          }
          aggregate: {
            args: Prisma.SilabusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSilabus>
          }
          groupBy: {
            args: Prisma.SilabusGroupByArgs<ExtArgs>
            result: $Utils.Optional<SilabusGroupByOutputType>[]
          }
          count: {
            args: Prisma.SilabusCountArgs<ExtArgs>
            result: $Utils.Optional<SilabusCountAggregateOutputType> | number
          }
        }
      }
      Transaksi_kelas: {
        payload: Prisma.$Transaksi_kelasPayload<ExtArgs>
        fields: Prisma.Transaksi_kelasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Transaksi_kelasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Transaksi_kelasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          findFirst: {
            args: Prisma.Transaksi_kelasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Transaksi_kelasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          findMany: {
            args: Prisma.Transaksi_kelasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>[]
          }
          create: {
            args: Prisma.Transaksi_kelasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          createMany: {
            args: Prisma.Transaksi_kelasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Transaksi_kelasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          update: {
            args: Prisma.Transaksi_kelasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          deleteMany: {
            args: Prisma.Transaksi_kelasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Transaksi_kelasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Transaksi_kelasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Transaksi_kelasPayload>
          }
          aggregate: {
            args: Prisma.Transaksi_kelasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaksi_kelas>
          }
          groupBy: {
            args: Prisma.Transaksi_kelasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Transaksi_kelasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Transaksi_kelasCountArgs<ExtArgs>
            result: $Utils.Optional<Transaksi_kelasCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TutorCountOutputType
   */

  export type TutorCountOutputType = {
    mengajar: number
  }

  export type TutorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mengajar?: boolean | TutorCountOutputTypeCountMengajarArgs
  }

  // Custom InputTypes
  /**
   * TutorCountOutputType without action
   */
  export type TutorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TutorCountOutputType
     */
    select?: TutorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TutorCountOutputType without action
   */
  export type TutorCountOutputTypeCountMengajarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MengajarWhereInput
  }


  /**
   * Count Type KelasCountOutputType
   */

  export type KelasCountOutputType = {
    kategori_kelas_relasi: number
    mengajar: number
    silabus: number
    transaksi_kelas: number
  }

  export type KelasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kategori_kelas_relasi?: boolean | KelasCountOutputTypeCountKategori_kelas_relasiArgs
    mengajar?: boolean | KelasCountOutputTypeCountMengajarArgs
    silabus?: boolean | KelasCountOutputTypeCountSilabusArgs
    transaksi_kelas?: boolean | KelasCountOutputTypeCountTransaksi_kelasArgs
  }

  // Custom InputTypes
  /**
   * KelasCountOutputType without action
   */
  export type KelasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KelasCountOutputType
     */
    select?: KelasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KelasCountOutputType without action
   */
  export type KelasCountOutputTypeCountKategori_kelas_relasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Kategori_kelas_relasiWhereInput
  }

  /**
   * KelasCountOutputType without action
   */
  export type KelasCountOutputTypeCountMengajarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MengajarWhereInput
  }

  /**
   * KelasCountOutputType without action
   */
  export type KelasCountOutputTypeCountSilabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SilabusWhereInput
  }

  /**
   * KelasCountOutputType without action
   */
  export type KelasCountOutputTypeCountTransaksi_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Transaksi_kelasWhereInput
  }


  /**
   * Count Type Kategori_kelasCountOutputType
   */

  export type Kategori_kelasCountOutputType = {
    kategori_kelas_relasi: number
  }

  export type Kategori_kelasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kategori_kelas_relasi?: boolean | Kategori_kelasCountOutputTypeCountKategori_kelas_relasiArgs
  }

  // Custom InputTypes
  /**
   * Kategori_kelasCountOutputType without action
   */
  export type Kategori_kelasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelasCountOutputType
     */
    select?: Kategori_kelasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Kategori_kelasCountOutputType without action
   */
  export type Kategori_kelasCountOutputTypeCountKategori_kelas_relasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Kategori_kelas_relasiWhereInput
  }


  /**
   * Count Type Kelas_sayaCountOutputType
   */

  export type Kelas_sayaCountOutputType = {
    orders_kelas: number
    pretest_kelas: number
  }

  export type Kelas_sayaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_kelas?: boolean | Kelas_sayaCountOutputTypeCountOrders_kelasArgs
    pretest_kelas?: boolean | Kelas_sayaCountOutputTypeCountPretest_kelasArgs
  }

  // Custom InputTypes
  /**
   * Kelas_sayaCountOutputType without action
   */
  export type Kelas_sayaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_sayaCountOutputType
     */
    select?: Kelas_sayaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Kelas_sayaCountOutputType without action
   */
  export type Kelas_sayaCountOutputTypeCountOrders_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_kelasWhereInput
  }

  /**
   * Kelas_sayaCountOutputType without action
   */
  export type Kelas_sayaCountOutputTypeCountPretest_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pretest_kelasWhereInput
  }


  /**
   * Count Type MaterialCountOutputType
   */

  export type MaterialCountOutputType = {
    modul_material: number
  }

  export type MaterialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modul_material?: boolean | MaterialCountOutputTypeCountModul_materialArgs
  }

  // Custom InputTypes
  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialCountOutputType
     */
    select?: MaterialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeCountModul_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Modul_materialWhereInput
  }


  /**
   * Count Type Modul_kelasCountOutputType
   */

  export type Modul_kelasCountOutputType = {
    modul_material: number
    silabus: number
  }

  export type Modul_kelasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modul_material?: boolean | Modul_kelasCountOutputTypeCountModul_materialArgs
    silabus?: boolean | Modul_kelasCountOutputTypeCountSilabusArgs
  }

  // Custom InputTypes
  /**
   * Modul_kelasCountOutputType without action
   */
  export type Modul_kelasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelasCountOutputType
     */
    select?: Modul_kelasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Modul_kelasCountOutputType without action
   */
  export type Modul_kelasCountOutputTypeCountModul_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Modul_materialWhereInput
  }

  /**
   * Modul_kelasCountOutputType without action
   */
  export type Modul_kelasCountOutputTypeCountSilabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SilabusWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    orders_kelas: number
    orders_pembayaran: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_kelas?: boolean | OrderCountOutputTypeCountOrders_kelasArgs
    orders_pembayaran?: boolean | OrderCountOutputTypeCountOrders_pembayaranArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrders_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_kelasWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrders_pembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_pembayaranWhereInput
  }


  /**
   * Count Type PembayaranCountOutputType
   */

  export type PembayaranCountOutputType = {
    orders_pembayaran: number
    transaksi_kelas: number
  }

  export type PembayaranCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_pembayaran?: boolean | PembayaranCountOutputTypeCountOrders_pembayaranArgs
    transaksi_kelas?: boolean | PembayaranCountOutputTypeCountTransaksi_kelasArgs
  }

  // Custom InputTypes
  /**
   * PembayaranCountOutputType without action
   */
  export type PembayaranCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PembayaranCountOutputType
     */
    select?: PembayaranCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PembayaranCountOutputType without action
   */
  export type PembayaranCountOutputTypeCountOrders_pembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_pembayaranWhereInput
  }

  /**
   * PembayaranCountOutputType without action
   */
  export type PembayaranCountOutputTypeCountTransaksi_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Transaksi_kelasWhereInput
  }


  /**
   * Count Type PretestCountOutputType
   */

  export type PretestCountOutputType = {
    pretest_kelas: number
    review_pretest: number
  }

  export type PretestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pretest_kelas?: boolean | PretestCountOutputTypeCountPretest_kelasArgs
    review_pretest?: boolean | PretestCountOutputTypeCountReview_pretestArgs
  }

  // Custom InputTypes
  /**
   * PretestCountOutputType without action
   */
  export type PretestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PretestCountOutputType
     */
    select?: PretestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PretestCountOutputType without action
   */
  export type PretestCountOutputTypeCountPretest_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pretest_kelasWhereInput
  }

  /**
   * PretestCountOutputType without action
   */
  export type PretestCountOutputTypeCountReview_pretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Review_pretestWhereInput
  }


  /**
   * Count Type ReviewCountOutputType
   */

  export type ReviewCountOutputType = {
    review_pretest: number
  }

  export type ReviewCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    review_pretest?: boolean | ReviewCountOutputTypeCountReview_pretestArgs
  }

  // Custom InputTypes
  /**
   * ReviewCountOutputType without action
   */
  export type ReviewCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReviewCountOutputType
     */
    select?: ReviewCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReviewCountOutputType without action
   */
  export type ReviewCountOutputTypeCountReview_pretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Review_pretestWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    emailToken: string | null
    isVerified: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    emailToken: string | null
    isVerified: boolean | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    fullname: number
    username: number
    email: number
    password: number
    emailToken: number
    isVerified: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    emailToken?: true
    isVerified?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    emailToken?: true
    isVerified?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    emailToken?: true
    isVerified?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    fullname: string | null
    username: string
    email: string
    password: string
    emailToken: string | null
    isVerified: boolean | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    emailToken?: boolean
    isVerified?: boolean
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    emailToken?: boolean
    isVerified?: boolean
  }


  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fullname: string | null
      username: string
      email: string
      password: string
      emailToken: string | null
      isVerified: boolean | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly fullname: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly emailToken: FieldRef<"User", 'String'>
    readonly isVerified: FieldRef<"User", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
  }


  /**
   * Model Tutor
   */

  export type AggregateTutor = {
    _count: TutorCountAggregateOutputType | null
    _min: TutorMinAggregateOutputType | null
    _max: TutorMaxAggregateOutputType | null
  }

  export type TutorMinAggregateOutputType = {
    nama: string | null
    email: string | null
    password: string | null
    jabatan: string | null
    perusahaan: string | null
    created_at: Date | null
  }

  export type TutorMaxAggregateOutputType = {
    nama: string | null
    email: string | null
    password: string | null
    jabatan: string | null
    perusahaan: string | null
    created_at: Date | null
  }

  export type TutorCountAggregateOutputType = {
    nama: number
    email: number
    password: number
    jabatan: number
    perusahaan: number
    created_at: number
    _all: number
  }


  export type TutorMinAggregateInputType = {
    nama?: true
    email?: true
    password?: true
    jabatan?: true
    perusahaan?: true
    created_at?: true
  }

  export type TutorMaxAggregateInputType = {
    nama?: true
    email?: true
    password?: true
    jabatan?: true
    perusahaan?: true
    created_at?: true
  }

  export type TutorCountAggregateInputType = {
    nama?: true
    email?: true
    password?: true
    jabatan?: true
    perusahaan?: true
    created_at?: true
    _all?: true
  }

  export type TutorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tutor to aggregate.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tutors
    **/
    _count?: true | TutorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TutorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TutorMaxAggregateInputType
  }

  export type GetTutorAggregateType<T extends TutorAggregateArgs> = {
        [P in keyof T & keyof AggregateTutor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTutor[P]>
      : GetScalarType<T[P], AggregateTutor[P]>
  }




  export type TutorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TutorWhereInput
    orderBy?: TutorOrderByWithAggregationInput | TutorOrderByWithAggregationInput[]
    by: TutorScalarFieldEnum[] | TutorScalarFieldEnum
    having?: TutorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TutorCountAggregateInputType | true
    _min?: TutorMinAggregateInputType
    _max?: TutorMaxAggregateInputType
  }

  export type TutorGroupByOutputType = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at: Date
    _count: TutorCountAggregateOutputType | null
    _min: TutorMinAggregateOutputType | null
    _max: TutorMaxAggregateOutputType | null
  }

  type GetTutorGroupByPayload<T extends TutorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TutorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TutorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TutorGroupByOutputType[P]>
            : GetScalarType<T[P], TutorGroupByOutputType[P]>
        }
      >
    >


  export type TutorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nama?: boolean
    email?: boolean
    password?: boolean
    jabatan?: boolean
    perusahaan?: boolean
    created_at?: boolean
    mengajar?: boolean | Tutor$mengajarArgs<ExtArgs>
    _count?: boolean | TutorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tutor"]>


  export type TutorSelectScalar = {
    nama?: boolean
    email?: boolean
    password?: boolean
    jabatan?: boolean
    perusahaan?: boolean
    created_at?: boolean
  }

  export type TutorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mengajar?: boolean | Tutor$mengajarArgs<ExtArgs>
    _count?: boolean | TutorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TutorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tutor"
    objects: {
      mengajar: Prisma.$MengajarPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nama: string
      email: string
      password: string
      jabatan: string
      perusahaan: string
      created_at: Date
    }, ExtArgs["result"]["tutor"]>
    composites: {}
  }

  type TutorGetPayload<S extends boolean | null | undefined | TutorDefaultArgs> = $Result.GetResult<Prisma.$TutorPayload, S>

  type TutorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TutorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TutorCountAggregateInputType | true
    }

  export interface TutorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tutor'], meta: { name: 'Tutor' } }
    /**
     * Find zero or one Tutor that matches the filter.
     * @param {TutorFindUniqueArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TutorFindUniqueArgs>(args: SelectSubset<T, TutorFindUniqueArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tutor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TutorFindUniqueOrThrowArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TutorFindUniqueOrThrowArgs>(args: SelectSubset<T, TutorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tutor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindFirstArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TutorFindFirstArgs>(args?: SelectSubset<T, TutorFindFirstArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tutor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindFirstOrThrowArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TutorFindFirstOrThrowArgs>(args?: SelectSubset<T, TutorFindFirstOrThrowArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tutors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tutors
     * const tutors = await prisma.tutor.findMany()
     * 
     * // Get first 10 Tutors
     * const tutors = await prisma.tutor.findMany({ take: 10 })
     * 
     * // Only select the `nama`
     * const tutorWithNamaOnly = await prisma.tutor.findMany({ select: { nama: true } })
     * 
     */
    findMany<T extends TutorFindManyArgs>(args?: SelectSubset<T, TutorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tutor.
     * @param {TutorCreateArgs} args - Arguments to create a Tutor.
     * @example
     * // Create one Tutor
     * const Tutor = await prisma.tutor.create({
     *   data: {
     *     // ... data to create a Tutor
     *   }
     * })
     * 
     */
    create<T extends TutorCreateArgs>(args: SelectSubset<T, TutorCreateArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tutors.
     * @param {TutorCreateManyArgs} args - Arguments to create many Tutors.
     * @example
     * // Create many Tutors
     * const tutor = await prisma.tutor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TutorCreateManyArgs>(args?: SelectSubset<T, TutorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tutor.
     * @param {TutorDeleteArgs} args - Arguments to delete one Tutor.
     * @example
     * // Delete one Tutor
     * const Tutor = await prisma.tutor.delete({
     *   where: {
     *     // ... filter to delete one Tutor
     *   }
     * })
     * 
     */
    delete<T extends TutorDeleteArgs>(args: SelectSubset<T, TutorDeleteArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tutor.
     * @param {TutorUpdateArgs} args - Arguments to update one Tutor.
     * @example
     * // Update one Tutor
     * const tutor = await prisma.tutor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TutorUpdateArgs>(args: SelectSubset<T, TutorUpdateArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tutors.
     * @param {TutorDeleteManyArgs} args - Arguments to filter Tutors to delete.
     * @example
     * // Delete a few Tutors
     * const { count } = await prisma.tutor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TutorDeleteManyArgs>(args?: SelectSubset<T, TutorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tutors
     * const tutor = await prisma.tutor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TutorUpdateManyArgs>(args: SelectSubset<T, TutorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tutor.
     * @param {TutorUpsertArgs} args - Arguments to update or create a Tutor.
     * @example
     * // Update or create a Tutor
     * const tutor = await prisma.tutor.upsert({
     *   create: {
     *     // ... data to create a Tutor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tutor we want to update
     *   }
     * })
     */
    upsert<T extends TutorUpsertArgs>(args: SelectSubset<T, TutorUpsertArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorCountArgs} args - Arguments to filter Tutors to count.
     * @example
     * // Count the number of Tutors
     * const count = await prisma.tutor.count({
     *   where: {
     *     // ... the filter for the Tutors we want to count
     *   }
     * })
    **/
    count<T extends TutorCountArgs>(
      args?: Subset<T, TutorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TutorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TutorAggregateArgs>(args: Subset<T, TutorAggregateArgs>): Prisma.PrismaPromise<GetTutorAggregateType<T>>

    /**
     * Group by Tutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TutorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TutorGroupByArgs['orderBy'] }
        : { orderBy?: TutorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TutorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTutorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tutor model
   */
  readonly fields: TutorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tutor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TutorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mengajar<T extends Tutor$mengajarArgs<ExtArgs> = {}>(args?: Subset<T, Tutor$mengajarArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tutor model
   */ 
  interface TutorFieldRefs {
    readonly nama: FieldRef<"Tutor", 'String'>
    readonly email: FieldRef<"Tutor", 'String'>
    readonly password: FieldRef<"Tutor", 'String'>
    readonly jabatan: FieldRef<"Tutor", 'String'>
    readonly perusahaan: FieldRef<"Tutor", 'String'>
    readonly created_at: FieldRef<"Tutor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tutor findUnique
   */
  export type TutorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor findUniqueOrThrow
   */
  export type TutorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor findFirst
   */
  export type TutorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tutors.
     */
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor findFirstOrThrow
   */
  export type TutorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tutors.
     */
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor findMany
   */
  export type TutorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutors to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor create
   */
  export type TutorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The data needed to create a Tutor.
     */
    data: XOR<TutorCreateInput, TutorUncheckedCreateInput>
  }

  /**
   * Tutor createMany
   */
  export type TutorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tutors.
     */
    data: TutorCreateManyInput | TutorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tutor update
   */
  export type TutorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The data needed to update a Tutor.
     */
    data: XOR<TutorUpdateInput, TutorUncheckedUpdateInput>
    /**
     * Choose, which Tutor to update.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor updateMany
   */
  export type TutorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tutors.
     */
    data: XOR<TutorUpdateManyMutationInput, TutorUncheckedUpdateManyInput>
    /**
     * Filter which Tutors to update
     */
    where?: TutorWhereInput
  }

  /**
   * Tutor upsert
   */
  export type TutorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The filter to search for the Tutor to update in case it exists.
     */
    where: TutorWhereUniqueInput
    /**
     * In case the Tutor found by the `where` argument doesn't exist, create a new Tutor with this data.
     */
    create: XOR<TutorCreateInput, TutorUncheckedCreateInput>
    /**
     * In case the Tutor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TutorUpdateInput, TutorUncheckedUpdateInput>
  }

  /**
   * Tutor delete
   */
  export type TutorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter which Tutor to delete.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor deleteMany
   */
  export type TutorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tutors to delete
     */
    where?: TutorWhereInput
  }

  /**
   * Tutor.mengajar
   */
  export type Tutor$mengajarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    where?: MengajarWhereInput
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    cursor?: MengajarWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MengajarScalarFieldEnum | MengajarScalarFieldEnum[]
  }

  /**
   * Tutor without action
   */
  export type TutorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
  }


  /**
   * Model Kelas
   */

  export type AggregateKelas = {
    _count: KelasCountAggregateOutputType | null
    _avg: KelasAvgAggregateOutputType | null
    _sum: KelasSumAggregateOutputType | null
    _min: KelasMinAggregateOutputType | null
    _max: KelasMaxAggregateOutputType | null
  }

  export type KelasAvgAggregateOutputType = {
    id: number | null
    harga: Decimal | null
  }

  export type KelasSumAggregateOutputType = {
    id: number | null
    harga: Decimal | null
  }

  export type KelasMinAggregateOutputType = {
    id: number | null
    nama: string | null
    harga: Decimal | null
    deskripsi: string | null
    background_foto: string | null
    video: string | null
    created_at: Date | null
  }

  export type KelasMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    harga: Decimal | null
    deskripsi: string | null
    background_foto: string | null
    video: string | null
    created_at: Date | null
  }

  export type KelasCountAggregateOutputType = {
    id: number
    nama: number
    harga: number
    deskripsi: number
    background_foto: number
    video: number
    created_at: number
    _all: number
  }


  export type KelasAvgAggregateInputType = {
    id?: true
    harga?: true
  }

  export type KelasSumAggregateInputType = {
    id?: true
    harga?: true
  }

  export type KelasMinAggregateInputType = {
    id?: true
    nama?: true
    harga?: true
    deskripsi?: true
    background_foto?: true
    video?: true
    created_at?: true
  }

  export type KelasMaxAggregateInputType = {
    id?: true
    nama?: true
    harga?: true
    deskripsi?: true
    background_foto?: true
    video?: true
    created_at?: true
  }

  export type KelasCountAggregateInputType = {
    id?: true
    nama?: true
    harga?: true
    deskripsi?: true
    background_foto?: true
    video?: true
    created_at?: true
    _all?: true
  }

  export type KelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kelas to aggregate.
     */
    where?: KelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas to fetch.
     */
    orderBy?: KelasOrderByWithRelationInput | KelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kelas
    **/
    _count?: true | KelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KelasMaxAggregateInputType
  }

  export type GetKelasAggregateType<T extends KelasAggregateArgs> = {
        [P in keyof T & keyof AggregateKelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKelas[P]>
      : GetScalarType<T[P], AggregateKelas[P]>
  }




  export type KelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KelasWhereInput
    orderBy?: KelasOrderByWithAggregationInput | KelasOrderByWithAggregationInput[]
    by: KelasScalarFieldEnum[] | KelasScalarFieldEnum
    having?: KelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KelasCountAggregateInputType | true
    _avg?: KelasAvgAggregateInputType
    _sum?: KelasSumAggregateInputType
    _min?: KelasMinAggregateInputType
    _max?: KelasMaxAggregateInputType
  }

  export type KelasGroupByOutputType = {
    id: number
    nama: string
    harga: Decimal
    deskripsi: string
    background_foto: string
    video: string
    created_at: Date
    _count: KelasCountAggregateOutputType | null
    _avg: KelasAvgAggregateOutputType | null
    _sum: KelasSumAggregateOutputType | null
    _min: KelasMinAggregateOutputType | null
    _max: KelasMaxAggregateOutputType | null
  }

  type GetKelasGroupByPayload<T extends KelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KelasGroupByOutputType[P]>
            : GetScalarType<T[P], KelasGroupByOutputType[P]>
        }
      >
    >


  export type KelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    harga?: boolean
    deskripsi?: boolean
    background_foto?: boolean
    video?: boolean
    created_at?: boolean
    kategori_kelas_relasi?: boolean | Kelas$kategori_kelas_relasiArgs<ExtArgs>
    mengajar?: boolean | Kelas$mengajarArgs<ExtArgs>
    silabus?: boolean | Kelas$silabusArgs<ExtArgs>
    transaksi_kelas?: boolean | Kelas$transaksi_kelasArgs<ExtArgs>
    _count?: boolean | KelasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kelas"]>


  export type KelasSelectScalar = {
    id?: boolean
    nama?: boolean
    harga?: boolean
    deskripsi?: boolean
    background_foto?: boolean
    video?: boolean
    created_at?: boolean
  }

  export type KelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kategori_kelas_relasi?: boolean | Kelas$kategori_kelas_relasiArgs<ExtArgs>
    mengajar?: boolean | Kelas$mengajarArgs<ExtArgs>
    silabus?: boolean | Kelas$silabusArgs<ExtArgs>
    transaksi_kelas?: boolean | Kelas$transaksi_kelasArgs<ExtArgs>
    _count?: boolean | KelasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $KelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kelas"
    objects: {
      kategori_kelas_relasi: Prisma.$Kategori_kelas_relasiPayload<ExtArgs>[]
      mengajar: Prisma.$MengajarPayload<ExtArgs>[]
      silabus: Prisma.$SilabusPayload<ExtArgs>[]
      transaksi_kelas: Prisma.$Transaksi_kelasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      harga: Prisma.Decimal
      deskripsi: string
      background_foto: string
      video: string
      created_at: Date
    }, ExtArgs["result"]["kelas"]>
    composites: {}
  }

  type KelasGetPayload<S extends boolean | null | undefined | KelasDefaultArgs> = $Result.GetResult<Prisma.$KelasPayload, S>

  type KelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<KelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KelasCountAggregateInputType | true
    }

  export interface KelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kelas'], meta: { name: 'Kelas' } }
    /**
     * Find zero or one Kelas that matches the filter.
     * @param {KelasFindUniqueArgs} args - Arguments to find a Kelas
     * @example
     * // Get one Kelas
     * const kelas = await prisma.kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KelasFindUniqueArgs>(args: SelectSubset<T, KelasFindUniqueArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {KelasFindUniqueOrThrowArgs} args - Arguments to find a Kelas
     * @example
     * // Get one Kelas
     * const kelas = await prisma.kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KelasFindUniqueOrThrowArgs>(args: SelectSubset<T, KelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasFindFirstArgs} args - Arguments to find a Kelas
     * @example
     * // Get one Kelas
     * const kelas = await prisma.kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KelasFindFirstArgs>(args?: SelectSubset<T, KelasFindFirstArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasFindFirstOrThrowArgs} args - Arguments to find a Kelas
     * @example
     * // Get one Kelas
     * const kelas = await prisma.kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KelasFindFirstOrThrowArgs>(args?: SelectSubset<T, KelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kelas
     * const kelas = await prisma.kelas.findMany()
     * 
     * // Get first 10 Kelas
     * const kelas = await prisma.kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kelasWithIdOnly = await prisma.kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends KelasFindManyArgs>(args?: SelectSubset<T, KelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Kelas.
     * @param {KelasCreateArgs} args - Arguments to create a Kelas.
     * @example
     * // Create one Kelas
     * const Kelas = await prisma.kelas.create({
     *   data: {
     *     // ... data to create a Kelas
     *   }
     * })
     * 
     */
    create<T extends KelasCreateArgs>(args: SelectSubset<T, KelasCreateArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Kelas.
     * @param {KelasCreateManyArgs} args - Arguments to create many Kelas.
     * @example
     * // Create many Kelas
     * const kelas = await prisma.kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KelasCreateManyArgs>(args?: SelectSubset<T, KelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kelas.
     * @param {KelasDeleteArgs} args - Arguments to delete one Kelas.
     * @example
     * // Delete one Kelas
     * const Kelas = await prisma.kelas.delete({
     *   where: {
     *     // ... filter to delete one Kelas
     *   }
     * })
     * 
     */
    delete<T extends KelasDeleteArgs>(args: SelectSubset<T, KelasDeleteArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Kelas.
     * @param {KelasUpdateArgs} args - Arguments to update one Kelas.
     * @example
     * // Update one Kelas
     * const kelas = await prisma.kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KelasUpdateArgs>(args: SelectSubset<T, KelasUpdateArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Kelas.
     * @param {KelasDeleteManyArgs} args - Arguments to filter Kelas to delete.
     * @example
     * // Delete a few Kelas
     * const { count } = await prisma.kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KelasDeleteManyArgs>(args?: SelectSubset<T, KelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kelas
     * const kelas = await prisma.kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KelasUpdateManyArgs>(args: SelectSubset<T, KelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kelas.
     * @param {KelasUpsertArgs} args - Arguments to update or create a Kelas.
     * @example
     * // Update or create a Kelas
     * const kelas = await prisma.kelas.upsert({
     *   create: {
     *     // ... data to create a Kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kelas we want to update
     *   }
     * })
     */
    upsert<T extends KelasUpsertArgs>(args: SelectSubset<T, KelasUpsertArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasCountArgs} args - Arguments to filter Kelas to count.
     * @example
     * // Count the number of Kelas
     * const count = await prisma.kelas.count({
     *   where: {
     *     // ... the filter for the Kelas we want to count
     *   }
     * })
    **/
    count<T extends KelasCountArgs>(
      args?: Subset<T, KelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KelasAggregateArgs>(args: Subset<T, KelasAggregateArgs>): Prisma.PrismaPromise<GetKelasAggregateType<T>>

    /**
     * Group by Kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KelasGroupByArgs['orderBy'] }
        : { orderBy?: KelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kelas model
   */
  readonly fields: KelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kategori_kelas_relasi<T extends Kelas$kategori_kelas_relasiArgs<ExtArgs> = {}>(args?: Subset<T, Kelas$kategori_kelas_relasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findMany"> | Null>
    mengajar<T extends Kelas$mengajarArgs<ExtArgs> = {}>(args?: Subset<T, Kelas$mengajarArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findMany"> | Null>
    silabus<T extends Kelas$silabusArgs<ExtArgs> = {}>(args?: Subset<T, Kelas$silabusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findMany"> | Null>
    transaksi_kelas<T extends Kelas$transaksi_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Kelas$transaksi_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kelas model
   */ 
  interface KelasFieldRefs {
    readonly id: FieldRef<"Kelas", 'Int'>
    readonly nama: FieldRef<"Kelas", 'String'>
    readonly harga: FieldRef<"Kelas", 'Decimal'>
    readonly deskripsi: FieldRef<"Kelas", 'String'>
    readonly background_foto: FieldRef<"Kelas", 'String'>
    readonly video: FieldRef<"Kelas", 'String'>
    readonly created_at: FieldRef<"Kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Kelas findUnique
   */
  export type KelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter, which Kelas to fetch.
     */
    where: KelasWhereUniqueInput
  }

  /**
   * Kelas findUniqueOrThrow
   */
  export type KelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter, which Kelas to fetch.
     */
    where: KelasWhereUniqueInput
  }

  /**
   * Kelas findFirst
   */
  export type KelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter, which Kelas to fetch.
     */
    where?: KelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas to fetch.
     */
    orderBy?: KelasOrderByWithRelationInput | KelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kelas.
     */
    cursor?: KelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kelas.
     */
    distinct?: KelasScalarFieldEnum | KelasScalarFieldEnum[]
  }

  /**
   * Kelas findFirstOrThrow
   */
  export type KelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter, which Kelas to fetch.
     */
    where?: KelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas to fetch.
     */
    orderBy?: KelasOrderByWithRelationInput | KelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kelas.
     */
    cursor?: KelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kelas.
     */
    distinct?: KelasScalarFieldEnum | KelasScalarFieldEnum[]
  }

  /**
   * Kelas findMany
   */
  export type KelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter, which Kelas to fetch.
     */
    where?: KelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas to fetch.
     */
    orderBy?: KelasOrderByWithRelationInput | KelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kelas.
     */
    cursor?: KelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas.
     */
    skip?: number
    distinct?: KelasScalarFieldEnum | KelasScalarFieldEnum[]
  }

  /**
   * Kelas create
   */
  export type KelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Kelas.
     */
    data: XOR<KelasCreateInput, KelasUncheckedCreateInput>
  }

  /**
   * Kelas createMany
   */
  export type KelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kelas.
     */
    data: KelasCreateManyInput | KelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kelas update
   */
  export type KelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Kelas.
     */
    data: XOR<KelasUpdateInput, KelasUncheckedUpdateInput>
    /**
     * Choose, which Kelas to update.
     */
    where: KelasWhereUniqueInput
  }

  /**
   * Kelas updateMany
   */
  export type KelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kelas.
     */
    data: XOR<KelasUpdateManyMutationInput, KelasUncheckedUpdateManyInput>
    /**
     * Filter which Kelas to update
     */
    where?: KelasWhereInput
  }

  /**
   * Kelas upsert
   */
  export type KelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Kelas to update in case it exists.
     */
    where: KelasWhereUniqueInput
    /**
     * In case the Kelas found by the `where` argument doesn't exist, create a new Kelas with this data.
     */
    create: XOR<KelasCreateInput, KelasUncheckedCreateInput>
    /**
     * In case the Kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KelasUpdateInput, KelasUncheckedUpdateInput>
  }

  /**
   * Kelas delete
   */
  export type KelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
    /**
     * Filter which Kelas to delete.
     */
    where: KelasWhereUniqueInput
  }

  /**
   * Kelas deleteMany
   */
  export type KelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kelas to delete
     */
    where?: KelasWhereInput
  }

  /**
   * Kelas.kategori_kelas_relasi
   */
  export type Kelas$kategori_kelas_relasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    where?: Kategori_kelas_relasiWhereInput
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Kategori_kelas_relasiScalarFieldEnum | Kategori_kelas_relasiScalarFieldEnum[]
  }

  /**
   * Kelas.mengajar
   */
  export type Kelas$mengajarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    where?: MengajarWhereInput
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    cursor?: MengajarWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MengajarScalarFieldEnum | MengajarScalarFieldEnum[]
  }

  /**
   * Kelas.silabus
   */
  export type Kelas$silabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    where?: SilabusWhereInput
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    cursor?: SilabusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SilabusScalarFieldEnum | SilabusScalarFieldEnum[]
  }

  /**
   * Kelas.transaksi_kelas
   */
  export type Kelas$transaksi_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    where?: Transaksi_kelasWhereInput
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    cursor?: Transaksi_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Transaksi_kelasScalarFieldEnum | Transaksi_kelasScalarFieldEnum[]
  }

  /**
   * Kelas without action
   */
  export type KelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas
     */
    select?: KelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KelasInclude<ExtArgs> | null
  }


  /**
   * Model Kategori_kelas
   */

  export type AggregateKategori_kelas = {
    _count: Kategori_kelasCountAggregateOutputType | null
    _avg: Kategori_kelasAvgAggregateOutputType | null
    _sum: Kategori_kelasSumAggregateOutputType | null
    _min: Kategori_kelasMinAggregateOutputType | null
    _max: Kategori_kelasMaxAggregateOutputType | null
  }

  export type Kategori_kelasAvgAggregateOutputType = {
    id: number | null
  }

  export type Kategori_kelasSumAggregateOutputType = {
    id: number | null
  }

  export type Kategori_kelasMinAggregateOutputType = {
    id: number | null
    nama: string | null
    created_at: Date | null
  }

  export type Kategori_kelasMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    created_at: Date | null
  }

  export type Kategori_kelasCountAggregateOutputType = {
    id: number
    nama: number
    created_at: number
    _all: number
  }


  export type Kategori_kelasAvgAggregateInputType = {
    id?: true
  }

  export type Kategori_kelasSumAggregateInputType = {
    id?: true
  }

  export type Kategori_kelasMinAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
  }

  export type Kategori_kelasMaxAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
  }

  export type Kategori_kelasCountAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
    _all?: true
  }

  export type Kategori_kelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kategori_kelas to aggregate.
     */
    where?: Kategori_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas to fetch.
     */
    orderBy?: Kategori_kelasOrderByWithRelationInput | Kategori_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Kategori_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kategori_kelas
    **/
    _count?: true | Kategori_kelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Kategori_kelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Kategori_kelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Kategori_kelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Kategori_kelasMaxAggregateInputType
  }

  export type GetKategori_kelasAggregateType<T extends Kategori_kelasAggregateArgs> = {
        [P in keyof T & keyof AggregateKategori_kelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKategori_kelas[P]>
      : GetScalarType<T[P], AggregateKategori_kelas[P]>
  }




  export type Kategori_kelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Kategori_kelasWhereInput
    orderBy?: Kategori_kelasOrderByWithAggregationInput | Kategori_kelasOrderByWithAggregationInput[]
    by: Kategori_kelasScalarFieldEnum[] | Kategori_kelasScalarFieldEnum
    having?: Kategori_kelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Kategori_kelasCountAggregateInputType | true
    _avg?: Kategori_kelasAvgAggregateInputType
    _sum?: Kategori_kelasSumAggregateInputType
    _min?: Kategori_kelasMinAggregateInputType
    _max?: Kategori_kelasMaxAggregateInputType
  }

  export type Kategori_kelasGroupByOutputType = {
    id: number
    nama: string
    created_at: Date
    _count: Kategori_kelasCountAggregateOutputType | null
    _avg: Kategori_kelasAvgAggregateOutputType | null
    _sum: Kategori_kelasSumAggregateOutputType | null
    _min: Kategori_kelasMinAggregateOutputType | null
    _max: Kategori_kelasMaxAggregateOutputType | null
  }

  type GetKategori_kelasGroupByPayload<T extends Kategori_kelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Kategori_kelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Kategori_kelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Kategori_kelasGroupByOutputType[P]>
            : GetScalarType<T[P], Kategori_kelasGroupByOutputType[P]>
        }
      >
    >


  export type Kategori_kelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    created_at?: boolean
    kategori_kelas_relasi?: boolean | Kategori_kelas$kategori_kelas_relasiArgs<ExtArgs>
    _count?: boolean | Kategori_kelasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kategori_kelas"]>


  export type Kategori_kelasSelectScalar = {
    id?: boolean
    nama?: boolean
    created_at?: boolean
  }

  export type Kategori_kelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kategori_kelas_relasi?: boolean | Kategori_kelas$kategori_kelas_relasiArgs<ExtArgs>
    _count?: boolean | Kategori_kelasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Kategori_kelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kategori_kelas"
    objects: {
      kategori_kelas_relasi: Prisma.$Kategori_kelas_relasiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      created_at: Date
    }, ExtArgs["result"]["kategori_kelas"]>
    composites: {}
  }

  type Kategori_kelasGetPayload<S extends boolean | null | undefined | Kategori_kelasDefaultArgs> = $Result.GetResult<Prisma.$Kategori_kelasPayload, S>

  type Kategori_kelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Kategori_kelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Kategori_kelasCountAggregateInputType | true
    }

  export interface Kategori_kelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kategori_kelas'], meta: { name: 'Kategori_kelas' } }
    /**
     * Find zero or one Kategori_kelas that matches the filter.
     * @param {Kategori_kelasFindUniqueArgs} args - Arguments to find a Kategori_kelas
     * @example
     * // Get one Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Kategori_kelasFindUniqueArgs>(args: SelectSubset<T, Kategori_kelasFindUniqueArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Kategori_kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Kategori_kelasFindUniqueOrThrowArgs} args - Arguments to find a Kategori_kelas
     * @example
     * // Get one Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Kategori_kelasFindUniqueOrThrowArgs>(args: SelectSubset<T, Kategori_kelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Kategori_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasFindFirstArgs} args - Arguments to find a Kategori_kelas
     * @example
     * // Get one Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Kategori_kelasFindFirstArgs>(args?: SelectSubset<T, Kategori_kelasFindFirstArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Kategori_kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasFindFirstOrThrowArgs} args - Arguments to find a Kategori_kelas
     * @example
     * // Get one Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Kategori_kelasFindFirstOrThrowArgs>(args?: SelectSubset<T, Kategori_kelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Kategori_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findMany()
     * 
     * // Get first 10 Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kategori_kelasWithIdOnly = await prisma.kategori_kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Kategori_kelasFindManyArgs>(args?: SelectSubset<T, Kategori_kelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Kategori_kelas.
     * @param {Kategori_kelasCreateArgs} args - Arguments to create a Kategori_kelas.
     * @example
     * // Create one Kategori_kelas
     * const Kategori_kelas = await prisma.kategori_kelas.create({
     *   data: {
     *     // ... data to create a Kategori_kelas
     *   }
     * })
     * 
     */
    create<T extends Kategori_kelasCreateArgs>(args: SelectSubset<T, Kategori_kelasCreateArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Kategori_kelas.
     * @param {Kategori_kelasCreateManyArgs} args - Arguments to create many Kategori_kelas.
     * @example
     * // Create many Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Kategori_kelasCreateManyArgs>(args?: SelectSubset<T, Kategori_kelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kategori_kelas.
     * @param {Kategori_kelasDeleteArgs} args - Arguments to delete one Kategori_kelas.
     * @example
     * // Delete one Kategori_kelas
     * const Kategori_kelas = await prisma.kategori_kelas.delete({
     *   where: {
     *     // ... filter to delete one Kategori_kelas
     *   }
     * })
     * 
     */
    delete<T extends Kategori_kelasDeleteArgs>(args: SelectSubset<T, Kategori_kelasDeleteArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Kategori_kelas.
     * @param {Kategori_kelasUpdateArgs} args - Arguments to update one Kategori_kelas.
     * @example
     * // Update one Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Kategori_kelasUpdateArgs>(args: SelectSubset<T, Kategori_kelasUpdateArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Kategori_kelas.
     * @param {Kategori_kelasDeleteManyArgs} args - Arguments to filter Kategori_kelas to delete.
     * @example
     * // Delete a few Kategori_kelas
     * const { count } = await prisma.kategori_kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Kategori_kelasDeleteManyArgs>(args?: SelectSubset<T, Kategori_kelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kategori_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Kategori_kelasUpdateManyArgs>(args: SelectSubset<T, Kategori_kelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kategori_kelas.
     * @param {Kategori_kelasUpsertArgs} args - Arguments to update or create a Kategori_kelas.
     * @example
     * // Update or create a Kategori_kelas
     * const kategori_kelas = await prisma.kategori_kelas.upsert({
     *   create: {
     *     // ... data to create a Kategori_kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kategori_kelas we want to update
     *   }
     * })
     */
    upsert<T extends Kategori_kelasUpsertArgs>(args: SelectSubset<T, Kategori_kelasUpsertArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Kategori_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasCountArgs} args - Arguments to filter Kategori_kelas to count.
     * @example
     * // Count the number of Kategori_kelas
     * const count = await prisma.kategori_kelas.count({
     *   where: {
     *     // ... the filter for the Kategori_kelas we want to count
     *   }
     * })
    **/
    count<T extends Kategori_kelasCountArgs>(
      args?: Subset<T, Kategori_kelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Kategori_kelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kategori_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Kategori_kelasAggregateArgs>(args: Subset<T, Kategori_kelasAggregateArgs>): Prisma.PrismaPromise<GetKategori_kelasAggregateType<T>>

    /**
     * Group by Kategori_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Kategori_kelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Kategori_kelasGroupByArgs['orderBy'] }
        : { orderBy?: Kategori_kelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Kategori_kelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKategori_kelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kategori_kelas model
   */
  readonly fields: Kategori_kelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kategori_kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Kategori_kelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kategori_kelas_relasi<T extends Kategori_kelas$kategori_kelas_relasiArgs<ExtArgs> = {}>(args?: Subset<T, Kategori_kelas$kategori_kelas_relasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kategori_kelas model
   */ 
  interface Kategori_kelasFieldRefs {
    readonly id: FieldRef<"Kategori_kelas", 'Int'>
    readonly nama: FieldRef<"Kategori_kelas", 'String'>
    readonly created_at: FieldRef<"Kategori_kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Kategori_kelas findUnique
   */
  export type Kategori_kelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas to fetch.
     */
    where: Kategori_kelasWhereUniqueInput
  }

  /**
   * Kategori_kelas findUniqueOrThrow
   */
  export type Kategori_kelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas to fetch.
     */
    where: Kategori_kelasWhereUniqueInput
  }

  /**
   * Kategori_kelas findFirst
   */
  export type Kategori_kelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas to fetch.
     */
    where?: Kategori_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas to fetch.
     */
    orderBy?: Kategori_kelasOrderByWithRelationInput | Kategori_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kategori_kelas.
     */
    cursor?: Kategori_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kategori_kelas.
     */
    distinct?: Kategori_kelasScalarFieldEnum | Kategori_kelasScalarFieldEnum[]
  }

  /**
   * Kategori_kelas findFirstOrThrow
   */
  export type Kategori_kelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas to fetch.
     */
    where?: Kategori_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas to fetch.
     */
    orderBy?: Kategori_kelasOrderByWithRelationInput | Kategori_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kategori_kelas.
     */
    cursor?: Kategori_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kategori_kelas.
     */
    distinct?: Kategori_kelasScalarFieldEnum | Kategori_kelasScalarFieldEnum[]
  }

  /**
   * Kategori_kelas findMany
   */
  export type Kategori_kelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas to fetch.
     */
    where?: Kategori_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas to fetch.
     */
    orderBy?: Kategori_kelasOrderByWithRelationInput | Kategori_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kategori_kelas.
     */
    cursor?: Kategori_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas.
     */
    skip?: number
    distinct?: Kategori_kelasScalarFieldEnum | Kategori_kelasScalarFieldEnum[]
  }

  /**
   * Kategori_kelas create
   */
  export type Kategori_kelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Kategori_kelas.
     */
    data: XOR<Kategori_kelasCreateInput, Kategori_kelasUncheckedCreateInput>
  }

  /**
   * Kategori_kelas createMany
   */
  export type Kategori_kelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kategori_kelas.
     */
    data: Kategori_kelasCreateManyInput | Kategori_kelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kategori_kelas update
   */
  export type Kategori_kelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Kategori_kelas.
     */
    data: XOR<Kategori_kelasUpdateInput, Kategori_kelasUncheckedUpdateInput>
    /**
     * Choose, which Kategori_kelas to update.
     */
    where: Kategori_kelasWhereUniqueInput
  }

  /**
   * Kategori_kelas updateMany
   */
  export type Kategori_kelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kategori_kelas.
     */
    data: XOR<Kategori_kelasUpdateManyMutationInput, Kategori_kelasUncheckedUpdateManyInput>
    /**
     * Filter which Kategori_kelas to update
     */
    where?: Kategori_kelasWhereInput
  }

  /**
   * Kategori_kelas upsert
   */
  export type Kategori_kelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Kategori_kelas to update in case it exists.
     */
    where: Kategori_kelasWhereUniqueInput
    /**
     * In case the Kategori_kelas found by the `where` argument doesn't exist, create a new Kategori_kelas with this data.
     */
    create: XOR<Kategori_kelasCreateInput, Kategori_kelasUncheckedCreateInput>
    /**
     * In case the Kategori_kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Kategori_kelasUpdateInput, Kategori_kelasUncheckedUpdateInput>
  }

  /**
   * Kategori_kelas delete
   */
  export type Kategori_kelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
    /**
     * Filter which Kategori_kelas to delete.
     */
    where: Kategori_kelasWhereUniqueInput
  }

  /**
   * Kategori_kelas deleteMany
   */
  export type Kategori_kelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kategori_kelas to delete
     */
    where?: Kategori_kelasWhereInput
  }

  /**
   * Kategori_kelas.kategori_kelas_relasi
   */
  export type Kategori_kelas$kategori_kelas_relasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    where?: Kategori_kelas_relasiWhereInput
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Kategori_kelas_relasiScalarFieldEnum | Kategori_kelas_relasiScalarFieldEnum[]
  }

  /**
   * Kategori_kelas without action
   */
  export type Kategori_kelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas
     */
    select?: Kategori_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelasInclude<ExtArgs> | null
  }


  /**
   * Model Kategori_kelas_relasi
   */

  export type AggregateKategori_kelas_relasi = {
    _count: Kategori_kelas_relasiCountAggregateOutputType | null
    _avg: Kategori_kelas_relasiAvgAggregateOutputType | null
    _sum: Kategori_kelas_relasiSumAggregateOutputType | null
    _min: Kategori_kelas_relasiMinAggregateOutputType | null
    _max: Kategori_kelas_relasiMaxAggregateOutputType | null
  }

  export type Kategori_kelas_relasiAvgAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_kategori_kelas: number | null
  }

  export type Kategori_kelas_relasiSumAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_kategori_kelas: number | null
  }

  export type Kategori_kelas_relasiMinAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_kategori_kelas: number | null
    created_at: Date | null
  }

  export type Kategori_kelas_relasiMaxAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_kategori_kelas: number | null
    created_at: Date | null
  }

  export type Kategori_kelas_relasiCountAggregateOutputType = {
    id: number
    id_kelas: number
    id_kategori_kelas: number
    created_at: number
    _all: number
  }


  export type Kategori_kelas_relasiAvgAggregateInputType = {
    id?: true
    id_kelas?: true
    id_kategori_kelas?: true
  }

  export type Kategori_kelas_relasiSumAggregateInputType = {
    id?: true
    id_kelas?: true
    id_kategori_kelas?: true
  }

  export type Kategori_kelas_relasiMinAggregateInputType = {
    id?: true
    id_kelas?: true
    id_kategori_kelas?: true
    created_at?: true
  }

  export type Kategori_kelas_relasiMaxAggregateInputType = {
    id?: true
    id_kelas?: true
    id_kategori_kelas?: true
    created_at?: true
  }

  export type Kategori_kelas_relasiCountAggregateInputType = {
    id?: true
    id_kelas?: true
    id_kategori_kelas?: true
    created_at?: true
    _all?: true
  }

  export type Kategori_kelas_relasiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kategori_kelas_relasi to aggregate.
     */
    where?: Kategori_kelas_relasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas_relasis to fetch.
     */
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas_relasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas_relasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kategori_kelas_relasis
    **/
    _count?: true | Kategori_kelas_relasiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Kategori_kelas_relasiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Kategori_kelas_relasiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Kategori_kelas_relasiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Kategori_kelas_relasiMaxAggregateInputType
  }

  export type GetKategori_kelas_relasiAggregateType<T extends Kategori_kelas_relasiAggregateArgs> = {
        [P in keyof T & keyof AggregateKategori_kelas_relasi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKategori_kelas_relasi[P]>
      : GetScalarType<T[P], AggregateKategori_kelas_relasi[P]>
  }




  export type Kategori_kelas_relasiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Kategori_kelas_relasiWhereInput
    orderBy?: Kategori_kelas_relasiOrderByWithAggregationInput | Kategori_kelas_relasiOrderByWithAggregationInput[]
    by: Kategori_kelas_relasiScalarFieldEnum[] | Kategori_kelas_relasiScalarFieldEnum
    having?: Kategori_kelas_relasiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Kategori_kelas_relasiCountAggregateInputType | true
    _avg?: Kategori_kelas_relasiAvgAggregateInputType
    _sum?: Kategori_kelas_relasiSumAggregateInputType
    _min?: Kategori_kelas_relasiMinAggregateInputType
    _max?: Kategori_kelas_relasiMaxAggregateInputType
  }

  export type Kategori_kelas_relasiGroupByOutputType = {
    id: number
    id_kelas: number
    id_kategori_kelas: number
    created_at: Date
    _count: Kategori_kelas_relasiCountAggregateOutputType | null
    _avg: Kategori_kelas_relasiAvgAggregateOutputType | null
    _sum: Kategori_kelas_relasiSumAggregateOutputType | null
    _min: Kategori_kelas_relasiMinAggregateOutputType | null
    _max: Kategori_kelas_relasiMaxAggregateOutputType | null
  }

  type GetKategori_kelas_relasiGroupByPayload<T extends Kategori_kelas_relasiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Kategori_kelas_relasiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Kategori_kelas_relasiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Kategori_kelas_relasiGroupByOutputType[P]>
            : GetScalarType<T[P], Kategori_kelas_relasiGroupByOutputType[P]>
        }
      >
    >


  export type Kategori_kelas_relasiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_kelas?: boolean
    id_kategori_kelas?: boolean
    created_at?: boolean
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    kategori_kelas?: boolean | Kategori_kelasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kategori_kelas_relasi"]>


  export type Kategori_kelas_relasiSelectScalar = {
    id?: boolean
    id_kelas?: boolean
    id_kategori_kelas?: boolean
    created_at?: boolean
  }

  export type Kategori_kelas_relasiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    kategori_kelas?: boolean | Kategori_kelasDefaultArgs<ExtArgs>
  }

  export type $Kategori_kelas_relasiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kategori_kelas_relasi"
    objects: {
      kelas: Prisma.$KelasPayload<ExtArgs>
      kategori_kelas: Prisma.$Kategori_kelasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_kelas: number
      id_kategori_kelas: number
      created_at: Date
    }, ExtArgs["result"]["kategori_kelas_relasi"]>
    composites: {}
  }

  type Kategori_kelas_relasiGetPayload<S extends boolean | null | undefined | Kategori_kelas_relasiDefaultArgs> = $Result.GetResult<Prisma.$Kategori_kelas_relasiPayload, S>

  type Kategori_kelas_relasiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Kategori_kelas_relasiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Kategori_kelas_relasiCountAggregateInputType | true
    }

  export interface Kategori_kelas_relasiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kategori_kelas_relasi'], meta: { name: 'Kategori_kelas_relasi' } }
    /**
     * Find zero or one Kategori_kelas_relasi that matches the filter.
     * @param {Kategori_kelas_relasiFindUniqueArgs} args - Arguments to find a Kategori_kelas_relasi
     * @example
     * // Get one Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Kategori_kelas_relasiFindUniqueArgs>(args: SelectSubset<T, Kategori_kelas_relasiFindUniqueArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Kategori_kelas_relasi that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Kategori_kelas_relasiFindUniqueOrThrowArgs} args - Arguments to find a Kategori_kelas_relasi
     * @example
     * // Get one Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Kategori_kelas_relasiFindUniqueOrThrowArgs>(args: SelectSubset<T, Kategori_kelas_relasiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Kategori_kelas_relasi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiFindFirstArgs} args - Arguments to find a Kategori_kelas_relasi
     * @example
     * // Get one Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Kategori_kelas_relasiFindFirstArgs>(args?: SelectSubset<T, Kategori_kelas_relasiFindFirstArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Kategori_kelas_relasi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiFindFirstOrThrowArgs} args - Arguments to find a Kategori_kelas_relasi
     * @example
     * // Get one Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Kategori_kelas_relasiFindFirstOrThrowArgs>(args?: SelectSubset<T, Kategori_kelas_relasiFindFirstOrThrowArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Kategori_kelas_relasis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kategori_kelas_relasis
     * const kategori_kelas_relasis = await prisma.kategori_kelas_relasi.findMany()
     * 
     * // Get first 10 Kategori_kelas_relasis
     * const kategori_kelas_relasis = await prisma.kategori_kelas_relasi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kategori_kelas_relasiWithIdOnly = await prisma.kategori_kelas_relasi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Kategori_kelas_relasiFindManyArgs>(args?: SelectSubset<T, Kategori_kelas_relasiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Kategori_kelas_relasi.
     * @param {Kategori_kelas_relasiCreateArgs} args - Arguments to create a Kategori_kelas_relasi.
     * @example
     * // Create one Kategori_kelas_relasi
     * const Kategori_kelas_relasi = await prisma.kategori_kelas_relasi.create({
     *   data: {
     *     // ... data to create a Kategori_kelas_relasi
     *   }
     * })
     * 
     */
    create<T extends Kategori_kelas_relasiCreateArgs>(args: SelectSubset<T, Kategori_kelas_relasiCreateArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Kategori_kelas_relasis.
     * @param {Kategori_kelas_relasiCreateManyArgs} args - Arguments to create many Kategori_kelas_relasis.
     * @example
     * // Create many Kategori_kelas_relasis
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Kategori_kelas_relasiCreateManyArgs>(args?: SelectSubset<T, Kategori_kelas_relasiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kategori_kelas_relasi.
     * @param {Kategori_kelas_relasiDeleteArgs} args - Arguments to delete one Kategori_kelas_relasi.
     * @example
     * // Delete one Kategori_kelas_relasi
     * const Kategori_kelas_relasi = await prisma.kategori_kelas_relasi.delete({
     *   where: {
     *     // ... filter to delete one Kategori_kelas_relasi
     *   }
     * })
     * 
     */
    delete<T extends Kategori_kelas_relasiDeleteArgs>(args: SelectSubset<T, Kategori_kelas_relasiDeleteArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Kategori_kelas_relasi.
     * @param {Kategori_kelas_relasiUpdateArgs} args - Arguments to update one Kategori_kelas_relasi.
     * @example
     * // Update one Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Kategori_kelas_relasiUpdateArgs>(args: SelectSubset<T, Kategori_kelas_relasiUpdateArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Kategori_kelas_relasis.
     * @param {Kategori_kelas_relasiDeleteManyArgs} args - Arguments to filter Kategori_kelas_relasis to delete.
     * @example
     * // Delete a few Kategori_kelas_relasis
     * const { count } = await prisma.kategori_kelas_relasi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Kategori_kelas_relasiDeleteManyArgs>(args?: SelectSubset<T, Kategori_kelas_relasiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kategori_kelas_relasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kategori_kelas_relasis
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Kategori_kelas_relasiUpdateManyArgs>(args: SelectSubset<T, Kategori_kelas_relasiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kategori_kelas_relasi.
     * @param {Kategori_kelas_relasiUpsertArgs} args - Arguments to update or create a Kategori_kelas_relasi.
     * @example
     * // Update or create a Kategori_kelas_relasi
     * const kategori_kelas_relasi = await prisma.kategori_kelas_relasi.upsert({
     *   create: {
     *     // ... data to create a Kategori_kelas_relasi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kategori_kelas_relasi we want to update
     *   }
     * })
     */
    upsert<T extends Kategori_kelas_relasiUpsertArgs>(args: SelectSubset<T, Kategori_kelas_relasiUpsertArgs<ExtArgs>>): Prisma__Kategori_kelas_relasiClient<$Result.GetResult<Prisma.$Kategori_kelas_relasiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Kategori_kelas_relasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiCountArgs} args - Arguments to filter Kategori_kelas_relasis to count.
     * @example
     * // Count the number of Kategori_kelas_relasis
     * const count = await prisma.kategori_kelas_relasi.count({
     *   where: {
     *     // ... the filter for the Kategori_kelas_relasis we want to count
     *   }
     * })
    **/
    count<T extends Kategori_kelas_relasiCountArgs>(
      args?: Subset<T, Kategori_kelas_relasiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Kategori_kelas_relasiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kategori_kelas_relasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Kategori_kelas_relasiAggregateArgs>(args: Subset<T, Kategori_kelas_relasiAggregateArgs>): Prisma.PrismaPromise<GetKategori_kelas_relasiAggregateType<T>>

    /**
     * Group by Kategori_kelas_relasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kategori_kelas_relasiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Kategori_kelas_relasiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Kategori_kelas_relasiGroupByArgs['orderBy'] }
        : { orderBy?: Kategori_kelas_relasiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Kategori_kelas_relasiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKategori_kelas_relasiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kategori_kelas_relasi model
   */
  readonly fields: Kategori_kelas_relasiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kategori_kelas_relasi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Kategori_kelas_relasiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kelas<T extends KelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KelasDefaultArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    kategori_kelas<T extends Kategori_kelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Kategori_kelasDefaultArgs<ExtArgs>>): Prisma__Kategori_kelasClient<$Result.GetResult<Prisma.$Kategori_kelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kategori_kelas_relasi model
   */ 
  interface Kategori_kelas_relasiFieldRefs {
    readonly id: FieldRef<"Kategori_kelas_relasi", 'Int'>
    readonly id_kelas: FieldRef<"Kategori_kelas_relasi", 'Int'>
    readonly id_kategori_kelas: FieldRef<"Kategori_kelas_relasi", 'Int'>
    readonly created_at: FieldRef<"Kategori_kelas_relasi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Kategori_kelas_relasi findUnique
   */
  export type Kategori_kelas_relasiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas_relasi to fetch.
     */
    where: Kategori_kelas_relasiWhereUniqueInput
  }

  /**
   * Kategori_kelas_relasi findUniqueOrThrow
   */
  export type Kategori_kelas_relasiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas_relasi to fetch.
     */
    where: Kategori_kelas_relasiWhereUniqueInput
  }

  /**
   * Kategori_kelas_relasi findFirst
   */
  export type Kategori_kelas_relasiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas_relasi to fetch.
     */
    where?: Kategori_kelas_relasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas_relasis to fetch.
     */
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kategori_kelas_relasis.
     */
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas_relasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas_relasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kategori_kelas_relasis.
     */
    distinct?: Kategori_kelas_relasiScalarFieldEnum | Kategori_kelas_relasiScalarFieldEnum[]
  }

  /**
   * Kategori_kelas_relasi findFirstOrThrow
   */
  export type Kategori_kelas_relasiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas_relasi to fetch.
     */
    where?: Kategori_kelas_relasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas_relasis to fetch.
     */
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kategori_kelas_relasis.
     */
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas_relasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas_relasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kategori_kelas_relasis.
     */
    distinct?: Kategori_kelas_relasiScalarFieldEnum | Kategori_kelas_relasiScalarFieldEnum[]
  }

  /**
   * Kategori_kelas_relasi findMany
   */
  export type Kategori_kelas_relasiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter, which Kategori_kelas_relasis to fetch.
     */
    where?: Kategori_kelas_relasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kategori_kelas_relasis to fetch.
     */
    orderBy?: Kategori_kelas_relasiOrderByWithRelationInput | Kategori_kelas_relasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kategori_kelas_relasis.
     */
    cursor?: Kategori_kelas_relasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kategori_kelas_relasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kategori_kelas_relasis.
     */
    skip?: number
    distinct?: Kategori_kelas_relasiScalarFieldEnum | Kategori_kelas_relasiScalarFieldEnum[]
  }

  /**
   * Kategori_kelas_relasi create
   */
  export type Kategori_kelas_relasiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * The data needed to create a Kategori_kelas_relasi.
     */
    data: XOR<Kategori_kelas_relasiCreateInput, Kategori_kelas_relasiUncheckedCreateInput>
  }

  /**
   * Kategori_kelas_relasi createMany
   */
  export type Kategori_kelas_relasiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kategori_kelas_relasis.
     */
    data: Kategori_kelas_relasiCreateManyInput | Kategori_kelas_relasiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kategori_kelas_relasi update
   */
  export type Kategori_kelas_relasiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * The data needed to update a Kategori_kelas_relasi.
     */
    data: XOR<Kategori_kelas_relasiUpdateInput, Kategori_kelas_relasiUncheckedUpdateInput>
    /**
     * Choose, which Kategori_kelas_relasi to update.
     */
    where: Kategori_kelas_relasiWhereUniqueInput
  }

  /**
   * Kategori_kelas_relasi updateMany
   */
  export type Kategori_kelas_relasiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kategori_kelas_relasis.
     */
    data: XOR<Kategori_kelas_relasiUpdateManyMutationInput, Kategori_kelas_relasiUncheckedUpdateManyInput>
    /**
     * Filter which Kategori_kelas_relasis to update
     */
    where?: Kategori_kelas_relasiWhereInput
  }

  /**
   * Kategori_kelas_relasi upsert
   */
  export type Kategori_kelas_relasiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * The filter to search for the Kategori_kelas_relasi to update in case it exists.
     */
    where: Kategori_kelas_relasiWhereUniqueInput
    /**
     * In case the Kategori_kelas_relasi found by the `where` argument doesn't exist, create a new Kategori_kelas_relasi with this data.
     */
    create: XOR<Kategori_kelas_relasiCreateInput, Kategori_kelas_relasiUncheckedCreateInput>
    /**
     * In case the Kategori_kelas_relasi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Kategori_kelas_relasiUpdateInput, Kategori_kelas_relasiUncheckedUpdateInput>
  }

  /**
   * Kategori_kelas_relasi delete
   */
  export type Kategori_kelas_relasiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
    /**
     * Filter which Kategori_kelas_relasi to delete.
     */
    where: Kategori_kelas_relasiWhereUniqueInput
  }

  /**
   * Kategori_kelas_relasi deleteMany
   */
  export type Kategori_kelas_relasiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kategori_kelas_relasis to delete
     */
    where?: Kategori_kelas_relasiWhereInput
  }

  /**
   * Kategori_kelas_relasi without action
   */
  export type Kategori_kelas_relasiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kategori_kelas_relasi
     */
    select?: Kategori_kelas_relasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kategori_kelas_relasiInclude<ExtArgs> | null
  }


  /**
   * Model Kelas_saya
   */

  export type AggregateKelas_saya = {
    _count: Kelas_sayaCountAggregateOutputType | null
    _avg: Kelas_sayaAvgAggregateOutputType | null
    _sum: Kelas_sayaSumAggregateOutputType | null
    _min: Kelas_sayaMinAggregateOutputType | null
    _max: Kelas_sayaMaxAggregateOutputType | null
  }

  export type Kelas_sayaAvgAggregateOutputType = {
    id: number | null
    progres_kelas: number | null
  }

  export type Kelas_sayaSumAggregateOutputType = {
    id: number | null
    progres_kelas: number | null
  }

  export type Kelas_sayaMinAggregateOutputType = {
    id: number | null
    progres_kelas: number | null
    status_kelas: $Enums.Status_kelas | null
    created_at: Date | null
  }

  export type Kelas_sayaMaxAggregateOutputType = {
    id: number | null
    progres_kelas: number | null
    status_kelas: $Enums.Status_kelas | null
    created_at: Date | null
  }

  export type Kelas_sayaCountAggregateOutputType = {
    id: number
    progres_kelas: number
    status_kelas: number
    created_at: number
    _all: number
  }


  export type Kelas_sayaAvgAggregateInputType = {
    id?: true
    progres_kelas?: true
  }

  export type Kelas_sayaSumAggregateInputType = {
    id?: true
    progres_kelas?: true
  }

  export type Kelas_sayaMinAggregateInputType = {
    id?: true
    progres_kelas?: true
    status_kelas?: true
    created_at?: true
  }

  export type Kelas_sayaMaxAggregateInputType = {
    id?: true
    progres_kelas?: true
    status_kelas?: true
    created_at?: true
  }

  export type Kelas_sayaCountAggregateInputType = {
    id?: true
    progres_kelas?: true
    status_kelas?: true
    created_at?: true
    _all?: true
  }

  export type Kelas_sayaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kelas_saya to aggregate.
     */
    where?: Kelas_sayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas_sayas to fetch.
     */
    orderBy?: Kelas_sayaOrderByWithRelationInput | Kelas_sayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Kelas_sayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas_sayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas_sayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kelas_sayas
    **/
    _count?: true | Kelas_sayaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Kelas_sayaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Kelas_sayaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Kelas_sayaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Kelas_sayaMaxAggregateInputType
  }

  export type GetKelas_sayaAggregateType<T extends Kelas_sayaAggregateArgs> = {
        [P in keyof T & keyof AggregateKelas_saya]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKelas_saya[P]>
      : GetScalarType<T[P], AggregateKelas_saya[P]>
  }




  export type Kelas_sayaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Kelas_sayaWhereInput
    orderBy?: Kelas_sayaOrderByWithAggregationInput | Kelas_sayaOrderByWithAggregationInput[]
    by: Kelas_sayaScalarFieldEnum[] | Kelas_sayaScalarFieldEnum
    having?: Kelas_sayaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Kelas_sayaCountAggregateInputType | true
    _avg?: Kelas_sayaAvgAggregateInputType
    _sum?: Kelas_sayaSumAggregateInputType
    _min?: Kelas_sayaMinAggregateInputType
    _max?: Kelas_sayaMaxAggregateInputType
  }

  export type Kelas_sayaGroupByOutputType = {
    id: number
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at: Date
    _count: Kelas_sayaCountAggregateOutputType | null
    _avg: Kelas_sayaAvgAggregateOutputType | null
    _sum: Kelas_sayaSumAggregateOutputType | null
    _min: Kelas_sayaMinAggregateOutputType | null
    _max: Kelas_sayaMaxAggregateOutputType | null
  }

  type GetKelas_sayaGroupByPayload<T extends Kelas_sayaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Kelas_sayaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Kelas_sayaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Kelas_sayaGroupByOutputType[P]>
            : GetScalarType<T[P], Kelas_sayaGroupByOutputType[P]>
        }
      >
    >


  export type Kelas_sayaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    progres_kelas?: boolean
    status_kelas?: boolean
    created_at?: boolean
    orders_kelas?: boolean | Kelas_saya$orders_kelasArgs<ExtArgs>
    pretest_kelas?: boolean | Kelas_saya$pretest_kelasArgs<ExtArgs>
    _count?: boolean | Kelas_sayaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kelas_saya"]>


  export type Kelas_sayaSelectScalar = {
    id?: boolean
    progres_kelas?: boolean
    status_kelas?: boolean
    created_at?: boolean
  }

  export type Kelas_sayaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_kelas?: boolean | Kelas_saya$orders_kelasArgs<ExtArgs>
    pretest_kelas?: boolean | Kelas_saya$pretest_kelasArgs<ExtArgs>
    _count?: boolean | Kelas_sayaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Kelas_sayaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kelas_saya"
    objects: {
      orders_kelas: Prisma.$Orders_kelasPayload<ExtArgs>[]
      pretest_kelas: Prisma.$Pretest_kelasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      progres_kelas: number
      status_kelas: $Enums.Status_kelas
      created_at: Date
    }, ExtArgs["result"]["kelas_saya"]>
    composites: {}
  }

  type Kelas_sayaGetPayload<S extends boolean | null | undefined | Kelas_sayaDefaultArgs> = $Result.GetResult<Prisma.$Kelas_sayaPayload, S>

  type Kelas_sayaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Kelas_sayaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Kelas_sayaCountAggregateInputType | true
    }

  export interface Kelas_sayaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kelas_saya'], meta: { name: 'Kelas_saya' } }
    /**
     * Find zero or one Kelas_saya that matches the filter.
     * @param {Kelas_sayaFindUniqueArgs} args - Arguments to find a Kelas_saya
     * @example
     * // Get one Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Kelas_sayaFindUniqueArgs>(args: SelectSubset<T, Kelas_sayaFindUniqueArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Kelas_saya that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Kelas_sayaFindUniqueOrThrowArgs} args - Arguments to find a Kelas_saya
     * @example
     * // Get one Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Kelas_sayaFindUniqueOrThrowArgs>(args: SelectSubset<T, Kelas_sayaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Kelas_saya that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaFindFirstArgs} args - Arguments to find a Kelas_saya
     * @example
     * // Get one Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Kelas_sayaFindFirstArgs>(args?: SelectSubset<T, Kelas_sayaFindFirstArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Kelas_saya that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaFindFirstOrThrowArgs} args - Arguments to find a Kelas_saya
     * @example
     * // Get one Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Kelas_sayaFindFirstOrThrowArgs>(args?: SelectSubset<T, Kelas_sayaFindFirstOrThrowArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Kelas_sayas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kelas_sayas
     * const kelas_sayas = await prisma.kelas_saya.findMany()
     * 
     * // Get first 10 Kelas_sayas
     * const kelas_sayas = await prisma.kelas_saya.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kelas_sayaWithIdOnly = await prisma.kelas_saya.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Kelas_sayaFindManyArgs>(args?: SelectSubset<T, Kelas_sayaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Kelas_saya.
     * @param {Kelas_sayaCreateArgs} args - Arguments to create a Kelas_saya.
     * @example
     * // Create one Kelas_saya
     * const Kelas_saya = await prisma.kelas_saya.create({
     *   data: {
     *     // ... data to create a Kelas_saya
     *   }
     * })
     * 
     */
    create<T extends Kelas_sayaCreateArgs>(args: SelectSubset<T, Kelas_sayaCreateArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Kelas_sayas.
     * @param {Kelas_sayaCreateManyArgs} args - Arguments to create many Kelas_sayas.
     * @example
     * // Create many Kelas_sayas
     * const kelas_saya = await prisma.kelas_saya.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Kelas_sayaCreateManyArgs>(args?: SelectSubset<T, Kelas_sayaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kelas_saya.
     * @param {Kelas_sayaDeleteArgs} args - Arguments to delete one Kelas_saya.
     * @example
     * // Delete one Kelas_saya
     * const Kelas_saya = await prisma.kelas_saya.delete({
     *   where: {
     *     // ... filter to delete one Kelas_saya
     *   }
     * })
     * 
     */
    delete<T extends Kelas_sayaDeleteArgs>(args: SelectSubset<T, Kelas_sayaDeleteArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Kelas_saya.
     * @param {Kelas_sayaUpdateArgs} args - Arguments to update one Kelas_saya.
     * @example
     * // Update one Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Kelas_sayaUpdateArgs>(args: SelectSubset<T, Kelas_sayaUpdateArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Kelas_sayas.
     * @param {Kelas_sayaDeleteManyArgs} args - Arguments to filter Kelas_sayas to delete.
     * @example
     * // Delete a few Kelas_sayas
     * const { count } = await prisma.kelas_saya.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Kelas_sayaDeleteManyArgs>(args?: SelectSubset<T, Kelas_sayaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kelas_sayas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kelas_sayas
     * const kelas_saya = await prisma.kelas_saya.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Kelas_sayaUpdateManyArgs>(args: SelectSubset<T, Kelas_sayaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kelas_saya.
     * @param {Kelas_sayaUpsertArgs} args - Arguments to update or create a Kelas_saya.
     * @example
     * // Update or create a Kelas_saya
     * const kelas_saya = await prisma.kelas_saya.upsert({
     *   create: {
     *     // ... data to create a Kelas_saya
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kelas_saya we want to update
     *   }
     * })
     */
    upsert<T extends Kelas_sayaUpsertArgs>(args: SelectSubset<T, Kelas_sayaUpsertArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Kelas_sayas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaCountArgs} args - Arguments to filter Kelas_sayas to count.
     * @example
     * // Count the number of Kelas_sayas
     * const count = await prisma.kelas_saya.count({
     *   where: {
     *     // ... the filter for the Kelas_sayas we want to count
     *   }
     * })
    **/
    count<T extends Kelas_sayaCountArgs>(
      args?: Subset<T, Kelas_sayaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Kelas_sayaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kelas_saya.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Kelas_sayaAggregateArgs>(args: Subset<T, Kelas_sayaAggregateArgs>): Prisma.PrismaPromise<GetKelas_sayaAggregateType<T>>

    /**
     * Group by Kelas_saya.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Kelas_sayaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Kelas_sayaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Kelas_sayaGroupByArgs['orderBy'] }
        : { orderBy?: Kelas_sayaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Kelas_sayaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKelas_sayaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kelas_saya model
   */
  readonly fields: Kelas_sayaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kelas_saya.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Kelas_sayaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders_kelas<T extends Kelas_saya$orders_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Kelas_saya$orders_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    pretest_kelas<T extends Kelas_saya$pretest_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Kelas_saya$pretest_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kelas_saya model
   */ 
  interface Kelas_sayaFieldRefs {
    readonly id: FieldRef<"Kelas_saya", 'Int'>
    readonly progres_kelas: FieldRef<"Kelas_saya", 'Float'>
    readonly status_kelas: FieldRef<"Kelas_saya", 'Status_kelas'>
    readonly created_at: FieldRef<"Kelas_saya", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Kelas_saya findUnique
   */
  export type Kelas_sayaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter, which Kelas_saya to fetch.
     */
    where: Kelas_sayaWhereUniqueInput
  }

  /**
   * Kelas_saya findUniqueOrThrow
   */
  export type Kelas_sayaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter, which Kelas_saya to fetch.
     */
    where: Kelas_sayaWhereUniqueInput
  }

  /**
   * Kelas_saya findFirst
   */
  export type Kelas_sayaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter, which Kelas_saya to fetch.
     */
    where?: Kelas_sayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas_sayas to fetch.
     */
    orderBy?: Kelas_sayaOrderByWithRelationInput | Kelas_sayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kelas_sayas.
     */
    cursor?: Kelas_sayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas_sayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas_sayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kelas_sayas.
     */
    distinct?: Kelas_sayaScalarFieldEnum | Kelas_sayaScalarFieldEnum[]
  }

  /**
   * Kelas_saya findFirstOrThrow
   */
  export type Kelas_sayaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter, which Kelas_saya to fetch.
     */
    where?: Kelas_sayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas_sayas to fetch.
     */
    orderBy?: Kelas_sayaOrderByWithRelationInput | Kelas_sayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kelas_sayas.
     */
    cursor?: Kelas_sayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas_sayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas_sayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kelas_sayas.
     */
    distinct?: Kelas_sayaScalarFieldEnum | Kelas_sayaScalarFieldEnum[]
  }

  /**
   * Kelas_saya findMany
   */
  export type Kelas_sayaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter, which Kelas_sayas to fetch.
     */
    where?: Kelas_sayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kelas_sayas to fetch.
     */
    orderBy?: Kelas_sayaOrderByWithRelationInput | Kelas_sayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kelas_sayas.
     */
    cursor?: Kelas_sayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kelas_sayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kelas_sayas.
     */
    skip?: number
    distinct?: Kelas_sayaScalarFieldEnum | Kelas_sayaScalarFieldEnum[]
  }

  /**
   * Kelas_saya create
   */
  export type Kelas_sayaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * The data needed to create a Kelas_saya.
     */
    data: XOR<Kelas_sayaCreateInput, Kelas_sayaUncheckedCreateInput>
  }

  /**
   * Kelas_saya createMany
   */
  export type Kelas_sayaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kelas_sayas.
     */
    data: Kelas_sayaCreateManyInput | Kelas_sayaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kelas_saya update
   */
  export type Kelas_sayaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * The data needed to update a Kelas_saya.
     */
    data: XOR<Kelas_sayaUpdateInput, Kelas_sayaUncheckedUpdateInput>
    /**
     * Choose, which Kelas_saya to update.
     */
    where: Kelas_sayaWhereUniqueInput
  }

  /**
   * Kelas_saya updateMany
   */
  export type Kelas_sayaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kelas_sayas.
     */
    data: XOR<Kelas_sayaUpdateManyMutationInput, Kelas_sayaUncheckedUpdateManyInput>
    /**
     * Filter which Kelas_sayas to update
     */
    where?: Kelas_sayaWhereInput
  }

  /**
   * Kelas_saya upsert
   */
  export type Kelas_sayaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * The filter to search for the Kelas_saya to update in case it exists.
     */
    where: Kelas_sayaWhereUniqueInput
    /**
     * In case the Kelas_saya found by the `where` argument doesn't exist, create a new Kelas_saya with this data.
     */
    create: XOR<Kelas_sayaCreateInput, Kelas_sayaUncheckedCreateInput>
    /**
     * In case the Kelas_saya was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Kelas_sayaUpdateInput, Kelas_sayaUncheckedUpdateInput>
  }

  /**
   * Kelas_saya delete
   */
  export type Kelas_sayaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
    /**
     * Filter which Kelas_saya to delete.
     */
    where: Kelas_sayaWhereUniqueInput
  }

  /**
   * Kelas_saya deleteMany
   */
  export type Kelas_sayaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kelas_sayas to delete
     */
    where?: Kelas_sayaWhereInput
  }

  /**
   * Kelas_saya.orders_kelas
   */
  export type Kelas_saya$orders_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    where?: Orders_kelasWhereInput
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    cursor?: Orders_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Orders_kelasScalarFieldEnum | Orders_kelasScalarFieldEnum[]
  }

  /**
   * Kelas_saya.pretest_kelas
   */
  export type Kelas_saya$pretest_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    where?: Pretest_kelasWhereInput
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    cursor?: Pretest_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pretest_kelasScalarFieldEnum | Pretest_kelasScalarFieldEnum[]
  }

  /**
   * Kelas_saya without action
   */
  export type Kelas_sayaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kelas_saya
     */
    select?: Kelas_sayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Kelas_sayaInclude<ExtArgs> | null
  }


  /**
   * Model Material
   */

  export type AggregateMaterial = {
    _count: MaterialCountAggregateOutputType | null
    _avg: MaterialAvgAggregateOutputType | null
    _sum: MaterialSumAggregateOutputType | null
    _min: MaterialMinAggregateOutputType | null
    _max: MaterialMaxAggregateOutputType | null
  }

  export type MaterialAvgAggregateOutputType = {
    id: number | null
  }

  export type MaterialSumAggregateOutputType = {
    id: number | null
  }

  export type MaterialMinAggregateOutputType = {
    id: number | null
    durasi: Date | null
    kuis: string | null
    rangkuman: string | null
    created_at: Date | null
  }

  export type MaterialMaxAggregateOutputType = {
    id: number | null
    durasi: Date | null
    kuis: string | null
    rangkuman: string | null
    created_at: Date | null
  }

  export type MaterialCountAggregateOutputType = {
    id: number
    durasi: number
    kuis: number
    rangkuman: number
    created_at: number
    _all: number
  }


  export type MaterialAvgAggregateInputType = {
    id?: true
  }

  export type MaterialSumAggregateInputType = {
    id?: true
  }

  export type MaterialMinAggregateInputType = {
    id?: true
    durasi?: true
    kuis?: true
    rangkuman?: true
    created_at?: true
  }

  export type MaterialMaxAggregateInputType = {
    id?: true
    durasi?: true
    kuis?: true
    rangkuman?: true
    created_at?: true
  }

  export type MaterialCountAggregateInputType = {
    id?: true
    durasi?: true
    kuis?: true
    rangkuman?: true
    created_at?: true
    _all?: true
  }

  export type MaterialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Material to aggregate.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materials
    **/
    _count?: true | MaterialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialMaxAggregateInputType
  }

  export type GetMaterialAggregateType<T extends MaterialAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterial[P]>
      : GetScalarType<T[P], AggregateMaterial[P]>
  }




  export type MaterialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialWhereInput
    orderBy?: MaterialOrderByWithAggregationInput | MaterialOrderByWithAggregationInput[]
    by: MaterialScalarFieldEnum[] | MaterialScalarFieldEnum
    having?: MaterialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialCountAggregateInputType | true
    _avg?: MaterialAvgAggregateInputType
    _sum?: MaterialSumAggregateInputType
    _min?: MaterialMinAggregateInputType
    _max?: MaterialMaxAggregateInputType
  }

  export type MaterialGroupByOutputType = {
    id: number
    durasi: Date
    kuis: string
    rangkuman: string
    created_at: Date
    _count: MaterialCountAggregateOutputType | null
    _avg: MaterialAvgAggregateOutputType | null
    _sum: MaterialSumAggregateOutputType | null
    _min: MaterialMinAggregateOutputType | null
    _max: MaterialMaxAggregateOutputType | null
  }

  type GetMaterialGroupByPayload<T extends MaterialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialGroupByOutputType[P]>
        }
      >
    >


  export type MaterialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    durasi?: boolean
    kuis?: boolean
    rangkuman?: boolean
    created_at?: boolean
    modul_material?: boolean | Material$modul_materialArgs<ExtArgs>
    _count?: boolean | MaterialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["material"]>


  export type MaterialSelectScalar = {
    id?: boolean
    durasi?: boolean
    kuis?: boolean
    rangkuman?: boolean
    created_at?: boolean
  }

  export type MaterialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modul_material?: boolean | Material$modul_materialArgs<ExtArgs>
    _count?: boolean | MaterialCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MaterialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Material"
    objects: {
      modul_material: Prisma.$Modul_materialPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      durasi: Date
      kuis: string
      rangkuman: string
      created_at: Date
    }, ExtArgs["result"]["material"]>
    composites: {}
  }

  type MaterialGetPayload<S extends boolean | null | undefined | MaterialDefaultArgs> = $Result.GetResult<Prisma.$MaterialPayload, S>

  type MaterialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MaterialFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MaterialCountAggregateInputType | true
    }

  export interface MaterialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Material'], meta: { name: 'Material' } }
    /**
     * Find zero or one Material that matches the filter.
     * @param {MaterialFindUniqueArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialFindUniqueArgs>(args: SelectSubset<T, MaterialFindUniqueArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Material that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MaterialFindUniqueOrThrowArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Material that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindFirstArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialFindFirstArgs>(args?: SelectSubset<T, MaterialFindFirstArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Material that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindFirstOrThrowArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materials
     * const materials = await prisma.material.findMany()
     * 
     * // Get first 10 Materials
     * const materials = await prisma.material.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialWithIdOnly = await prisma.material.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialFindManyArgs>(args?: SelectSubset<T, MaterialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Material.
     * @param {MaterialCreateArgs} args - Arguments to create a Material.
     * @example
     * // Create one Material
     * const Material = await prisma.material.create({
     *   data: {
     *     // ... data to create a Material
     *   }
     * })
     * 
     */
    create<T extends MaterialCreateArgs>(args: SelectSubset<T, MaterialCreateArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Materials.
     * @param {MaterialCreateManyArgs} args - Arguments to create many Materials.
     * @example
     * // Create many Materials
     * const material = await prisma.material.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialCreateManyArgs>(args?: SelectSubset<T, MaterialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Material.
     * @param {MaterialDeleteArgs} args - Arguments to delete one Material.
     * @example
     * // Delete one Material
     * const Material = await prisma.material.delete({
     *   where: {
     *     // ... filter to delete one Material
     *   }
     * })
     * 
     */
    delete<T extends MaterialDeleteArgs>(args: SelectSubset<T, MaterialDeleteArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Material.
     * @param {MaterialUpdateArgs} args - Arguments to update one Material.
     * @example
     * // Update one Material
     * const material = await prisma.material.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialUpdateArgs>(args: SelectSubset<T, MaterialUpdateArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Materials.
     * @param {MaterialDeleteManyArgs} args - Arguments to filter Materials to delete.
     * @example
     * // Delete a few Materials
     * const { count } = await prisma.material.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialDeleteManyArgs>(args?: SelectSubset<T, MaterialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materials
     * const material = await prisma.material.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialUpdateManyArgs>(args: SelectSubset<T, MaterialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Material.
     * @param {MaterialUpsertArgs} args - Arguments to update or create a Material.
     * @example
     * // Update or create a Material
     * const material = await prisma.material.upsert({
     *   create: {
     *     // ... data to create a Material
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Material we want to update
     *   }
     * })
     */
    upsert<T extends MaterialUpsertArgs>(args: SelectSubset<T, MaterialUpsertArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialCountArgs} args - Arguments to filter Materials to count.
     * @example
     * // Count the number of Materials
     * const count = await prisma.material.count({
     *   where: {
     *     // ... the filter for the Materials we want to count
     *   }
     * })
    **/
    count<T extends MaterialCountArgs>(
      args?: Subset<T, MaterialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialAggregateArgs>(args: Subset<T, MaterialAggregateArgs>): Prisma.PrismaPromise<GetMaterialAggregateType<T>>

    /**
     * Group by Material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialGroupByArgs['orderBy'] }
        : { orderBy?: MaterialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Material model
   */
  readonly fields: MaterialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Material.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modul_material<T extends Material$modul_materialArgs<ExtArgs> = {}>(args?: Subset<T, Material$modul_materialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Material model
   */ 
  interface MaterialFieldRefs {
    readonly id: FieldRef<"Material", 'Int'>
    readonly durasi: FieldRef<"Material", 'DateTime'>
    readonly kuis: FieldRef<"Material", 'String'>
    readonly rangkuman: FieldRef<"Material", 'String'>
    readonly created_at: FieldRef<"Material", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Material findUnique
   */
  export type MaterialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material findUniqueOrThrow
   */
  export type MaterialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material findFirst
   */
  export type MaterialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materials.
     */
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material findFirstOrThrow
   */
  export type MaterialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materials.
     */
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material findMany
   */
  export type MaterialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Materials to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material create
   */
  export type MaterialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The data needed to create a Material.
     */
    data: XOR<MaterialCreateInput, MaterialUncheckedCreateInput>
  }

  /**
   * Material createMany
   */
  export type MaterialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materials.
     */
    data: MaterialCreateManyInput | MaterialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Material update
   */
  export type MaterialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The data needed to update a Material.
     */
    data: XOR<MaterialUpdateInput, MaterialUncheckedUpdateInput>
    /**
     * Choose, which Material to update.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material updateMany
   */
  export type MaterialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materials.
     */
    data: XOR<MaterialUpdateManyMutationInput, MaterialUncheckedUpdateManyInput>
    /**
     * Filter which Materials to update
     */
    where?: MaterialWhereInput
  }

  /**
   * Material upsert
   */
  export type MaterialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The filter to search for the Material to update in case it exists.
     */
    where: MaterialWhereUniqueInput
    /**
     * In case the Material found by the `where` argument doesn't exist, create a new Material with this data.
     */
    create: XOR<MaterialCreateInput, MaterialUncheckedCreateInput>
    /**
     * In case the Material was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialUpdateInput, MaterialUncheckedUpdateInput>
  }

  /**
   * Material delete
   */
  export type MaterialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter which Material to delete.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material deleteMany
   */
  export type MaterialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materials to delete
     */
    where?: MaterialWhereInput
  }

  /**
   * Material.modul_material
   */
  export type Material$modul_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    where?: Modul_materialWhereInput
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    cursor?: Modul_materialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Modul_materialScalarFieldEnum | Modul_materialScalarFieldEnum[]
  }

  /**
   * Material without action
   */
  export type MaterialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
  }


  /**
   * Model Mengajar
   */

  export type AggregateMengajar = {
    _count: MengajarCountAggregateOutputType | null
    _avg: MengajarAvgAggregateOutputType | null
    _sum: MengajarSumAggregateOutputType | null
    _min: MengajarMinAggregateOutputType | null
    _max: MengajarMaxAggregateOutputType | null
  }

  export type MengajarAvgAggregateOutputType = {
    id: number | null
    id_kelas: number | null
  }

  export type MengajarSumAggregateOutputType = {
    id: number | null
    id_kelas: number | null
  }

  export type MengajarMinAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    email_tutor: string | null
    created_at: Date | null
  }

  export type MengajarMaxAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    email_tutor: string | null
    created_at: Date | null
  }

  export type MengajarCountAggregateOutputType = {
    id: number
    id_kelas: number
    email_tutor: number
    created_at: number
    _all: number
  }


  export type MengajarAvgAggregateInputType = {
    id?: true
    id_kelas?: true
  }

  export type MengajarSumAggregateInputType = {
    id?: true
    id_kelas?: true
  }

  export type MengajarMinAggregateInputType = {
    id?: true
    id_kelas?: true
    email_tutor?: true
    created_at?: true
  }

  export type MengajarMaxAggregateInputType = {
    id?: true
    id_kelas?: true
    email_tutor?: true
    created_at?: true
  }

  export type MengajarCountAggregateInputType = {
    id?: true
    id_kelas?: true
    email_tutor?: true
    created_at?: true
    _all?: true
  }

  export type MengajarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mengajar to aggregate.
     */
    where?: MengajarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mengajars to fetch.
     */
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MengajarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mengajars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mengajars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mengajars
    **/
    _count?: true | MengajarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MengajarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MengajarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MengajarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MengajarMaxAggregateInputType
  }

  export type GetMengajarAggregateType<T extends MengajarAggregateArgs> = {
        [P in keyof T & keyof AggregateMengajar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMengajar[P]>
      : GetScalarType<T[P], AggregateMengajar[P]>
  }




  export type MengajarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MengajarWhereInput
    orderBy?: MengajarOrderByWithAggregationInput | MengajarOrderByWithAggregationInput[]
    by: MengajarScalarFieldEnum[] | MengajarScalarFieldEnum
    having?: MengajarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MengajarCountAggregateInputType | true
    _avg?: MengajarAvgAggregateInputType
    _sum?: MengajarSumAggregateInputType
    _min?: MengajarMinAggregateInputType
    _max?: MengajarMaxAggregateInputType
  }

  export type MengajarGroupByOutputType = {
    id: number
    id_kelas: number
    email_tutor: string
    created_at: Date
    _count: MengajarCountAggregateOutputType | null
    _avg: MengajarAvgAggregateOutputType | null
    _sum: MengajarSumAggregateOutputType | null
    _min: MengajarMinAggregateOutputType | null
    _max: MengajarMaxAggregateOutputType | null
  }

  type GetMengajarGroupByPayload<T extends MengajarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MengajarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MengajarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MengajarGroupByOutputType[P]>
            : GetScalarType<T[P], MengajarGroupByOutputType[P]>
        }
      >
    >


  export type MengajarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_kelas?: boolean
    email_tutor?: boolean
    created_at?: boolean
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    tutor?: boolean | TutorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mengajar"]>


  export type MengajarSelectScalar = {
    id?: boolean
    id_kelas?: boolean
    email_tutor?: boolean
    created_at?: boolean
  }

  export type MengajarInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    tutor?: boolean | TutorDefaultArgs<ExtArgs>
  }

  export type $MengajarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mengajar"
    objects: {
      kelas: Prisma.$KelasPayload<ExtArgs>
      tutor: Prisma.$TutorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_kelas: number
      email_tutor: string
      created_at: Date
    }, ExtArgs["result"]["mengajar"]>
    composites: {}
  }

  type MengajarGetPayload<S extends boolean | null | undefined | MengajarDefaultArgs> = $Result.GetResult<Prisma.$MengajarPayload, S>

  type MengajarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MengajarFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MengajarCountAggregateInputType | true
    }

  export interface MengajarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mengajar'], meta: { name: 'Mengajar' } }
    /**
     * Find zero or one Mengajar that matches the filter.
     * @param {MengajarFindUniqueArgs} args - Arguments to find a Mengajar
     * @example
     * // Get one Mengajar
     * const mengajar = await prisma.mengajar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MengajarFindUniqueArgs>(args: SelectSubset<T, MengajarFindUniqueArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Mengajar that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MengajarFindUniqueOrThrowArgs} args - Arguments to find a Mengajar
     * @example
     * // Get one Mengajar
     * const mengajar = await prisma.mengajar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MengajarFindUniqueOrThrowArgs>(args: SelectSubset<T, MengajarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Mengajar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarFindFirstArgs} args - Arguments to find a Mengajar
     * @example
     * // Get one Mengajar
     * const mengajar = await prisma.mengajar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MengajarFindFirstArgs>(args?: SelectSubset<T, MengajarFindFirstArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Mengajar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarFindFirstOrThrowArgs} args - Arguments to find a Mengajar
     * @example
     * // Get one Mengajar
     * const mengajar = await prisma.mengajar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MengajarFindFirstOrThrowArgs>(args?: SelectSubset<T, MengajarFindFirstOrThrowArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Mengajars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mengajars
     * const mengajars = await prisma.mengajar.findMany()
     * 
     * // Get first 10 Mengajars
     * const mengajars = await prisma.mengajar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mengajarWithIdOnly = await prisma.mengajar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MengajarFindManyArgs>(args?: SelectSubset<T, MengajarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Mengajar.
     * @param {MengajarCreateArgs} args - Arguments to create a Mengajar.
     * @example
     * // Create one Mengajar
     * const Mengajar = await prisma.mengajar.create({
     *   data: {
     *     // ... data to create a Mengajar
     *   }
     * })
     * 
     */
    create<T extends MengajarCreateArgs>(args: SelectSubset<T, MengajarCreateArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Mengajars.
     * @param {MengajarCreateManyArgs} args - Arguments to create many Mengajars.
     * @example
     * // Create many Mengajars
     * const mengajar = await prisma.mengajar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MengajarCreateManyArgs>(args?: SelectSubset<T, MengajarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mengajar.
     * @param {MengajarDeleteArgs} args - Arguments to delete one Mengajar.
     * @example
     * // Delete one Mengajar
     * const Mengajar = await prisma.mengajar.delete({
     *   where: {
     *     // ... filter to delete one Mengajar
     *   }
     * })
     * 
     */
    delete<T extends MengajarDeleteArgs>(args: SelectSubset<T, MengajarDeleteArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Mengajar.
     * @param {MengajarUpdateArgs} args - Arguments to update one Mengajar.
     * @example
     * // Update one Mengajar
     * const mengajar = await prisma.mengajar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MengajarUpdateArgs>(args: SelectSubset<T, MengajarUpdateArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Mengajars.
     * @param {MengajarDeleteManyArgs} args - Arguments to filter Mengajars to delete.
     * @example
     * // Delete a few Mengajars
     * const { count } = await prisma.mengajar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MengajarDeleteManyArgs>(args?: SelectSubset<T, MengajarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mengajars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mengajars
     * const mengajar = await prisma.mengajar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MengajarUpdateManyArgs>(args: SelectSubset<T, MengajarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mengajar.
     * @param {MengajarUpsertArgs} args - Arguments to update or create a Mengajar.
     * @example
     * // Update or create a Mengajar
     * const mengajar = await prisma.mengajar.upsert({
     *   create: {
     *     // ... data to create a Mengajar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mengajar we want to update
     *   }
     * })
     */
    upsert<T extends MengajarUpsertArgs>(args: SelectSubset<T, MengajarUpsertArgs<ExtArgs>>): Prisma__MengajarClient<$Result.GetResult<Prisma.$MengajarPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Mengajars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarCountArgs} args - Arguments to filter Mengajars to count.
     * @example
     * // Count the number of Mengajars
     * const count = await prisma.mengajar.count({
     *   where: {
     *     // ... the filter for the Mengajars we want to count
     *   }
     * })
    **/
    count<T extends MengajarCountArgs>(
      args?: Subset<T, MengajarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MengajarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mengajar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MengajarAggregateArgs>(args: Subset<T, MengajarAggregateArgs>): Prisma.PrismaPromise<GetMengajarAggregateType<T>>

    /**
     * Group by Mengajar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MengajarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MengajarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MengajarGroupByArgs['orderBy'] }
        : { orderBy?: MengajarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MengajarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMengajarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mengajar model
   */
  readonly fields: MengajarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mengajar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MengajarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kelas<T extends KelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KelasDefaultArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tutor<T extends TutorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TutorDefaultArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mengajar model
   */ 
  interface MengajarFieldRefs {
    readonly id: FieldRef<"Mengajar", 'Int'>
    readonly id_kelas: FieldRef<"Mengajar", 'Int'>
    readonly email_tutor: FieldRef<"Mengajar", 'String'>
    readonly created_at: FieldRef<"Mengajar", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mengajar findUnique
   */
  export type MengajarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter, which Mengajar to fetch.
     */
    where: MengajarWhereUniqueInput
  }

  /**
   * Mengajar findUniqueOrThrow
   */
  export type MengajarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter, which Mengajar to fetch.
     */
    where: MengajarWhereUniqueInput
  }

  /**
   * Mengajar findFirst
   */
  export type MengajarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter, which Mengajar to fetch.
     */
    where?: MengajarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mengajars to fetch.
     */
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mengajars.
     */
    cursor?: MengajarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mengajars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mengajars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mengajars.
     */
    distinct?: MengajarScalarFieldEnum | MengajarScalarFieldEnum[]
  }

  /**
   * Mengajar findFirstOrThrow
   */
  export type MengajarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter, which Mengajar to fetch.
     */
    where?: MengajarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mengajars to fetch.
     */
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mengajars.
     */
    cursor?: MengajarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mengajars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mengajars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mengajars.
     */
    distinct?: MengajarScalarFieldEnum | MengajarScalarFieldEnum[]
  }

  /**
   * Mengajar findMany
   */
  export type MengajarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter, which Mengajars to fetch.
     */
    where?: MengajarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mengajars to fetch.
     */
    orderBy?: MengajarOrderByWithRelationInput | MengajarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mengajars.
     */
    cursor?: MengajarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mengajars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mengajars.
     */
    skip?: number
    distinct?: MengajarScalarFieldEnum | MengajarScalarFieldEnum[]
  }

  /**
   * Mengajar create
   */
  export type MengajarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * The data needed to create a Mengajar.
     */
    data: XOR<MengajarCreateInput, MengajarUncheckedCreateInput>
  }

  /**
   * Mengajar createMany
   */
  export type MengajarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mengajars.
     */
    data: MengajarCreateManyInput | MengajarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mengajar update
   */
  export type MengajarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * The data needed to update a Mengajar.
     */
    data: XOR<MengajarUpdateInput, MengajarUncheckedUpdateInput>
    /**
     * Choose, which Mengajar to update.
     */
    where: MengajarWhereUniqueInput
  }

  /**
   * Mengajar updateMany
   */
  export type MengajarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mengajars.
     */
    data: XOR<MengajarUpdateManyMutationInput, MengajarUncheckedUpdateManyInput>
    /**
     * Filter which Mengajars to update
     */
    where?: MengajarWhereInput
  }

  /**
   * Mengajar upsert
   */
  export type MengajarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * The filter to search for the Mengajar to update in case it exists.
     */
    where: MengajarWhereUniqueInput
    /**
     * In case the Mengajar found by the `where` argument doesn't exist, create a new Mengajar with this data.
     */
    create: XOR<MengajarCreateInput, MengajarUncheckedCreateInput>
    /**
     * In case the Mengajar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MengajarUpdateInput, MengajarUncheckedUpdateInput>
  }

  /**
   * Mengajar delete
   */
  export type MengajarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
    /**
     * Filter which Mengajar to delete.
     */
    where: MengajarWhereUniqueInput
  }

  /**
   * Mengajar deleteMany
   */
  export type MengajarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mengajars to delete
     */
    where?: MengajarWhereInput
  }

  /**
   * Mengajar without action
   */
  export type MengajarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mengajar
     */
    select?: MengajarSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MengajarInclude<ExtArgs> | null
  }


  /**
   * Model Modul_kelas
   */

  export type AggregateModul_kelas = {
    _count: Modul_kelasCountAggregateOutputType | null
    _avg: Modul_kelasAvgAggregateOutputType | null
    _sum: Modul_kelasSumAggregateOutputType | null
    _min: Modul_kelasMinAggregateOutputType | null
    _max: Modul_kelasMaxAggregateOutputType | null
  }

  export type Modul_kelasAvgAggregateOutputType = {
    id: number | null
  }

  export type Modul_kelasSumAggregateOutputType = {
    id: number | null
  }

  export type Modul_kelasMinAggregateOutputType = {
    id: number | null
    nama: string | null
    created_at: Date | null
  }

  export type Modul_kelasMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    created_at: Date | null
  }

  export type Modul_kelasCountAggregateOutputType = {
    id: number
    nama: number
    created_at: number
    _all: number
  }


  export type Modul_kelasAvgAggregateInputType = {
    id?: true
  }

  export type Modul_kelasSumAggregateInputType = {
    id?: true
  }

  export type Modul_kelasMinAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
  }

  export type Modul_kelasMaxAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
  }

  export type Modul_kelasCountAggregateInputType = {
    id?: true
    nama?: true
    created_at?: true
    _all?: true
  }

  export type Modul_kelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modul_kelas to aggregate.
     */
    where?: Modul_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_kelas to fetch.
     */
    orderBy?: Modul_kelasOrderByWithRelationInput | Modul_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Modul_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modul_kelas
    **/
    _count?: true | Modul_kelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Modul_kelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Modul_kelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Modul_kelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Modul_kelasMaxAggregateInputType
  }

  export type GetModul_kelasAggregateType<T extends Modul_kelasAggregateArgs> = {
        [P in keyof T & keyof AggregateModul_kelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModul_kelas[P]>
      : GetScalarType<T[P], AggregateModul_kelas[P]>
  }




  export type Modul_kelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Modul_kelasWhereInput
    orderBy?: Modul_kelasOrderByWithAggregationInput | Modul_kelasOrderByWithAggregationInput[]
    by: Modul_kelasScalarFieldEnum[] | Modul_kelasScalarFieldEnum
    having?: Modul_kelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Modul_kelasCountAggregateInputType | true
    _avg?: Modul_kelasAvgAggregateInputType
    _sum?: Modul_kelasSumAggregateInputType
    _min?: Modul_kelasMinAggregateInputType
    _max?: Modul_kelasMaxAggregateInputType
  }

  export type Modul_kelasGroupByOutputType = {
    id: number
    nama: string
    created_at: Date
    _count: Modul_kelasCountAggregateOutputType | null
    _avg: Modul_kelasAvgAggregateOutputType | null
    _sum: Modul_kelasSumAggregateOutputType | null
    _min: Modul_kelasMinAggregateOutputType | null
    _max: Modul_kelasMaxAggregateOutputType | null
  }

  type GetModul_kelasGroupByPayload<T extends Modul_kelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Modul_kelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Modul_kelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Modul_kelasGroupByOutputType[P]>
            : GetScalarType<T[P], Modul_kelasGroupByOutputType[P]>
        }
      >
    >


  export type Modul_kelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    created_at?: boolean
    modul_material?: boolean | Modul_kelas$modul_materialArgs<ExtArgs>
    silabus?: boolean | Modul_kelas$silabusArgs<ExtArgs>
    _count?: boolean | Modul_kelasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modul_kelas"]>


  export type Modul_kelasSelectScalar = {
    id?: boolean
    nama?: boolean
    created_at?: boolean
  }

  export type Modul_kelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modul_material?: boolean | Modul_kelas$modul_materialArgs<ExtArgs>
    silabus?: boolean | Modul_kelas$silabusArgs<ExtArgs>
    _count?: boolean | Modul_kelasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Modul_kelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modul_kelas"
    objects: {
      modul_material: Prisma.$Modul_materialPayload<ExtArgs>[]
      silabus: Prisma.$SilabusPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      created_at: Date
    }, ExtArgs["result"]["modul_kelas"]>
    composites: {}
  }

  type Modul_kelasGetPayload<S extends boolean | null | undefined | Modul_kelasDefaultArgs> = $Result.GetResult<Prisma.$Modul_kelasPayload, S>

  type Modul_kelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Modul_kelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Modul_kelasCountAggregateInputType | true
    }

  export interface Modul_kelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modul_kelas'], meta: { name: 'Modul_kelas' } }
    /**
     * Find zero or one Modul_kelas that matches the filter.
     * @param {Modul_kelasFindUniqueArgs} args - Arguments to find a Modul_kelas
     * @example
     * // Get one Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Modul_kelasFindUniqueArgs>(args: SelectSubset<T, Modul_kelasFindUniqueArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Modul_kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Modul_kelasFindUniqueOrThrowArgs} args - Arguments to find a Modul_kelas
     * @example
     * // Get one Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Modul_kelasFindUniqueOrThrowArgs>(args: SelectSubset<T, Modul_kelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Modul_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasFindFirstArgs} args - Arguments to find a Modul_kelas
     * @example
     * // Get one Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Modul_kelasFindFirstArgs>(args?: SelectSubset<T, Modul_kelasFindFirstArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Modul_kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasFindFirstOrThrowArgs} args - Arguments to find a Modul_kelas
     * @example
     * // Get one Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Modul_kelasFindFirstOrThrowArgs>(args?: SelectSubset<T, Modul_kelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Modul_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findMany()
     * 
     * // Get first 10 Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modul_kelasWithIdOnly = await prisma.modul_kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Modul_kelasFindManyArgs>(args?: SelectSubset<T, Modul_kelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Modul_kelas.
     * @param {Modul_kelasCreateArgs} args - Arguments to create a Modul_kelas.
     * @example
     * // Create one Modul_kelas
     * const Modul_kelas = await prisma.modul_kelas.create({
     *   data: {
     *     // ... data to create a Modul_kelas
     *   }
     * })
     * 
     */
    create<T extends Modul_kelasCreateArgs>(args: SelectSubset<T, Modul_kelasCreateArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Modul_kelas.
     * @param {Modul_kelasCreateManyArgs} args - Arguments to create many Modul_kelas.
     * @example
     * // Create many Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Modul_kelasCreateManyArgs>(args?: SelectSubset<T, Modul_kelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Modul_kelas.
     * @param {Modul_kelasDeleteArgs} args - Arguments to delete one Modul_kelas.
     * @example
     * // Delete one Modul_kelas
     * const Modul_kelas = await prisma.modul_kelas.delete({
     *   where: {
     *     // ... filter to delete one Modul_kelas
     *   }
     * })
     * 
     */
    delete<T extends Modul_kelasDeleteArgs>(args: SelectSubset<T, Modul_kelasDeleteArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Modul_kelas.
     * @param {Modul_kelasUpdateArgs} args - Arguments to update one Modul_kelas.
     * @example
     * // Update one Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Modul_kelasUpdateArgs>(args: SelectSubset<T, Modul_kelasUpdateArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Modul_kelas.
     * @param {Modul_kelasDeleteManyArgs} args - Arguments to filter Modul_kelas to delete.
     * @example
     * // Delete a few Modul_kelas
     * const { count } = await prisma.modul_kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Modul_kelasDeleteManyArgs>(args?: SelectSubset<T, Modul_kelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modul_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Modul_kelasUpdateManyArgs>(args: SelectSubset<T, Modul_kelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modul_kelas.
     * @param {Modul_kelasUpsertArgs} args - Arguments to update or create a Modul_kelas.
     * @example
     * // Update or create a Modul_kelas
     * const modul_kelas = await prisma.modul_kelas.upsert({
     *   create: {
     *     // ... data to create a Modul_kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modul_kelas we want to update
     *   }
     * })
     */
    upsert<T extends Modul_kelasUpsertArgs>(args: SelectSubset<T, Modul_kelasUpsertArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Modul_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasCountArgs} args - Arguments to filter Modul_kelas to count.
     * @example
     * // Count the number of Modul_kelas
     * const count = await prisma.modul_kelas.count({
     *   where: {
     *     // ... the filter for the Modul_kelas we want to count
     *   }
     * })
    **/
    count<T extends Modul_kelasCountArgs>(
      args?: Subset<T, Modul_kelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Modul_kelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modul_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Modul_kelasAggregateArgs>(args: Subset<T, Modul_kelasAggregateArgs>): Prisma.PrismaPromise<GetModul_kelasAggregateType<T>>

    /**
     * Group by Modul_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_kelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Modul_kelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Modul_kelasGroupByArgs['orderBy'] }
        : { orderBy?: Modul_kelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Modul_kelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModul_kelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modul_kelas model
   */
  readonly fields: Modul_kelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modul_kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Modul_kelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modul_material<T extends Modul_kelas$modul_materialArgs<ExtArgs> = {}>(args?: Subset<T, Modul_kelas$modul_materialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findMany"> | Null>
    silabus<T extends Modul_kelas$silabusArgs<ExtArgs> = {}>(args?: Subset<T, Modul_kelas$silabusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Modul_kelas model
   */ 
  interface Modul_kelasFieldRefs {
    readonly id: FieldRef<"Modul_kelas", 'Int'>
    readonly nama: FieldRef<"Modul_kelas", 'String'>
    readonly created_at: FieldRef<"Modul_kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Modul_kelas findUnique
   */
  export type Modul_kelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Modul_kelas to fetch.
     */
    where: Modul_kelasWhereUniqueInput
  }

  /**
   * Modul_kelas findUniqueOrThrow
   */
  export type Modul_kelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Modul_kelas to fetch.
     */
    where: Modul_kelasWhereUniqueInput
  }

  /**
   * Modul_kelas findFirst
   */
  export type Modul_kelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Modul_kelas to fetch.
     */
    where?: Modul_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_kelas to fetch.
     */
    orderBy?: Modul_kelasOrderByWithRelationInput | Modul_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modul_kelas.
     */
    cursor?: Modul_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modul_kelas.
     */
    distinct?: Modul_kelasScalarFieldEnum | Modul_kelasScalarFieldEnum[]
  }

  /**
   * Modul_kelas findFirstOrThrow
   */
  export type Modul_kelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Modul_kelas to fetch.
     */
    where?: Modul_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_kelas to fetch.
     */
    orderBy?: Modul_kelasOrderByWithRelationInput | Modul_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modul_kelas.
     */
    cursor?: Modul_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modul_kelas.
     */
    distinct?: Modul_kelasScalarFieldEnum | Modul_kelasScalarFieldEnum[]
  }

  /**
   * Modul_kelas findMany
   */
  export type Modul_kelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Modul_kelas to fetch.
     */
    where?: Modul_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_kelas to fetch.
     */
    orderBy?: Modul_kelasOrderByWithRelationInput | Modul_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modul_kelas.
     */
    cursor?: Modul_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_kelas.
     */
    skip?: number
    distinct?: Modul_kelasScalarFieldEnum | Modul_kelasScalarFieldEnum[]
  }

  /**
   * Modul_kelas create
   */
  export type Modul_kelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Modul_kelas.
     */
    data: XOR<Modul_kelasCreateInput, Modul_kelasUncheckedCreateInput>
  }

  /**
   * Modul_kelas createMany
   */
  export type Modul_kelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modul_kelas.
     */
    data: Modul_kelasCreateManyInput | Modul_kelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Modul_kelas update
   */
  export type Modul_kelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Modul_kelas.
     */
    data: XOR<Modul_kelasUpdateInput, Modul_kelasUncheckedUpdateInput>
    /**
     * Choose, which Modul_kelas to update.
     */
    where: Modul_kelasWhereUniqueInput
  }

  /**
   * Modul_kelas updateMany
   */
  export type Modul_kelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modul_kelas.
     */
    data: XOR<Modul_kelasUpdateManyMutationInput, Modul_kelasUncheckedUpdateManyInput>
    /**
     * Filter which Modul_kelas to update
     */
    where?: Modul_kelasWhereInput
  }

  /**
   * Modul_kelas upsert
   */
  export type Modul_kelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Modul_kelas to update in case it exists.
     */
    where: Modul_kelasWhereUniqueInput
    /**
     * In case the Modul_kelas found by the `where` argument doesn't exist, create a new Modul_kelas with this data.
     */
    create: XOR<Modul_kelasCreateInput, Modul_kelasUncheckedCreateInput>
    /**
     * In case the Modul_kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Modul_kelasUpdateInput, Modul_kelasUncheckedUpdateInput>
  }

  /**
   * Modul_kelas delete
   */
  export type Modul_kelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
    /**
     * Filter which Modul_kelas to delete.
     */
    where: Modul_kelasWhereUniqueInput
  }

  /**
   * Modul_kelas deleteMany
   */
  export type Modul_kelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modul_kelas to delete
     */
    where?: Modul_kelasWhereInput
  }

  /**
   * Modul_kelas.modul_material
   */
  export type Modul_kelas$modul_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    where?: Modul_materialWhereInput
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    cursor?: Modul_materialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Modul_materialScalarFieldEnum | Modul_materialScalarFieldEnum[]
  }

  /**
   * Modul_kelas.silabus
   */
  export type Modul_kelas$silabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    where?: SilabusWhereInput
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    cursor?: SilabusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SilabusScalarFieldEnum | SilabusScalarFieldEnum[]
  }

  /**
   * Modul_kelas without action
   */
  export type Modul_kelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_kelas
     */
    select?: Modul_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_kelasInclude<ExtArgs> | null
  }


  /**
   * Model Modul_material
   */

  export type AggregateModul_material = {
    _count: Modul_materialCountAggregateOutputType | null
    _avg: Modul_materialAvgAggregateOutputType | null
    _sum: Modul_materialSumAggregateOutputType | null
    _min: Modul_materialMinAggregateOutputType | null
    _max: Modul_materialMaxAggregateOutputType | null
  }

  export type Modul_materialAvgAggregateOutputType = {
    id: number | null
    id_material: number | null
    id_modul_kelas: number | null
  }

  export type Modul_materialSumAggregateOutputType = {
    id: number | null
    id_material: number | null
    id_modul_kelas: number | null
  }

  export type Modul_materialMinAggregateOutputType = {
    id: number | null
    id_material: number | null
    id_modul_kelas: number | null
  }

  export type Modul_materialMaxAggregateOutputType = {
    id: number | null
    id_material: number | null
    id_modul_kelas: number | null
  }

  export type Modul_materialCountAggregateOutputType = {
    id: number
    id_material: number
    id_modul_kelas: number
    _all: number
  }


  export type Modul_materialAvgAggregateInputType = {
    id?: true
    id_material?: true
    id_modul_kelas?: true
  }

  export type Modul_materialSumAggregateInputType = {
    id?: true
    id_material?: true
    id_modul_kelas?: true
  }

  export type Modul_materialMinAggregateInputType = {
    id?: true
    id_material?: true
    id_modul_kelas?: true
  }

  export type Modul_materialMaxAggregateInputType = {
    id?: true
    id_material?: true
    id_modul_kelas?: true
  }

  export type Modul_materialCountAggregateInputType = {
    id?: true
    id_material?: true
    id_modul_kelas?: true
    _all?: true
  }

  export type Modul_materialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modul_material to aggregate.
     */
    where?: Modul_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_materials to fetch.
     */
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Modul_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modul_materials
    **/
    _count?: true | Modul_materialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Modul_materialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Modul_materialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Modul_materialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Modul_materialMaxAggregateInputType
  }

  export type GetModul_materialAggregateType<T extends Modul_materialAggregateArgs> = {
        [P in keyof T & keyof AggregateModul_material]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModul_material[P]>
      : GetScalarType<T[P], AggregateModul_material[P]>
  }




  export type Modul_materialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Modul_materialWhereInput
    orderBy?: Modul_materialOrderByWithAggregationInput | Modul_materialOrderByWithAggregationInput[]
    by: Modul_materialScalarFieldEnum[] | Modul_materialScalarFieldEnum
    having?: Modul_materialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Modul_materialCountAggregateInputType | true
    _avg?: Modul_materialAvgAggregateInputType
    _sum?: Modul_materialSumAggregateInputType
    _min?: Modul_materialMinAggregateInputType
    _max?: Modul_materialMaxAggregateInputType
  }

  export type Modul_materialGroupByOutputType = {
    id: number
    id_material: number
    id_modul_kelas: number
    _count: Modul_materialCountAggregateOutputType | null
    _avg: Modul_materialAvgAggregateOutputType | null
    _sum: Modul_materialSumAggregateOutputType | null
    _min: Modul_materialMinAggregateOutputType | null
    _max: Modul_materialMaxAggregateOutputType | null
  }

  type GetModul_materialGroupByPayload<T extends Modul_materialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Modul_materialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Modul_materialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Modul_materialGroupByOutputType[P]>
            : GetScalarType<T[P], Modul_materialGroupByOutputType[P]>
        }
      >
    >


  export type Modul_materialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_material?: boolean
    id_modul_kelas?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    modul_kelas?: boolean | Modul_kelasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modul_material"]>


  export type Modul_materialSelectScalar = {
    id?: boolean
    id_material?: boolean
    id_modul_kelas?: boolean
  }

  export type Modul_materialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    modul_kelas?: boolean | Modul_kelasDefaultArgs<ExtArgs>
  }

  export type $Modul_materialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modul_material"
    objects: {
      material: Prisma.$MaterialPayload<ExtArgs>
      modul_kelas: Prisma.$Modul_kelasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_material: number
      id_modul_kelas: number
    }, ExtArgs["result"]["modul_material"]>
    composites: {}
  }

  type Modul_materialGetPayload<S extends boolean | null | undefined | Modul_materialDefaultArgs> = $Result.GetResult<Prisma.$Modul_materialPayload, S>

  type Modul_materialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Modul_materialFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Modul_materialCountAggregateInputType | true
    }

  export interface Modul_materialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modul_material'], meta: { name: 'Modul_material' } }
    /**
     * Find zero or one Modul_material that matches the filter.
     * @param {Modul_materialFindUniqueArgs} args - Arguments to find a Modul_material
     * @example
     * // Get one Modul_material
     * const modul_material = await prisma.modul_material.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Modul_materialFindUniqueArgs>(args: SelectSubset<T, Modul_materialFindUniqueArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Modul_material that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Modul_materialFindUniqueOrThrowArgs} args - Arguments to find a Modul_material
     * @example
     * // Get one Modul_material
     * const modul_material = await prisma.modul_material.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Modul_materialFindUniqueOrThrowArgs>(args: SelectSubset<T, Modul_materialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Modul_material that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialFindFirstArgs} args - Arguments to find a Modul_material
     * @example
     * // Get one Modul_material
     * const modul_material = await prisma.modul_material.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Modul_materialFindFirstArgs>(args?: SelectSubset<T, Modul_materialFindFirstArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Modul_material that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialFindFirstOrThrowArgs} args - Arguments to find a Modul_material
     * @example
     * // Get one Modul_material
     * const modul_material = await prisma.modul_material.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Modul_materialFindFirstOrThrowArgs>(args?: SelectSubset<T, Modul_materialFindFirstOrThrowArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Modul_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modul_materials
     * const modul_materials = await prisma.modul_material.findMany()
     * 
     * // Get first 10 Modul_materials
     * const modul_materials = await prisma.modul_material.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modul_materialWithIdOnly = await prisma.modul_material.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Modul_materialFindManyArgs>(args?: SelectSubset<T, Modul_materialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Modul_material.
     * @param {Modul_materialCreateArgs} args - Arguments to create a Modul_material.
     * @example
     * // Create one Modul_material
     * const Modul_material = await prisma.modul_material.create({
     *   data: {
     *     // ... data to create a Modul_material
     *   }
     * })
     * 
     */
    create<T extends Modul_materialCreateArgs>(args: SelectSubset<T, Modul_materialCreateArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Modul_materials.
     * @param {Modul_materialCreateManyArgs} args - Arguments to create many Modul_materials.
     * @example
     * // Create many Modul_materials
     * const modul_material = await prisma.modul_material.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Modul_materialCreateManyArgs>(args?: SelectSubset<T, Modul_materialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Modul_material.
     * @param {Modul_materialDeleteArgs} args - Arguments to delete one Modul_material.
     * @example
     * // Delete one Modul_material
     * const Modul_material = await prisma.modul_material.delete({
     *   where: {
     *     // ... filter to delete one Modul_material
     *   }
     * })
     * 
     */
    delete<T extends Modul_materialDeleteArgs>(args: SelectSubset<T, Modul_materialDeleteArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Modul_material.
     * @param {Modul_materialUpdateArgs} args - Arguments to update one Modul_material.
     * @example
     * // Update one Modul_material
     * const modul_material = await prisma.modul_material.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Modul_materialUpdateArgs>(args: SelectSubset<T, Modul_materialUpdateArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Modul_materials.
     * @param {Modul_materialDeleteManyArgs} args - Arguments to filter Modul_materials to delete.
     * @example
     * // Delete a few Modul_materials
     * const { count } = await prisma.modul_material.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Modul_materialDeleteManyArgs>(args?: SelectSubset<T, Modul_materialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modul_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modul_materials
     * const modul_material = await prisma.modul_material.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Modul_materialUpdateManyArgs>(args: SelectSubset<T, Modul_materialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modul_material.
     * @param {Modul_materialUpsertArgs} args - Arguments to update or create a Modul_material.
     * @example
     * // Update or create a Modul_material
     * const modul_material = await prisma.modul_material.upsert({
     *   create: {
     *     // ... data to create a Modul_material
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modul_material we want to update
     *   }
     * })
     */
    upsert<T extends Modul_materialUpsertArgs>(args: SelectSubset<T, Modul_materialUpsertArgs<ExtArgs>>): Prisma__Modul_materialClient<$Result.GetResult<Prisma.$Modul_materialPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Modul_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialCountArgs} args - Arguments to filter Modul_materials to count.
     * @example
     * // Count the number of Modul_materials
     * const count = await prisma.modul_material.count({
     *   where: {
     *     // ... the filter for the Modul_materials we want to count
     *   }
     * })
    **/
    count<T extends Modul_materialCountArgs>(
      args?: Subset<T, Modul_materialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Modul_materialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modul_material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Modul_materialAggregateArgs>(args: Subset<T, Modul_materialAggregateArgs>): Prisma.PrismaPromise<GetModul_materialAggregateType<T>>

    /**
     * Group by Modul_material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modul_materialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Modul_materialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Modul_materialGroupByArgs['orderBy'] }
        : { orderBy?: Modul_materialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Modul_materialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModul_materialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modul_material model
   */
  readonly fields: Modul_materialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modul_material.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Modul_materialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends MaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDefaultArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modul_kelas<T extends Modul_kelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Modul_kelasDefaultArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Modul_material model
   */ 
  interface Modul_materialFieldRefs {
    readonly id: FieldRef<"Modul_material", 'Int'>
    readonly id_material: FieldRef<"Modul_material", 'Int'>
    readonly id_modul_kelas: FieldRef<"Modul_material", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Modul_material findUnique
   */
  export type Modul_materialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter, which Modul_material to fetch.
     */
    where: Modul_materialWhereUniqueInput
  }

  /**
   * Modul_material findUniqueOrThrow
   */
  export type Modul_materialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter, which Modul_material to fetch.
     */
    where: Modul_materialWhereUniqueInput
  }

  /**
   * Modul_material findFirst
   */
  export type Modul_materialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter, which Modul_material to fetch.
     */
    where?: Modul_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_materials to fetch.
     */
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modul_materials.
     */
    cursor?: Modul_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modul_materials.
     */
    distinct?: Modul_materialScalarFieldEnum | Modul_materialScalarFieldEnum[]
  }

  /**
   * Modul_material findFirstOrThrow
   */
  export type Modul_materialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter, which Modul_material to fetch.
     */
    where?: Modul_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_materials to fetch.
     */
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modul_materials.
     */
    cursor?: Modul_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modul_materials.
     */
    distinct?: Modul_materialScalarFieldEnum | Modul_materialScalarFieldEnum[]
  }

  /**
   * Modul_material findMany
   */
  export type Modul_materialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter, which Modul_materials to fetch.
     */
    where?: Modul_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modul_materials to fetch.
     */
    orderBy?: Modul_materialOrderByWithRelationInput | Modul_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modul_materials.
     */
    cursor?: Modul_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modul_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modul_materials.
     */
    skip?: number
    distinct?: Modul_materialScalarFieldEnum | Modul_materialScalarFieldEnum[]
  }

  /**
   * Modul_material create
   */
  export type Modul_materialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * The data needed to create a Modul_material.
     */
    data: XOR<Modul_materialCreateInput, Modul_materialUncheckedCreateInput>
  }

  /**
   * Modul_material createMany
   */
  export type Modul_materialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modul_materials.
     */
    data: Modul_materialCreateManyInput | Modul_materialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Modul_material update
   */
  export type Modul_materialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * The data needed to update a Modul_material.
     */
    data: XOR<Modul_materialUpdateInput, Modul_materialUncheckedUpdateInput>
    /**
     * Choose, which Modul_material to update.
     */
    where: Modul_materialWhereUniqueInput
  }

  /**
   * Modul_material updateMany
   */
  export type Modul_materialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modul_materials.
     */
    data: XOR<Modul_materialUpdateManyMutationInput, Modul_materialUncheckedUpdateManyInput>
    /**
     * Filter which Modul_materials to update
     */
    where?: Modul_materialWhereInput
  }

  /**
   * Modul_material upsert
   */
  export type Modul_materialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * The filter to search for the Modul_material to update in case it exists.
     */
    where: Modul_materialWhereUniqueInput
    /**
     * In case the Modul_material found by the `where` argument doesn't exist, create a new Modul_material with this data.
     */
    create: XOR<Modul_materialCreateInput, Modul_materialUncheckedCreateInput>
    /**
     * In case the Modul_material was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Modul_materialUpdateInput, Modul_materialUncheckedUpdateInput>
  }

  /**
   * Modul_material delete
   */
  export type Modul_materialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
    /**
     * Filter which Modul_material to delete.
     */
    where: Modul_materialWhereUniqueInput
  }

  /**
   * Modul_material deleteMany
   */
  export type Modul_materialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modul_materials to delete
     */
    where?: Modul_materialWhereInput
  }

  /**
   * Modul_material without action
   */
  export type Modul_materialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modul_material
     */
    select?: Modul_materialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Modul_materialInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    id: number | null
    total_pembayaran: Decimal | null
    harga: Decimal | null
  }

  export type OrderSumAggregateOutputType = {
    id: number | null
    total_pembayaran: Decimal | null
    harga: Decimal | null
  }

  export type OrderMinAggregateOutputType = {
    id: number | null
    nama: string | null
    invoice: string | null
    waktu_transaksi: Date | null
    total_pembayaran: Decimal | null
    harga: Decimal | null
    status_pembayaran: $Enums.Status_pembayaran | null
    created_at: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    invoice: string | null
    waktu_transaksi: Date | null
    total_pembayaran: Decimal | null
    harga: Decimal | null
    status_pembayaran: $Enums.Status_pembayaran | null
    created_at: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    nama: number
    invoice: number
    waktu_transaksi: number
    total_pembayaran: number
    harga: number
    status_pembayaran: number
    created_at: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    id?: true
    total_pembayaran?: true
    harga?: true
  }

  export type OrderSumAggregateInputType = {
    id?: true
    total_pembayaran?: true
    harga?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    nama?: true
    invoice?: true
    waktu_transaksi?: true
    total_pembayaran?: true
    harga?: true
    status_pembayaran?: true
    created_at?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    nama?: true
    invoice?: true
    waktu_transaksi?: true
    total_pembayaran?: true
    harga?: true
    status_pembayaran?: true
    created_at?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    nama?: true
    invoice?: true
    waktu_transaksi?: true
    total_pembayaran?: true
    harga?: true
    status_pembayaran?: true
    created_at?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: number
    nama: string
    invoice: string
    waktu_transaksi: Date
    total_pembayaran: Decimal
    harga: Decimal
    status_pembayaran: $Enums.Status_pembayaran
    created_at: Date
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    invoice?: boolean
    waktu_transaksi?: boolean
    total_pembayaran?: boolean
    harga?: boolean
    status_pembayaran?: boolean
    created_at?: boolean
    orders_kelas?: boolean | Order$orders_kelasArgs<ExtArgs>
    orders_pembayaran?: boolean | Order$orders_pembayaranArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>


  export type OrderSelectScalar = {
    id?: boolean
    nama?: boolean
    invoice?: boolean
    waktu_transaksi?: boolean
    total_pembayaran?: boolean
    harga?: boolean
    status_pembayaran?: boolean
    created_at?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_kelas?: boolean | Order$orders_kelasArgs<ExtArgs>
    orders_pembayaran?: boolean | Order$orders_pembayaranArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      orders_kelas: Prisma.$Orders_kelasPayload<ExtArgs>[]
      orders_pembayaran: Prisma.$Orders_pembayaranPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      invoice: string
      waktu_transaksi: Date
      total_pembayaran: Prisma.Decimal
      harga: Prisma.Decimal
      status_pembayaran: $Enums.Status_pembayaran
      created_at: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders_kelas<T extends Order$orders_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Order$orders_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    orders_pembayaran<T extends Order$orders_pembayaranArgs<ExtArgs> = {}>(args?: Subset<T, Order$orders_pembayaranArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'Int'>
    readonly nama: FieldRef<"Order", 'String'>
    readonly invoice: FieldRef<"Order", 'String'>
    readonly waktu_transaksi: FieldRef<"Order", 'DateTime'>
    readonly total_pembayaran: FieldRef<"Order", 'Decimal'>
    readonly harga: FieldRef<"Order", 'Decimal'>
    readonly status_pembayaran: FieldRef<"Order", 'Status_pembayaran'>
    readonly created_at: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.orders_kelas
   */
  export type Order$orders_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    where?: Orders_kelasWhereInput
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    cursor?: Orders_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Orders_kelasScalarFieldEnum | Orders_kelasScalarFieldEnum[]
  }

  /**
   * Order.orders_pembayaran
   */
  export type Order$orders_pembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    where?: Orders_pembayaranWhereInput
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    cursor?: Orders_pembayaranWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Orders_pembayaranScalarFieldEnum | Orders_pembayaranScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model Orders_kelas
   */

  export type AggregateOrders_kelas = {
    _count: Orders_kelasCountAggregateOutputType | null
    _avg: Orders_kelasAvgAggregateOutputType | null
    _sum: Orders_kelasSumAggregateOutputType | null
    _min: Orders_kelasMinAggregateOutputType | null
    _max: Orders_kelasMaxAggregateOutputType | null
  }

  export type Orders_kelasAvgAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_kelas_saya: number | null
  }

  export type Orders_kelasSumAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_kelas_saya: number | null
  }

  export type Orders_kelasMinAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_kelas_saya: number | null
    created_at: Date | null
  }

  export type Orders_kelasMaxAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_kelas_saya: number | null
    created_at: Date | null
  }

  export type Orders_kelasCountAggregateOutputType = {
    id: number
    id_orders: number
    id_kelas_saya: number
    created_at: number
    _all: number
  }


  export type Orders_kelasAvgAggregateInputType = {
    id?: true
    id_orders?: true
    id_kelas_saya?: true
  }

  export type Orders_kelasSumAggregateInputType = {
    id?: true
    id_orders?: true
    id_kelas_saya?: true
  }

  export type Orders_kelasMinAggregateInputType = {
    id?: true
    id_orders?: true
    id_kelas_saya?: true
    created_at?: true
  }

  export type Orders_kelasMaxAggregateInputType = {
    id?: true
    id_orders?: true
    id_kelas_saya?: true
    created_at?: true
  }

  export type Orders_kelasCountAggregateInputType = {
    id?: true
    id_orders?: true
    id_kelas_saya?: true
    created_at?: true
    _all?: true
  }

  export type Orders_kelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders_kelas to aggregate.
     */
    where?: Orders_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_kelas to fetch.
     */
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Orders_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders_kelas
    **/
    _count?: true | Orders_kelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Orders_kelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Orders_kelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Orders_kelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Orders_kelasMaxAggregateInputType
  }

  export type GetOrders_kelasAggregateType<T extends Orders_kelasAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders_kelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders_kelas[P]>
      : GetScalarType<T[P], AggregateOrders_kelas[P]>
  }




  export type Orders_kelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_kelasWhereInput
    orderBy?: Orders_kelasOrderByWithAggregationInput | Orders_kelasOrderByWithAggregationInput[]
    by: Orders_kelasScalarFieldEnum[] | Orders_kelasScalarFieldEnum
    having?: Orders_kelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Orders_kelasCountAggregateInputType | true
    _avg?: Orders_kelasAvgAggregateInputType
    _sum?: Orders_kelasSumAggregateInputType
    _min?: Orders_kelasMinAggregateInputType
    _max?: Orders_kelasMaxAggregateInputType
  }

  export type Orders_kelasGroupByOutputType = {
    id: number
    id_orders: number
    id_kelas_saya: number
    created_at: Date
    _count: Orders_kelasCountAggregateOutputType | null
    _avg: Orders_kelasAvgAggregateOutputType | null
    _sum: Orders_kelasSumAggregateOutputType | null
    _min: Orders_kelasMinAggregateOutputType | null
    _max: Orders_kelasMaxAggregateOutputType | null
  }

  type GetOrders_kelasGroupByPayload<T extends Orders_kelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Orders_kelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Orders_kelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Orders_kelasGroupByOutputType[P]>
            : GetScalarType<T[P], Orders_kelasGroupByOutputType[P]>
        }
      >
    >


  export type Orders_kelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_orders?: boolean
    id_kelas_saya?: boolean
    created_at?: boolean
    orders?: boolean | OrderDefaultArgs<ExtArgs>
    kelas_saya?: boolean | Kelas_sayaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders_kelas"]>


  export type Orders_kelasSelectScalar = {
    id?: boolean
    id_orders?: boolean
    id_kelas_saya?: boolean
    created_at?: boolean
  }

  export type Orders_kelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | OrderDefaultArgs<ExtArgs>
    kelas_saya?: boolean | Kelas_sayaDefaultArgs<ExtArgs>
  }

  export type $Orders_kelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Orders_kelas"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>
      kelas_saya: Prisma.$Kelas_sayaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_orders: number
      id_kelas_saya: number
      created_at: Date
    }, ExtArgs["result"]["orders_kelas"]>
    composites: {}
  }

  type Orders_kelasGetPayload<S extends boolean | null | undefined | Orders_kelasDefaultArgs> = $Result.GetResult<Prisma.$Orders_kelasPayload, S>

  type Orders_kelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Orders_kelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Orders_kelasCountAggregateInputType | true
    }

  export interface Orders_kelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Orders_kelas'], meta: { name: 'Orders_kelas' } }
    /**
     * Find zero or one Orders_kelas that matches the filter.
     * @param {Orders_kelasFindUniqueArgs} args - Arguments to find a Orders_kelas
     * @example
     * // Get one Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Orders_kelasFindUniqueArgs>(args: SelectSubset<T, Orders_kelasFindUniqueArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Orders_kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Orders_kelasFindUniqueOrThrowArgs} args - Arguments to find a Orders_kelas
     * @example
     * // Get one Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Orders_kelasFindUniqueOrThrowArgs>(args: SelectSubset<T, Orders_kelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Orders_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasFindFirstArgs} args - Arguments to find a Orders_kelas
     * @example
     * // Get one Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Orders_kelasFindFirstArgs>(args?: SelectSubset<T, Orders_kelasFindFirstArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Orders_kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasFindFirstOrThrowArgs} args - Arguments to find a Orders_kelas
     * @example
     * // Get one Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Orders_kelasFindFirstOrThrowArgs>(args?: SelectSubset<T, Orders_kelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findMany()
     * 
     * // Get first 10 Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orders_kelasWithIdOnly = await prisma.orders_kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Orders_kelasFindManyArgs>(args?: SelectSubset<T, Orders_kelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Orders_kelas.
     * @param {Orders_kelasCreateArgs} args - Arguments to create a Orders_kelas.
     * @example
     * // Create one Orders_kelas
     * const Orders_kelas = await prisma.orders_kelas.create({
     *   data: {
     *     // ... data to create a Orders_kelas
     *   }
     * })
     * 
     */
    create<T extends Orders_kelasCreateArgs>(args: SelectSubset<T, Orders_kelasCreateArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders_kelas.
     * @param {Orders_kelasCreateManyArgs} args - Arguments to create many Orders_kelas.
     * @example
     * // Create many Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Orders_kelasCreateManyArgs>(args?: SelectSubset<T, Orders_kelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Orders_kelas.
     * @param {Orders_kelasDeleteArgs} args - Arguments to delete one Orders_kelas.
     * @example
     * // Delete one Orders_kelas
     * const Orders_kelas = await prisma.orders_kelas.delete({
     *   where: {
     *     // ... filter to delete one Orders_kelas
     *   }
     * })
     * 
     */
    delete<T extends Orders_kelasDeleteArgs>(args: SelectSubset<T, Orders_kelasDeleteArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Orders_kelas.
     * @param {Orders_kelasUpdateArgs} args - Arguments to update one Orders_kelas.
     * @example
     * // Update one Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Orders_kelasUpdateArgs>(args: SelectSubset<T, Orders_kelasUpdateArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders_kelas.
     * @param {Orders_kelasDeleteManyArgs} args - Arguments to filter Orders_kelas to delete.
     * @example
     * // Delete a few Orders_kelas
     * const { count } = await prisma.orders_kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Orders_kelasDeleteManyArgs>(args?: SelectSubset<T, Orders_kelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Orders_kelasUpdateManyArgs>(args: SelectSubset<T, Orders_kelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Orders_kelas.
     * @param {Orders_kelasUpsertArgs} args - Arguments to update or create a Orders_kelas.
     * @example
     * // Update or create a Orders_kelas
     * const orders_kelas = await prisma.orders_kelas.upsert({
     *   create: {
     *     // ... data to create a Orders_kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders_kelas we want to update
     *   }
     * })
     */
    upsert<T extends Orders_kelasUpsertArgs>(args: SelectSubset<T, Orders_kelasUpsertArgs<ExtArgs>>): Prisma__Orders_kelasClient<$Result.GetResult<Prisma.$Orders_kelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasCountArgs} args - Arguments to filter Orders_kelas to count.
     * @example
     * // Count the number of Orders_kelas
     * const count = await prisma.orders_kelas.count({
     *   where: {
     *     // ... the filter for the Orders_kelas we want to count
     *   }
     * })
    **/
    count<T extends Orders_kelasCountArgs>(
      args?: Subset<T, Orders_kelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Orders_kelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Orders_kelasAggregateArgs>(args: Subset<T, Orders_kelasAggregateArgs>): Prisma.PrismaPromise<GetOrders_kelasAggregateType<T>>

    /**
     * Group by Orders_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_kelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Orders_kelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Orders_kelasGroupByArgs['orderBy'] }
        : { orderBy?: Orders_kelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Orders_kelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrders_kelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Orders_kelas model
   */
  readonly fields: Orders_kelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Orders_kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Orders_kelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    kelas_saya<T extends Kelas_sayaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Kelas_sayaDefaultArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Orders_kelas model
   */ 
  interface Orders_kelasFieldRefs {
    readonly id: FieldRef<"Orders_kelas", 'Int'>
    readonly id_orders: FieldRef<"Orders_kelas", 'Int'>
    readonly id_kelas_saya: FieldRef<"Orders_kelas", 'Int'>
    readonly created_at: FieldRef<"Orders_kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Orders_kelas findUnique
   */
  export type Orders_kelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Orders_kelas to fetch.
     */
    where: Orders_kelasWhereUniqueInput
  }

  /**
   * Orders_kelas findUniqueOrThrow
   */
  export type Orders_kelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Orders_kelas to fetch.
     */
    where: Orders_kelasWhereUniqueInput
  }

  /**
   * Orders_kelas findFirst
   */
  export type Orders_kelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Orders_kelas to fetch.
     */
    where?: Orders_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_kelas to fetch.
     */
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders_kelas.
     */
    cursor?: Orders_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders_kelas.
     */
    distinct?: Orders_kelasScalarFieldEnum | Orders_kelasScalarFieldEnum[]
  }

  /**
   * Orders_kelas findFirstOrThrow
   */
  export type Orders_kelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Orders_kelas to fetch.
     */
    where?: Orders_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_kelas to fetch.
     */
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders_kelas.
     */
    cursor?: Orders_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders_kelas.
     */
    distinct?: Orders_kelasScalarFieldEnum | Orders_kelasScalarFieldEnum[]
  }

  /**
   * Orders_kelas findMany
   */
  export type Orders_kelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Orders_kelas to fetch.
     */
    where?: Orders_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_kelas to fetch.
     */
    orderBy?: Orders_kelasOrderByWithRelationInput | Orders_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders_kelas.
     */
    cursor?: Orders_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_kelas.
     */
    skip?: number
    distinct?: Orders_kelasScalarFieldEnum | Orders_kelasScalarFieldEnum[]
  }

  /**
   * Orders_kelas create
   */
  export type Orders_kelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Orders_kelas.
     */
    data: XOR<Orders_kelasCreateInput, Orders_kelasUncheckedCreateInput>
  }

  /**
   * Orders_kelas createMany
   */
  export type Orders_kelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders_kelas.
     */
    data: Orders_kelasCreateManyInput | Orders_kelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Orders_kelas update
   */
  export type Orders_kelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Orders_kelas.
     */
    data: XOR<Orders_kelasUpdateInput, Orders_kelasUncheckedUpdateInput>
    /**
     * Choose, which Orders_kelas to update.
     */
    where: Orders_kelasWhereUniqueInput
  }

  /**
   * Orders_kelas updateMany
   */
  export type Orders_kelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders_kelas.
     */
    data: XOR<Orders_kelasUpdateManyMutationInput, Orders_kelasUncheckedUpdateManyInput>
    /**
     * Filter which Orders_kelas to update
     */
    where?: Orders_kelasWhereInput
  }

  /**
   * Orders_kelas upsert
   */
  export type Orders_kelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Orders_kelas to update in case it exists.
     */
    where: Orders_kelasWhereUniqueInput
    /**
     * In case the Orders_kelas found by the `where` argument doesn't exist, create a new Orders_kelas with this data.
     */
    create: XOR<Orders_kelasCreateInput, Orders_kelasUncheckedCreateInput>
    /**
     * In case the Orders_kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Orders_kelasUpdateInput, Orders_kelasUncheckedUpdateInput>
  }

  /**
   * Orders_kelas delete
   */
  export type Orders_kelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
    /**
     * Filter which Orders_kelas to delete.
     */
    where: Orders_kelasWhereUniqueInput
  }

  /**
   * Orders_kelas deleteMany
   */
  export type Orders_kelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders_kelas to delete
     */
    where?: Orders_kelasWhereInput
  }

  /**
   * Orders_kelas without action
   */
  export type Orders_kelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_kelas
     */
    select?: Orders_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_kelasInclude<ExtArgs> | null
  }


  /**
   * Model Pembayaran
   */

  export type AggregatePembayaran = {
    _count: PembayaranCountAggregateOutputType | null
    _avg: PembayaranAvgAggregateOutputType | null
    _sum: PembayaranSumAggregateOutputType | null
    _min: PembayaranMinAggregateOutputType | null
    _max: PembayaranMaxAggregateOutputType | null
  }

  export type PembayaranAvgAggregateOutputType = {
    id: number | null
  }

  export type PembayaranSumAggregateOutputType = {
    id: number | null
  }

  export type PembayaranMinAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    jenis_pembayaran: $Enums.Jenis_pembayaran | null
    created_at: Date | null
  }

  export type PembayaranMaxAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    jenis_pembayaran: $Enums.Jenis_pembayaran | null
    created_at: Date | null
  }

  export type PembayaranCountAggregateOutputType = {
    id: number
    kode: number
    nama: number
    jenis_pembayaran: number
    created_at: number
    _all: number
  }


  export type PembayaranAvgAggregateInputType = {
    id?: true
  }

  export type PembayaranSumAggregateInputType = {
    id?: true
  }

  export type PembayaranMinAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    jenis_pembayaran?: true
    created_at?: true
  }

  export type PembayaranMaxAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    jenis_pembayaran?: true
    created_at?: true
  }

  export type PembayaranCountAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    jenis_pembayaran?: true
    created_at?: true
    _all?: true
  }

  export type PembayaranAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pembayaran to aggregate.
     */
    where?: PembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pembayarans to fetch.
     */
    orderBy?: PembayaranOrderByWithRelationInput | PembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pembayarans
    **/
    _count?: true | PembayaranCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PembayaranAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PembayaranSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PembayaranMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PembayaranMaxAggregateInputType
  }

  export type GetPembayaranAggregateType<T extends PembayaranAggregateArgs> = {
        [P in keyof T & keyof AggregatePembayaran]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePembayaran[P]>
      : GetScalarType<T[P], AggregatePembayaran[P]>
  }




  export type PembayaranGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PembayaranWhereInput
    orderBy?: PembayaranOrderByWithAggregationInput | PembayaranOrderByWithAggregationInput[]
    by: PembayaranScalarFieldEnum[] | PembayaranScalarFieldEnum
    having?: PembayaranScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PembayaranCountAggregateInputType | true
    _avg?: PembayaranAvgAggregateInputType
    _sum?: PembayaranSumAggregateInputType
    _min?: PembayaranMinAggregateInputType
    _max?: PembayaranMaxAggregateInputType
  }

  export type PembayaranGroupByOutputType = {
    id: number
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at: Date
    _count: PembayaranCountAggregateOutputType | null
    _avg: PembayaranAvgAggregateOutputType | null
    _sum: PembayaranSumAggregateOutputType | null
    _min: PembayaranMinAggregateOutputType | null
    _max: PembayaranMaxAggregateOutputType | null
  }

  type GetPembayaranGroupByPayload<T extends PembayaranGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PembayaranGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PembayaranGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PembayaranGroupByOutputType[P]>
            : GetScalarType<T[P], PembayaranGroupByOutputType[P]>
        }
      >
    >


  export type PembayaranSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kode?: boolean
    nama?: boolean
    jenis_pembayaran?: boolean
    created_at?: boolean
    orders_pembayaran?: boolean | Pembayaran$orders_pembayaranArgs<ExtArgs>
    transaksi_kelas?: boolean | Pembayaran$transaksi_kelasArgs<ExtArgs>
    _count?: boolean | PembayaranCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pembayaran"]>


  export type PembayaranSelectScalar = {
    id?: boolean
    kode?: boolean
    nama?: boolean
    jenis_pembayaran?: boolean
    created_at?: boolean
  }

  export type PembayaranInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders_pembayaran?: boolean | Pembayaran$orders_pembayaranArgs<ExtArgs>
    transaksi_kelas?: boolean | Pembayaran$transaksi_kelasArgs<ExtArgs>
    _count?: boolean | PembayaranCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PembayaranPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pembayaran"
    objects: {
      orders_pembayaran: Prisma.$Orders_pembayaranPayload<ExtArgs>[]
      transaksi_kelas: Prisma.$Transaksi_kelasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      kode: string
      nama: string
      jenis_pembayaran: $Enums.Jenis_pembayaran
      created_at: Date
    }, ExtArgs["result"]["pembayaran"]>
    composites: {}
  }

  type PembayaranGetPayload<S extends boolean | null | undefined | PembayaranDefaultArgs> = $Result.GetResult<Prisma.$PembayaranPayload, S>

  type PembayaranCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PembayaranFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PembayaranCountAggregateInputType | true
    }

  export interface PembayaranDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pembayaran'], meta: { name: 'Pembayaran' } }
    /**
     * Find zero or one Pembayaran that matches the filter.
     * @param {PembayaranFindUniqueArgs} args - Arguments to find a Pembayaran
     * @example
     * // Get one Pembayaran
     * const pembayaran = await prisma.pembayaran.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PembayaranFindUniqueArgs>(args: SelectSubset<T, PembayaranFindUniqueArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pembayaran that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PembayaranFindUniqueOrThrowArgs} args - Arguments to find a Pembayaran
     * @example
     * // Get one Pembayaran
     * const pembayaran = await prisma.pembayaran.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PembayaranFindUniqueOrThrowArgs>(args: SelectSubset<T, PembayaranFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pembayaran that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranFindFirstArgs} args - Arguments to find a Pembayaran
     * @example
     * // Get one Pembayaran
     * const pembayaran = await prisma.pembayaran.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PembayaranFindFirstArgs>(args?: SelectSubset<T, PembayaranFindFirstArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pembayaran that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranFindFirstOrThrowArgs} args - Arguments to find a Pembayaran
     * @example
     * // Get one Pembayaran
     * const pembayaran = await prisma.pembayaran.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PembayaranFindFirstOrThrowArgs>(args?: SelectSubset<T, PembayaranFindFirstOrThrowArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pembayarans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pembayarans
     * const pembayarans = await prisma.pembayaran.findMany()
     * 
     * // Get first 10 Pembayarans
     * const pembayarans = await prisma.pembayaran.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pembayaranWithIdOnly = await prisma.pembayaran.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PembayaranFindManyArgs>(args?: SelectSubset<T, PembayaranFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pembayaran.
     * @param {PembayaranCreateArgs} args - Arguments to create a Pembayaran.
     * @example
     * // Create one Pembayaran
     * const Pembayaran = await prisma.pembayaran.create({
     *   data: {
     *     // ... data to create a Pembayaran
     *   }
     * })
     * 
     */
    create<T extends PembayaranCreateArgs>(args: SelectSubset<T, PembayaranCreateArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pembayarans.
     * @param {PembayaranCreateManyArgs} args - Arguments to create many Pembayarans.
     * @example
     * // Create many Pembayarans
     * const pembayaran = await prisma.pembayaran.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PembayaranCreateManyArgs>(args?: SelectSubset<T, PembayaranCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pembayaran.
     * @param {PembayaranDeleteArgs} args - Arguments to delete one Pembayaran.
     * @example
     * // Delete one Pembayaran
     * const Pembayaran = await prisma.pembayaran.delete({
     *   where: {
     *     // ... filter to delete one Pembayaran
     *   }
     * })
     * 
     */
    delete<T extends PembayaranDeleteArgs>(args: SelectSubset<T, PembayaranDeleteArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pembayaran.
     * @param {PembayaranUpdateArgs} args - Arguments to update one Pembayaran.
     * @example
     * // Update one Pembayaran
     * const pembayaran = await prisma.pembayaran.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PembayaranUpdateArgs>(args: SelectSubset<T, PembayaranUpdateArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pembayarans.
     * @param {PembayaranDeleteManyArgs} args - Arguments to filter Pembayarans to delete.
     * @example
     * // Delete a few Pembayarans
     * const { count } = await prisma.pembayaran.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PembayaranDeleteManyArgs>(args?: SelectSubset<T, PembayaranDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pembayarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pembayarans
     * const pembayaran = await prisma.pembayaran.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PembayaranUpdateManyArgs>(args: SelectSubset<T, PembayaranUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pembayaran.
     * @param {PembayaranUpsertArgs} args - Arguments to update or create a Pembayaran.
     * @example
     * // Update or create a Pembayaran
     * const pembayaran = await prisma.pembayaran.upsert({
     *   create: {
     *     // ... data to create a Pembayaran
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pembayaran we want to update
     *   }
     * })
     */
    upsert<T extends PembayaranUpsertArgs>(args: SelectSubset<T, PembayaranUpsertArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pembayarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranCountArgs} args - Arguments to filter Pembayarans to count.
     * @example
     * // Count the number of Pembayarans
     * const count = await prisma.pembayaran.count({
     *   where: {
     *     // ... the filter for the Pembayarans we want to count
     *   }
     * })
    **/
    count<T extends PembayaranCountArgs>(
      args?: Subset<T, PembayaranCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PembayaranCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pembayaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PembayaranAggregateArgs>(args: Subset<T, PembayaranAggregateArgs>): Prisma.PrismaPromise<GetPembayaranAggregateType<T>>

    /**
     * Group by Pembayaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PembayaranGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PembayaranGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PembayaranGroupByArgs['orderBy'] }
        : { orderBy?: PembayaranGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PembayaranGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPembayaranGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pembayaran model
   */
  readonly fields: PembayaranFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pembayaran.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PembayaranClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders_pembayaran<T extends Pembayaran$orders_pembayaranArgs<ExtArgs> = {}>(args?: Subset<T, Pembayaran$orders_pembayaranArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findMany"> | Null>
    transaksi_kelas<T extends Pembayaran$transaksi_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Pembayaran$transaksi_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pembayaran model
   */ 
  interface PembayaranFieldRefs {
    readonly id: FieldRef<"Pembayaran", 'Int'>
    readonly kode: FieldRef<"Pembayaran", 'String'>
    readonly nama: FieldRef<"Pembayaran", 'String'>
    readonly jenis_pembayaran: FieldRef<"Pembayaran", 'Jenis_pembayaran'>
    readonly created_at: FieldRef<"Pembayaran", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pembayaran findUnique
   */
  export type PembayaranFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Pembayaran to fetch.
     */
    where: PembayaranWhereUniqueInput
  }

  /**
   * Pembayaran findUniqueOrThrow
   */
  export type PembayaranFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Pembayaran to fetch.
     */
    where: PembayaranWhereUniqueInput
  }

  /**
   * Pembayaran findFirst
   */
  export type PembayaranFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Pembayaran to fetch.
     */
    where?: PembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pembayarans to fetch.
     */
    orderBy?: PembayaranOrderByWithRelationInput | PembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pembayarans.
     */
    cursor?: PembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pembayarans.
     */
    distinct?: PembayaranScalarFieldEnum | PembayaranScalarFieldEnum[]
  }

  /**
   * Pembayaran findFirstOrThrow
   */
  export type PembayaranFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Pembayaran to fetch.
     */
    where?: PembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pembayarans to fetch.
     */
    orderBy?: PembayaranOrderByWithRelationInput | PembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pembayarans.
     */
    cursor?: PembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pembayarans.
     */
    distinct?: PembayaranScalarFieldEnum | PembayaranScalarFieldEnum[]
  }

  /**
   * Pembayaran findMany
   */
  export type PembayaranFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Pembayarans to fetch.
     */
    where?: PembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pembayarans to fetch.
     */
    orderBy?: PembayaranOrderByWithRelationInput | PembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pembayarans.
     */
    cursor?: PembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pembayarans.
     */
    skip?: number
    distinct?: PembayaranScalarFieldEnum | PembayaranScalarFieldEnum[]
  }

  /**
   * Pembayaran create
   */
  export type PembayaranCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * The data needed to create a Pembayaran.
     */
    data: XOR<PembayaranCreateInput, PembayaranUncheckedCreateInput>
  }

  /**
   * Pembayaran createMany
   */
  export type PembayaranCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pembayarans.
     */
    data: PembayaranCreateManyInput | PembayaranCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pembayaran update
   */
  export type PembayaranUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * The data needed to update a Pembayaran.
     */
    data: XOR<PembayaranUpdateInput, PembayaranUncheckedUpdateInput>
    /**
     * Choose, which Pembayaran to update.
     */
    where: PembayaranWhereUniqueInput
  }

  /**
   * Pembayaran updateMany
   */
  export type PembayaranUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pembayarans.
     */
    data: XOR<PembayaranUpdateManyMutationInput, PembayaranUncheckedUpdateManyInput>
    /**
     * Filter which Pembayarans to update
     */
    where?: PembayaranWhereInput
  }

  /**
   * Pembayaran upsert
   */
  export type PembayaranUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * The filter to search for the Pembayaran to update in case it exists.
     */
    where: PembayaranWhereUniqueInput
    /**
     * In case the Pembayaran found by the `where` argument doesn't exist, create a new Pembayaran with this data.
     */
    create: XOR<PembayaranCreateInput, PembayaranUncheckedCreateInput>
    /**
     * In case the Pembayaran was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PembayaranUpdateInput, PembayaranUncheckedUpdateInput>
  }

  /**
   * Pembayaran delete
   */
  export type PembayaranDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
    /**
     * Filter which Pembayaran to delete.
     */
    where: PembayaranWhereUniqueInput
  }

  /**
   * Pembayaran deleteMany
   */
  export type PembayaranDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pembayarans to delete
     */
    where?: PembayaranWhereInput
  }

  /**
   * Pembayaran.orders_pembayaran
   */
  export type Pembayaran$orders_pembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    where?: Orders_pembayaranWhereInput
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    cursor?: Orders_pembayaranWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Orders_pembayaranScalarFieldEnum | Orders_pembayaranScalarFieldEnum[]
  }

  /**
   * Pembayaran.transaksi_kelas
   */
  export type Pembayaran$transaksi_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    where?: Transaksi_kelasWhereInput
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    cursor?: Transaksi_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Transaksi_kelasScalarFieldEnum | Transaksi_kelasScalarFieldEnum[]
  }

  /**
   * Pembayaran without action
   */
  export type PembayaranDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pembayaran
     */
    select?: PembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PembayaranInclude<ExtArgs> | null
  }


  /**
   * Model Orders_pembayaran
   */

  export type AggregateOrders_pembayaran = {
    _count: Orders_pembayaranCountAggregateOutputType | null
    _avg: Orders_pembayaranAvgAggregateOutputType | null
    _sum: Orders_pembayaranSumAggregateOutputType | null
    _min: Orders_pembayaranMinAggregateOutputType | null
    _max: Orders_pembayaranMaxAggregateOutputType | null
  }

  export type Orders_pembayaranAvgAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_pembayaran: number | null
  }

  export type Orders_pembayaranSumAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_pembayaran: number | null
  }

  export type Orders_pembayaranMinAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_pembayaran: number | null
    created_at: Date | null
  }

  export type Orders_pembayaranMaxAggregateOutputType = {
    id: number | null
    id_orders: number | null
    id_pembayaran: number | null
    created_at: Date | null
  }

  export type Orders_pembayaranCountAggregateOutputType = {
    id: number
    id_orders: number
    id_pembayaran: number
    created_at: number
    _all: number
  }


  export type Orders_pembayaranAvgAggregateInputType = {
    id?: true
    id_orders?: true
    id_pembayaran?: true
  }

  export type Orders_pembayaranSumAggregateInputType = {
    id?: true
    id_orders?: true
    id_pembayaran?: true
  }

  export type Orders_pembayaranMinAggregateInputType = {
    id?: true
    id_orders?: true
    id_pembayaran?: true
    created_at?: true
  }

  export type Orders_pembayaranMaxAggregateInputType = {
    id?: true
    id_orders?: true
    id_pembayaran?: true
    created_at?: true
  }

  export type Orders_pembayaranCountAggregateInputType = {
    id?: true
    id_orders?: true
    id_pembayaran?: true
    created_at?: true
    _all?: true
  }

  export type Orders_pembayaranAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders_pembayaran to aggregate.
     */
    where?: Orders_pembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_pembayarans to fetch.
     */
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Orders_pembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders_pembayarans
    **/
    _count?: true | Orders_pembayaranCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Orders_pembayaranAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Orders_pembayaranSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Orders_pembayaranMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Orders_pembayaranMaxAggregateInputType
  }

  export type GetOrders_pembayaranAggregateType<T extends Orders_pembayaranAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders_pembayaran]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders_pembayaran[P]>
      : GetScalarType<T[P], AggregateOrders_pembayaran[P]>
  }




  export type Orders_pembayaranGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Orders_pembayaranWhereInput
    orderBy?: Orders_pembayaranOrderByWithAggregationInput | Orders_pembayaranOrderByWithAggregationInput[]
    by: Orders_pembayaranScalarFieldEnum[] | Orders_pembayaranScalarFieldEnum
    having?: Orders_pembayaranScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Orders_pembayaranCountAggregateInputType | true
    _avg?: Orders_pembayaranAvgAggregateInputType
    _sum?: Orders_pembayaranSumAggregateInputType
    _min?: Orders_pembayaranMinAggregateInputType
    _max?: Orders_pembayaranMaxAggregateInputType
  }

  export type Orders_pembayaranGroupByOutputType = {
    id: number
    id_orders: number
    id_pembayaran: number
    created_at: Date
    _count: Orders_pembayaranCountAggregateOutputType | null
    _avg: Orders_pembayaranAvgAggregateOutputType | null
    _sum: Orders_pembayaranSumAggregateOutputType | null
    _min: Orders_pembayaranMinAggregateOutputType | null
    _max: Orders_pembayaranMaxAggregateOutputType | null
  }

  type GetOrders_pembayaranGroupByPayload<T extends Orders_pembayaranGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Orders_pembayaranGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Orders_pembayaranGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Orders_pembayaranGroupByOutputType[P]>
            : GetScalarType<T[P], Orders_pembayaranGroupByOutputType[P]>
        }
      >
    >


  export type Orders_pembayaranSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_orders?: boolean
    id_pembayaran?: boolean
    created_at?: boolean
    orders?: boolean | OrderDefaultArgs<ExtArgs>
    pembayaran?: boolean | PembayaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders_pembayaran"]>


  export type Orders_pembayaranSelectScalar = {
    id?: boolean
    id_orders?: boolean
    id_pembayaran?: boolean
    created_at?: boolean
  }

  export type Orders_pembayaranInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | OrderDefaultArgs<ExtArgs>
    pembayaran?: boolean | PembayaranDefaultArgs<ExtArgs>
  }

  export type $Orders_pembayaranPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Orders_pembayaran"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>
      pembayaran: Prisma.$PembayaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_orders: number
      id_pembayaran: number
      created_at: Date
    }, ExtArgs["result"]["orders_pembayaran"]>
    composites: {}
  }

  type Orders_pembayaranGetPayload<S extends boolean | null | undefined | Orders_pembayaranDefaultArgs> = $Result.GetResult<Prisma.$Orders_pembayaranPayload, S>

  type Orders_pembayaranCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Orders_pembayaranFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Orders_pembayaranCountAggregateInputType | true
    }

  export interface Orders_pembayaranDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Orders_pembayaran'], meta: { name: 'Orders_pembayaran' } }
    /**
     * Find zero or one Orders_pembayaran that matches the filter.
     * @param {Orders_pembayaranFindUniqueArgs} args - Arguments to find a Orders_pembayaran
     * @example
     * // Get one Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Orders_pembayaranFindUniqueArgs>(args: SelectSubset<T, Orders_pembayaranFindUniqueArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Orders_pembayaran that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Orders_pembayaranFindUniqueOrThrowArgs} args - Arguments to find a Orders_pembayaran
     * @example
     * // Get one Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Orders_pembayaranFindUniqueOrThrowArgs>(args: SelectSubset<T, Orders_pembayaranFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Orders_pembayaran that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranFindFirstArgs} args - Arguments to find a Orders_pembayaran
     * @example
     * // Get one Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Orders_pembayaranFindFirstArgs>(args?: SelectSubset<T, Orders_pembayaranFindFirstArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Orders_pembayaran that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranFindFirstOrThrowArgs} args - Arguments to find a Orders_pembayaran
     * @example
     * // Get one Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Orders_pembayaranFindFirstOrThrowArgs>(args?: SelectSubset<T, Orders_pembayaranFindFirstOrThrowArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders_pembayarans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders_pembayarans
     * const orders_pembayarans = await prisma.orders_pembayaran.findMany()
     * 
     * // Get first 10 Orders_pembayarans
     * const orders_pembayarans = await prisma.orders_pembayaran.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orders_pembayaranWithIdOnly = await prisma.orders_pembayaran.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Orders_pembayaranFindManyArgs>(args?: SelectSubset<T, Orders_pembayaranFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Orders_pembayaran.
     * @param {Orders_pembayaranCreateArgs} args - Arguments to create a Orders_pembayaran.
     * @example
     * // Create one Orders_pembayaran
     * const Orders_pembayaran = await prisma.orders_pembayaran.create({
     *   data: {
     *     // ... data to create a Orders_pembayaran
     *   }
     * })
     * 
     */
    create<T extends Orders_pembayaranCreateArgs>(args: SelectSubset<T, Orders_pembayaranCreateArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders_pembayarans.
     * @param {Orders_pembayaranCreateManyArgs} args - Arguments to create many Orders_pembayarans.
     * @example
     * // Create many Orders_pembayarans
     * const orders_pembayaran = await prisma.orders_pembayaran.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Orders_pembayaranCreateManyArgs>(args?: SelectSubset<T, Orders_pembayaranCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Orders_pembayaran.
     * @param {Orders_pembayaranDeleteArgs} args - Arguments to delete one Orders_pembayaran.
     * @example
     * // Delete one Orders_pembayaran
     * const Orders_pembayaran = await prisma.orders_pembayaran.delete({
     *   where: {
     *     // ... filter to delete one Orders_pembayaran
     *   }
     * })
     * 
     */
    delete<T extends Orders_pembayaranDeleteArgs>(args: SelectSubset<T, Orders_pembayaranDeleteArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Orders_pembayaran.
     * @param {Orders_pembayaranUpdateArgs} args - Arguments to update one Orders_pembayaran.
     * @example
     * // Update one Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Orders_pembayaranUpdateArgs>(args: SelectSubset<T, Orders_pembayaranUpdateArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders_pembayarans.
     * @param {Orders_pembayaranDeleteManyArgs} args - Arguments to filter Orders_pembayarans to delete.
     * @example
     * // Delete a few Orders_pembayarans
     * const { count } = await prisma.orders_pembayaran.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Orders_pembayaranDeleteManyArgs>(args?: SelectSubset<T, Orders_pembayaranDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders_pembayarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders_pembayarans
     * const orders_pembayaran = await prisma.orders_pembayaran.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Orders_pembayaranUpdateManyArgs>(args: SelectSubset<T, Orders_pembayaranUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Orders_pembayaran.
     * @param {Orders_pembayaranUpsertArgs} args - Arguments to update or create a Orders_pembayaran.
     * @example
     * // Update or create a Orders_pembayaran
     * const orders_pembayaran = await prisma.orders_pembayaran.upsert({
     *   create: {
     *     // ... data to create a Orders_pembayaran
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders_pembayaran we want to update
     *   }
     * })
     */
    upsert<T extends Orders_pembayaranUpsertArgs>(args: SelectSubset<T, Orders_pembayaranUpsertArgs<ExtArgs>>): Prisma__Orders_pembayaranClient<$Result.GetResult<Prisma.$Orders_pembayaranPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders_pembayarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranCountArgs} args - Arguments to filter Orders_pembayarans to count.
     * @example
     * // Count the number of Orders_pembayarans
     * const count = await prisma.orders_pembayaran.count({
     *   where: {
     *     // ... the filter for the Orders_pembayarans we want to count
     *   }
     * })
    **/
    count<T extends Orders_pembayaranCountArgs>(
      args?: Subset<T, Orders_pembayaranCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Orders_pembayaranCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders_pembayaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Orders_pembayaranAggregateArgs>(args: Subset<T, Orders_pembayaranAggregateArgs>): Prisma.PrismaPromise<GetOrders_pembayaranAggregateType<T>>

    /**
     * Group by Orders_pembayaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Orders_pembayaranGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Orders_pembayaranGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Orders_pembayaranGroupByArgs['orderBy'] }
        : { orderBy?: Orders_pembayaranGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Orders_pembayaranGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrders_pembayaranGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Orders_pembayaran model
   */
  readonly fields: Orders_pembayaranFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Orders_pembayaran.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Orders_pembayaranClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    pembayaran<T extends PembayaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PembayaranDefaultArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Orders_pembayaran model
   */ 
  interface Orders_pembayaranFieldRefs {
    readonly id: FieldRef<"Orders_pembayaran", 'Int'>
    readonly id_orders: FieldRef<"Orders_pembayaran", 'Int'>
    readonly id_pembayaran: FieldRef<"Orders_pembayaran", 'Int'>
    readonly created_at: FieldRef<"Orders_pembayaran", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Orders_pembayaran findUnique
   */
  export type Orders_pembayaranFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Orders_pembayaran to fetch.
     */
    where: Orders_pembayaranWhereUniqueInput
  }

  /**
   * Orders_pembayaran findUniqueOrThrow
   */
  export type Orders_pembayaranFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Orders_pembayaran to fetch.
     */
    where: Orders_pembayaranWhereUniqueInput
  }

  /**
   * Orders_pembayaran findFirst
   */
  export type Orders_pembayaranFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Orders_pembayaran to fetch.
     */
    where?: Orders_pembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_pembayarans to fetch.
     */
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders_pembayarans.
     */
    cursor?: Orders_pembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders_pembayarans.
     */
    distinct?: Orders_pembayaranScalarFieldEnum | Orders_pembayaranScalarFieldEnum[]
  }

  /**
   * Orders_pembayaran findFirstOrThrow
   */
  export type Orders_pembayaranFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Orders_pembayaran to fetch.
     */
    where?: Orders_pembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_pembayarans to fetch.
     */
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders_pembayarans.
     */
    cursor?: Orders_pembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_pembayarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders_pembayarans.
     */
    distinct?: Orders_pembayaranScalarFieldEnum | Orders_pembayaranScalarFieldEnum[]
  }

  /**
   * Orders_pembayaran findMany
   */
  export type Orders_pembayaranFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter, which Orders_pembayarans to fetch.
     */
    where?: Orders_pembayaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders_pembayarans to fetch.
     */
    orderBy?: Orders_pembayaranOrderByWithRelationInput | Orders_pembayaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders_pembayarans.
     */
    cursor?: Orders_pembayaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders_pembayarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders_pembayarans.
     */
    skip?: number
    distinct?: Orders_pembayaranScalarFieldEnum | Orders_pembayaranScalarFieldEnum[]
  }

  /**
   * Orders_pembayaran create
   */
  export type Orders_pembayaranCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * The data needed to create a Orders_pembayaran.
     */
    data: XOR<Orders_pembayaranCreateInput, Orders_pembayaranUncheckedCreateInput>
  }

  /**
   * Orders_pembayaran createMany
   */
  export type Orders_pembayaranCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders_pembayarans.
     */
    data: Orders_pembayaranCreateManyInput | Orders_pembayaranCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Orders_pembayaran update
   */
  export type Orders_pembayaranUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * The data needed to update a Orders_pembayaran.
     */
    data: XOR<Orders_pembayaranUpdateInput, Orders_pembayaranUncheckedUpdateInput>
    /**
     * Choose, which Orders_pembayaran to update.
     */
    where: Orders_pembayaranWhereUniqueInput
  }

  /**
   * Orders_pembayaran updateMany
   */
  export type Orders_pembayaranUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders_pembayarans.
     */
    data: XOR<Orders_pembayaranUpdateManyMutationInput, Orders_pembayaranUncheckedUpdateManyInput>
    /**
     * Filter which Orders_pembayarans to update
     */
    where?: Orders_pembayaranWhereInput
  }

  /**
   * Orders_pembayaran upsert
   */
  export type Orders_pembayaranUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * The filter to search for the Orders_pembayaran to update in case it exists.
     */
    where: Orders_pembayaranWhereUniqueInput
    /**
     * In case the Orders_pembayaran found by the `where` argument doesn't exist, create a new Orders_pembayaran with this data.
     */
    create: XOR<Orders_pembayaranCreateInput, Orders_pembayaranUncheckedCreateInput>
    /**
     * In case the Orders_pembayaran was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Orders_pembayaranUpdateInput, Orders_pembayaranUncheckedUpdateInput>
  }

  /**
   * Orders_pembayaran delete
   */
  export type Orders_pembayaranDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
    /**
     * Filter which Orders_pembayaran to delete.
     */
    where: Orders_pembayaranWhereUniqueInput
  }

  /**
   * Orders_pembayaran deleteMany
   */
  export type Orders_pembayaranDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders_pembayarans to delete
     */
    where?: Orders_pembayaranWhereInput
  }

  /**
   * Orders_pembayaran without action
   */
  export type Orders_pembayaranDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orders_pembayaran
     */
    select?: Orders_pembayaranSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Orders_pembayaranInclude<ExtArgs> | null
  }


  /**
   * Model Pretest
   */

  export type AggregatePretest = {
    _count: PretestCountAggregateOutputType | null
    _avg: PretestAvgAggregateOutputType | null
    _sum: PretestSumAggregateOutputType | null
    _min: PretestMinAggregateOutputType | null
    _max: PretestMaxAggregateOutputType | null
  }

  export type PretestAvgAggregateOutputType = {
    id: number | null
    list_soal: number | null
  }

  export type PretestSumAggregateOutputType = {
    id: number | null
    list_soal: number | null
  }

  export type PretestMinAggregateOutputType = {
    id: number | null
    jdudul_pertanyaan: string | null
    list_soal: number | null
    opsi_jawaban: string | null
    pertanyaan: string | null
    created_at: Date | null
  }

  export type PretestMaxAggregateOutputType = {
    id: number | null
    jdudul_pertanyaan: string | null
    list_soal: number | null
    opsi_jawaban: string | null
    pertanyaan: string | null
    created_at: Date | null
  }

  export type PretestCountAggregateOutputType = {
    id: number
    jdudul_pertanyaan: number
    list_soal: number
    opsi_jawaban: number
    pertanyaan: number
    created_at: number
    _all: number
  }


  export type PretestAvgAggregateInputType = {
    id?: true
    list_soal?: true
  }

  export type PretestSumAggregateInputType = {
    id?: true
    list_soal?: true
  }

  export type PretestMinAggregateInputType = {
    id?: true
    jdudul_pertanyaan?: true
    list_soal?: true
    opsi_jawaban?: true
    pertanyaan?: true
    created_at?: true
  }

  export type PretestMaxAggregateInputType = {
    id?: true
    jdudul_pertanyaan?: true
    list_soal?: true
    opsi_jawaban?: true
    pertanyaan?: true
    created_at?: true
  }

  export type PretestCountAggregateInputType = {
    id?: true
    jdudul_pertanyaan?: true
    list_soal?: true
    opsi_jawaban?: true
    pertanyaan?: true
    created_at?: true
    _all?: true
  }

  export type PretestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pretest to aggregate.
     */
    where?: PretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretests to fetch.
     */
    orderBy?: PretestOrderByWithRelationInput | PretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pretests
    **/
    _count?: true | PretestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PretestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PretestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PretestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PretestMaxAggregateInputType
  }

  export type GetPretestAggregateType<T extends PretestAggregateArgs> = {
        [P in keyof T & keyof AggregatePretest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePretest[P]>
      : GetScalarType<T[P], AggregatePretest[P]>
  }




  export type PretestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PretestWhereInput
    orderBy?: PretestOrderByWithAggregationInput | PretestOrderByWithAggregationInput[]
    by: PretestScalarFieldEnum[] | PretestScalarFieldEnum
    having?: PretestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PretestCountAggregateInputType | true
    _avg?: PretestAvgAggregateInputType
    _sum?: PretestSumAggregateInputType
    _min?: PretestMinAggregateInputType
    _max?: PretestMaxAggregateInputType
  }

  export type PretestGroupByOutputType = {
    id: number
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at: Date
    _count: PretestCountAggregateOutputType | null
    _avg: PretestAvgAggregateOutputType | null
    _sum: PretestSumAggregateOutputType | null
    _min: PretestMinAggregateOutputType | null
    _max: PretestMaxAggregateOutputType | null
  }

  type GetPretestGroupByPayload<T extends PretestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PretestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PretestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PretestGroupByOutputType[P]>
            : GetScalarType<T[P], PretestGroupByOutputType[P]>
        }
      >
    >


  export type PretestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jdudul_pertanyaan?: boolean
    list_soal?: boolean
    opsi_jawaban?: boolean
    pertanyaan?: boolean
    created_at?: boolean
    pretest_kelas?: boolean | Pretest$pretest_kelasArgs<ExtArgs>
    review_pretest?: boolean | Pretest$review_pretestArgs<ExtArgs>
    _count?: boolean | PretestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pretest"]>


  export type PretestSelectScalar = {
    id?: boolean
    jdudul_pertanyaan?: boolean
    list_soal?: boolean
    opsi_jawaban?: boolean
    pertanyaan?: boolean
    created_at?: boolean
  }

  export type PretestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pretest_kelas?: boolean | Pretest$pretest_kelasArgs<ExtArgs>
    review_pretest?: boolean | Pretest$review_pretestArgs<ExtArgs>
    _count?: boolean | PretestCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PretestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pretest"
    objects: {
      pretest_kelas: Prisma.$Pretest_kelasPayload<ExtArgs>[]
      review_pretest: Prisma.$Review_pretestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      jdudul_pertanyaan: string
      list_soal: number
      opsi_jawaban: string
      pertanyaan: string
      created_at: Date
    }, ExtArgs["result"]["pretest"]>
    composites: {}
  }

  type PretestGetPayload<S extends boolean | null | undefined | PretestDefaultArgs> = $Result.GetResult<Prisma.$PretestPayload, S>

  type PretestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PretestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PretestCountAggregateInputType | true
    }

  export interface PretestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pretest'], meta: { name: 'Pretest' } }
    /**
     * Find zero or one Pretest that matches the filter.
     * @param {PretestFindUniqueArgs} args - Arguments to find a Pretest
     * @example
     * // Get one Pretest
     * const pretest = await prisma.pretest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PretestFindUniqueArgs>(args: SelectSubset<T, PretestFindUniqueArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pretest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PretestFindUniqueOrThrowArgs} args - Arguments to find a Pretest
     * @example
     * // Get one Pretest
     * const pretest = await prisma.pretest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PretestFindUniqueOrThrowArgs>(args: SelectSubset<T, PretestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pretest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestFindFirstArgs} args - Arguments to find a Pretest
     * @example
     * // Get one Pretest
     * const pretest = await prisma.pretest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PretestFindFirstArgs>(args?: SelectSubset<T, PretestFindFirstArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pretest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestFindFirstOrThrowArgs} args - Arguments to find a Pretest
     * @example
     * // Get one Pretest
     * const pretest = await prisma.pretest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PretestFindFirstOrThrowArgs>(args?: SelectSubset<T, PretestFindFirstOrThrowArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pretests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pretests
     * const pretests = await prisma.pretest.findMany()
     * 
     * // Get first 10 Pretests
     * const pretests = await prisma.pretest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pretestWithIdOnly = await prisma.pretest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PretestFindManyArgs>(args?: SelectSubset<T, PretestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pretest.
     * @param {PretestCreateArgs} args - Arguments to create a Pretest.
     * @example
     * // Create one Pretest
     * const Pretest = await prisma.pretest.create({
     *   data: {
     *     // ... data to create a Pretest
     *   }
     * })
     * 
     */
    create<T extends PretestCreateArgs>(args: SelectSubset<T, PretestCreateArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pretests.
     * @param {PretestCreateManyArgs} args - Arguments to create many Pretests.
     * @example
     * // Create many Pretests
     * const pretest = await prisma.pretest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PretestCreateManyArgs>(args?: SelectSubset<T, PretestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pretest.
     * @param {PretestDeleteArgs} args - Arguments to delete one Pretest.
     * @example
     * // Delete one Pretest
     * const Pretest = await prisma.pretest.delete({
     *   where: {
     *     // ... filter to delete one Pretest
     *   }
     * })
     * 
     */
    delete<T extends PretestDeleteArgs>(args: SelectSubset<T, PretestDeleteArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pretest.
     * @param {PretestUpdateArgs} args - Arguments to update one Pretest.
     * @example
     * // Update one Pretest
     * const pretest = await prisma.pretest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PretestUpdateArgs>(args: SelectSubset<T, PretestUpdateArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pretests.
     * @param {PretestDeleteManyArgs} args - Arguments to filter Pretests to delete.
     * @example
     * // Delete a few Pretests
     * const { count } = await prisma.pretest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PretestDeleteManyArgs>(args?: SelectSubset<T, PretestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pretests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pretests
     * const pretest = await prisma.pretest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PretestUpdateManyArgs>(args: SelectSubset<T, PretestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pretest.
     * @param {PretestUpsertArgs} args - Arguments to update or create a Pretest.
     * @example
     * // Update or create a Pretest
     * const pretest = await prisma.pretest.upsert({
     *   create: {
     *     // ... data to create a Pretest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pretest we want to update
     *   }
     * })
     */
    upsert<T extends PretestUpsertArgs>(args: SelectSubset<T, PretestUpsertArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pretests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestCountArgs} args - Arguments to filter Pretests to count.
     * @example
     * // Count the number of Pretests
     * const count = await prisma.pretest.count({
     *   where: {
     *     // ... the filter for the Pretests we want to count
     *   }
     * })
    **/
    count<T extends PretestCountArgs>(
      args?: Subset<T, PretestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PretestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pretest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PretestAggregateArgs>(args: Subset<T, PretestAggregateArgs>): Prisma.PrismaPromise<GetPretestAggregateType<T>>

    /**
     * Group by Pretest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PretestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PretestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PretestGroupByArgs['orderBy'] }
        : { orderBy?: PretestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PretestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPretestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pretest model
   */
  readonly fields: PretestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pretest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PretestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pretest_kelas<T extends Pretest$pretest_kelasArgs<ExtArgs> = {}>(args?: Subset<T, Pretest$pretest_kelasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findMany"> | Null>
    review_pretest<T extends Pretest$review_pretestArgs<ExtArgs> = {}>(args?: Subset<T, Pretest$review_pretestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pretest model
   */ 
  interface PretestFieldRefs {
    readonly id: FieldRef<"Pretest", 'Int'>
    readonly jdudul_pertanyaan: FieldRef<"Pretest", 'String'>
    readonly list_soal: FieldRef<"Pretest", 'Int'>
    readonly opsi_jawaban: FieldRef<"Pretest", 'String'>
    readonly pertanyaan: FieldRef<"Pretest", 'String'>
    readonly created_at: FieldRef<"Pretest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pretest findUnique
   */
  export type PretestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter, which Pretest to fetch.
     */
    where: PretestWhereUniqueInput
  }

  /**
   * Pretest findUniqueOrThrow
   */
  export type PretestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter, which Pretest to fetch.
     */
    where: PretestWhereUniqueInput
  }

  /**
   * Pretest findFirst
   */
  export type PretestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter, which Pretest to fetch.
     */
    where?: PretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretests to fetch.
     */
    orderBy?: PretestOrderByWithRelationInput | PretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pretests.
     */
    cursor?: PretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pretests.
     */
    distinct?: PretestScalarFieldEnum | PretestScalarFieldEnum[]
  }

  /**
   * Pretest findFirstOrThrow
   */
  export type PretestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter, which Pretest to fetch.
     */
    where?: PretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretests to fetch.
     */
    orderBy?: PretestOrderByWithRelationInput | PretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pretests.
     */
    cursor?: PretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pretests.
     */
    distinct?: PretestScalarFieldEnum | PretestScalarFieldEnum[]
  }

  /**
   * Pretest findMany
   */
  export type PretestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter, which Pretests to fetch.
     */
    where?: PretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretests to fetch.
     */
    orderBy?: PretestOrderByWithRelationInput | PretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pretests.
     */
    cursor?: PretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretests.
     */
    skip?: number
    distinct?: PretestScalarFieldEnum | PretestScalarFieldEnum[]
  }

  /**
   * Pretest create
   */
  export type PretestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * The data needed to create a Pretest.
     */
    data: XOR<PretestCreateInput, PretestUncheckedCreateInput>
  }

  /**
   * Pretest createMany
   */
  export type PretestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pretests.
     */
    data: PretestCreateManyInput | PretestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pretest update
   */
  export type PretestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * The data needed to update a Pretest.
     */
    data: XOR<PretestUpdateInput, PretestUncheckedUpdateInput>
    /**
     * Choose, which Pretest to update.
     */
    where: PretestWhereUniqueInput
  }

  /**
   * Pretest updateMany
   */
  export type PretestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pretests.
     */
    data: XOR<PretestUpdateManyMutationInput, PretestUncheckedUpdateManyInput>
    /**
     * Filter which Pretests to update
     */
    where?: PretestWhereInput
  }

  /**
   * Pretest upsert
   */
  export type PretestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * The filter to search for the Pretest to update in case it exists.
     */
    where: PretestWhereUniqueInput
    /**
     * In case the Pretest found by the `where` argument doesn't exist, create a new Pretest with this data.
     */
    create: XOR<PretestCreateInput, PretestUncheckedCreateInput>
    /**
     * In case the Pretest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PretestUpdateInput, PretestUncheckedUpdateInput>
  }

  /**
   * Pretest delete
   */
  export type PretestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
    /**
     * Filter which Pretest to delete.
     */
    where: PretestWhereUniqueInput
  }

  /**
   * Pretest deleteMany
   */
  export type PretestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pretests to delete
     */
    where?: PretestWhereInput
  }

  /**
   * Pretest.pretest_kelas
   */
  export type Pretest$pretest_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    where?: Pretest_kelasWhereInput
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    cursor?: Pretest_kelasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pretest_kelasScalarFieldEnum | Pretest_kelasScalarFieldEnum[]
  }

  /**
   * Pretest.review_pretest
   */
  export type Pretest$review_pretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    where?: Review_pretestWhereInput
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    cursor?: Review_pretestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Review_pretestScalarFieldEnum | Review_pretestScalarFieldEnum[]
  }

  /**
   * Pretest without action
   */
  export type PretestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest
     */
    select?: PretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PretestInclude<ExtArgs> | null
  }


  /**
   * Model Pretest_kelas
   */

  export type AggregatePretest_kelas = {
    _count: Pretest_kelasCountAggregateOutputType | null
    _avg: Pretest_kelasAvgAggregateOutputType | null
    _sum: Pretest_kelasSumAggregateOutputType | null
    _min: Pretest_kelasMinAggregateOutputType | null
    _max: Pretest_kelasMaxAggregateOutputType | null
  }

  export type Pretest_kelasAvgAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_kelas_saya: number | null
  }

  export type Pretest_kelasSumAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_kelas_saya: number | null
  }

  export type Pretest_kelasMinAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_kelas_saya: number | null
    created_at: Date | null
  }

  export type Pretest_kelasMaxAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_kelas_saya: number | null
    created_at: Date | null
  }

  export type Pretest_kelasCountAggregateOutputType = {
    id: number
    id_pretest: number
    id_kelas_saya: number
    created_at: number
    _all: number
  }


  export type Pretest_kelasAvgAggregateInputType = {
    id?: true
    id_pretest?: true
    id_kelas_saya?: true
  }

  export type Pretest_kelasSumAggregateInputType = {
    id?: true
    id_pretest?: true
    id_kelas_saya?: true
  }

  export type Pretest_kelasMinAggregateInputType = {
    id?: true
    id_pretest?: true
    id_kelas_saya?: true
    created_at?: true
  }

  export type Pretest_kelasMaxAggregateInputType = {
    id?: true
    id_pretest?: true
    id_kelas_saya?: true
    created_at?: true
  }

  export type Pretest_kelasCountAggregateInputType = {
    id?: true
    id_pretest?: true
    id_kelas_saya?: true
    created_at?: true
    _all?: true
  }

  export type Pretest_kelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pretest_kelas to aggregate.
     */
    where?: Pretest_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretest_kelas to fetch.
     */
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Pretest_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretest_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretest_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pretest_kelas
    **/
    _count?: true | Pretest_kelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pretest_kelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pretest_kelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pretest_kelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pretest_kelasMaxAggregateInputType
  }

  export type GetPretest_kelasAggregateType<T extends Pretest_kelasAggregateArgs> = {
        [P in keyof T & keyof AggregatePretest_kelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePretest_kelas[P]>
      : GetScalarType<T[P], AggregatePretest_kelas[P]>
  }




  export type Pretest_kelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pretest_kelasWhereInput
    orderBy?: Pretest_kelasOrderByWithAggregationInput | Pretest_kelasOrderByWithAggregationInput[]
    by: Pretest_kelasScalarFieldEnum[] | Pretest_kelasScalarFieldEnum
    having?: Pretest_kelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pretest_kelasCountAggregateInputType | true
    _avg?: Pretest_kelasAvgAggregateInputType
    _sum?: Pretest_kelasSumAggregateInputType
    _min?: Pretest_kelasMinAggregateInputType
    _max?: Pretest_kelasMaxAggregateInputType
  }

  export type Pretest_kelasGroupByOutputType = {
    id: number
    id_pretest: number
    id_kelas_saya: number
    created_at: Date
    _count: Pretest_kelasCountAggregateOutputType | null
    _avg: Pretest_kelasAvgAggregateOutputType | null
    _sum: Pretest_kelasSumAggregateOutputType | null
    _min: Pretest_kelasMinAggregateOutputType | null
    _max: Pretest_kelasMaxAggregateOutputType | null
  }

  type GetPretest_kelasGroupByPayload<T extends Pretest_kelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pretest_kelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pretest_kelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pretest_kelasGroupByOutputType[P]>
            : GetScalarType<T[P], Pretest_kelasGroupByOutputType[P]>
        }
      >
    >


  export type Pretest_kelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_pretest?: boolean
    id_kelas_saya?: boolean
    created_at?: boolean
    pretest?: boolean | PretestDefaultArgs<ExtArgs>
    kelas_saya?: boolean | Kelas_sayaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pretest_kelas"]>


  export type Pretest_kelasSelectScalar = {
    id?: boolean
    id_pretest?: boolean
    id_kelas_saya?: boolean
    created_at?: boolean
  }

  export type Pretest_kelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pretest?: boolean | PretestDefaultArgs<ExtArgs>
    kelas_saya?: boolean | Kelas_sayaDefaultArgs<ExtArgs>
  }

  export type $Pretest_kelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pretest_kelas"
    objects: {
      pretest: Prisma.$PretestPayload<ExtArgs>
      kelas_saya: Prisma.$Kelas_sayaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_pretest: number
      id_kelas_saya: number
      created_at: Date
    }, ExtArgs["result"]["pretest_kelas"]>
    composites: {}
  }

  type Pretest_kelasGetPayload<S extends boolean | null | undefined | Pretest_kelasDefaultArgs> = $Result.GetResult<Prisma.$Pretest_kelasPayload, S>

  type Pretest_kelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Pretest_kelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Pretest_kelasCountAggregateInputType | true
    }

  export interface Pretest_kelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pretest_kelas'], meta: { name: 'Pretest_kelas' } }
    /**
     * Find zero or one Pretest_kelas that matches the filter.
     * @param {Pretest_kelasFindUniqueArgs} args - Arguments to find a Pretest_kelas
     * @example
     * // Get one Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Pretest_kelasFindUniqueArgs>(args: SelectSubset<T, Pretest_kelasFindUniqueArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pretest_kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Pretest_kelasFindUniqueOrThrowArgs} args - Arguments to find a Pretest_kelas
     * @example
     * // Get one Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Pretest_kelasFindUniqueOrThrowArgs>(args: SelectSubset<T, Pretest_kelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pretest_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasFindFirstArgs} args - Arguments to find a Pretest_kelas
     * @example
     * // Get one Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Pretest_kelasFindFirstArgs>(args?: SelectSubset<T, Pretest_kelasFindFirstArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pretest_kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasFindFirstOrThrowArgs} args - Arguments to find a Pretest_kelas
     * @example
     * // Get one Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Pretest_kelasFindFirstOrThrowArgs>(args?: SelectSubset<T, Pretest_kelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pretest_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findMany()
     * 
     * // Get first 10 Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pretest_kelasWithIdOnly = await prisma.pretest_kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Pretest_kelasFindManyArgs>(args?: SelectSubset<T, Pretest_kelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pretest_kelas.
     * @param {Pretest_kelasCreateArgs} args - Arguments to create a Pretest_kelas.
     * @example
     * // Create one Pretest_kelas
     * const Pretest_kelas = await prisma.pretest_kelas.create({
     *   data: {
     *     // ... data to create a Pretest_kelas
     *   }
     * })
     * 
     */
    create<T extends Pretest_kelasCreateArgs>(args: SelectSubset<T, Pretest_kelasCreateArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pretest_kelas.
     * @param {Pretest_kelasCreateManyArgs} args - Arguments to create many Pretest_kelas.
     * @example
     * // Create many Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Pretest_kelasCreateManyArgs>(args?: SelectSubset<T, Pretest_kelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pretest_kelas.
     * @param {Pretest_kelasDeleteArgs} args - Arguments to delete one Pretest_kelas.
     * @example
     * // Delete one Pretest_kelas
     * const Pretest_kelas = await prisma.pretest_kelas.delete({
     *   where: {
     *     // ... filter to delete one Pretest_kelas
     *   }
     * })
     * 
     */
    delete<T extends Pretest_kelasDeleteArgs>(args: SelectSubset<T, Pretest_kelasDeleteArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pretest_kelas.
     * @param {Pretest_kelasUpdateArgs} args - Arguments to update one Pretest_kelas.
     * @example
     * // Update one Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Pretest_kelasUpdateArgs>(args: SelectSubset<T, Pretest_kelasUpdateArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pretest_kelas.
     * @param {Pretest_kelasDeleteManyArgs} args - Arguments to filter Pretest_kelas to delete.
     * @example
     * // Delete a few Pretest_kelas
     * const { count } = await prisma.pretest_kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Pretest_kelasDeleteManyArgs>(args?: SelectSubset<T, Pretest_kelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pretest_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Pretest_kelasUpdateManyArgs>(args: SelectSubset<T, Pretest_kelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pretest_kelas.
     * @param {Pretest_kelasUpsertArgs} args - Arguments to update or create a Pretest_kelas.
     * @example
     * // Update or create a Pretest_kelas
     * const pretest_kelas = await prisma.pretest_kelas.upsert({
     *   create: {
     *     // ... data to create a Pretest_kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pretest_kelas we want to update
     *   }
     * })
     */
    upsert<T extends Pretest_kelasUpsertArgs>(args: SelectSubset<T, Pretest_kelasUpsertArgs<ExtArgs>>): Prisma__Pretest_kelasClient<$Result.GetResult<Prisma.$Pretest_kelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pretest_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasCountArgs} args - Arguments to filter Pretest_kelas to count.
     * @example
     * // Count the number of Pretest_kelas
     * const count = await prisma.pretest_kelas.count({
     *   where: {
     *     // ... the filter for the Pretest_kelas we want to count
     *   }
     * })
    **/
    count<T extends Pretest_kelasCountArgs>(
      args?: Subset<T, Pretest_kelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pretest_kelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pretest_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pretest_kelasAggregateArgs>(args: Subset<T, Pretest_kelasAggregateArgs>): Prisma.PrismaPromise<GetPretest_kelasAggregateType<T>>

    /**
     * Group by Pretest_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pretest_kelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Pretest_kelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Pretest_kelasGroupByArgs['orderBy'] }
        : { orderBy?: Pretest_kelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Pretest_kelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPretest_kelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pretest_kelas model
   */
  readonly fields: Pretest_kelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pretest_kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Pretest_kelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pretest<T extends PretestDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PretestDefaultArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    kelas_saya<T extends Kelas_sayaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Kelas_sayaDefaultArgs<ExtArgs>>): Prisma__Kelas_sayaClient<$Result.GetResult<Prisma.$Kelas_sayaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pretest_kelas model
   */ 
  interface Pretest_kelasFieldRefs {
    readonly id: FieldRef<"Pretest_kelas", 'Int'>
    readonly id_pretest: FieldRef<"Pretest_kelas", 'Int'>
    readonly id_kelas_saya: FieldRef<"Pretest_kelas", 'Int'>
    readonly created_at: FieldRef<"Pretest_kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pretest_kelas findUnique
   */
  export type Pretest_kelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Pretest_kelas to fetch.
     */
    where: Pretest_kelasWhereUniqueInput
  }

  /**
   * Pretest_kelas findUniqueOrThrow
   */
  export type Pretest_kelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Pretest_kelas to fetch.
     */
    where: Pretest_kelasWhereUniqueInput
  }

  /**
   * Pretest_kelas findFirst
   */
  export type Pretest_kelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Pretest_kelas to fetch.
     */
    where?: Pretest_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretest_kelas to fetch.
     */
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pretest_kelas.
     */
    cursor?: Pretest_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretest_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretest_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pretest_kelas.
     */
    distinct?: Pretest_kelasScalarFieldEnum | Pretest_kelasScalarFieldEnum[]
  }

  /**
   * Pretest_kelas findFirstOrThrow
   */
  export type Pretest_kelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Pretest_kelas to fetch.
     */
    where?: Pretest_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretest_kelas to fetch.
     */
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pretest_kelas.
     */
    cursor?: Pretest_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretest_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretest_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pretest_kelas.
     */
    distinct?: Pretest_kelasScalarFieldEnum | Pretest_kelasScalarFieldEnum[]
  }

  /**
   * Pretest_kelas findMany
   */
  export type Pretest_kelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Pretest_kelas to fetch.
     */
    where?: Pretest_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pretest_kelas to fetch.
     */
    orderBy?: Pretest_kelasOrderByWithRelationInput | Pretest_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pretest_kelas.
     */
    cursor?: Pretest_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pretest_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pretest_kelas.
     */
    skip?: number
    distinct?: Pretest_kelasScalarFieldEnum | Pretest_kelasScalarFieldEnum[]
  }

  /**
   * Pretest_kelas create
   */
  export type Pretest_kelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Pretest_kelas.
     */
    data: XOR<Pretest_kelasCreateInput, Pretest_kelasUncheckedCreateInput>
  }

  /**
   * Pretest_kelas createMany
   */
  export type Pretest_kelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pretest_kelas.
     */
    data: Pretest_kelasCreateManyInput | Pretest_kelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pretest_kelas update
   */
  export type Pretest_kelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Pretest_kelas.
     */
    data: XOR<Pretest_kelasUpdateInput, Pretest_kelasUncheckedUpdateInput>
    /**
     * Choose, which Pretest_kelas to update.
     */
    where: Pretest_kelasWhereUniqueInput
  }

  /**
   * Pretest_kelas updateMany
   */
  export type Pretest_kelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pretest_kelas.
     */
    data: XOR<Pretest_kelasUpdateManyMutationInput, Pretest_kelasUncheckedUpdateManyInput>
    /**
     * Filter which Pretest_kelas to update
     */
    where?: Pretest_kelasWhereInput
  }

  /**
   * Pretest_kelas upsert
   */
  export type Pretest_kelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Pretest_kelas to update in case it exists.
     */
    where: Pretest_kelasWhereUniqueInput
    /**
     * In case the Pretest_kelas found by the `where` argument doesn't exist, create a new Pretest_kelas with this data.
     */
    create: XOR<Pretest_kelasCreateInput, Pretest_kelasUncheckedCreateInput>
    /**
     * In case the Pretest_kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Pretest_kelasUpdateInput, Pretest_kelasUncheckedUpdateInput>
  }

  /**
   * Pretest_kelas delete
   */
  export type Pretest_kelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
    /**
     * Filter which Pretest_kelas to delete.
     */
    where: Pretest_kelasWhereUniqueInput
  }

  /**
   * Pretest_kelas deleteMany
   */
  export type Pretest_kelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pretest_kelas to delete
     */
    where?: Pretest_kelasWhereInput
  }

  /**
   * Pretest_kelas without action
   */
  export type Pretest_kelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pretest_kelas
     */
    select?: Pretest_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pretest_kelasInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    rating: Decimal | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    rating: Decimal | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    rating: Decimal | null
    deskripsi: string | null
    created_at: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    rating: Decimal | null
    deskripsi: string | null
    created_at: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    rating: number
    deskripsi: number
    created_at: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    rating?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    rating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    rating?: true
    deskripsi?: true
    created_at?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    rating?: true
    deskripsi?: true
    created_at?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    rating?: true
    deskripsi?: true
    created_at?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    rating: Decimal
    deskripsi: string
    created_at: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    deskripsi?: boolean
    created_at?: boolean
    review_pretest?: boolean | Review$review_pretestArgs<ExtArgs>
    _count?: boolean | ReviewCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>


  export type ReviewSelectScalar = {
    id?: boolean
    rating?: boolean
    deskripsi?: boolean
    created_at?: boolean
  }

  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    review_pretest?: boolean | Review$review_pretestArgs<ExtArgs>
    _count?: boolean | ReviewCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      review_pretest: Prisma.$Review_pretestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      rating: Prisma.Decimal
      deskripsi: string
      created_at: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    review_pretest<T extends Review$review_pretestArgs<ExtArgs> = {}>(args?: Subset<T, Review$review_pretestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'Int'>
    readonly rating: FieldRef<"Review", 'Decimal'>
    readonly deskripsi: FieldRef<"Review", 'String'>
    readonly created_at: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }

  /**
   * Review.review_pretest
   */
  export type Review$review_pretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    where?: Review_pretestWhereInput
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    cursor?: Review_pretestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Review_pretestScalarFieldEnum | Review_pretestScalarFieldEnum[]
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Review_pretest
   */

  export type AggregateReview_pretest = {
    _count: Review_pretestCountAggregateOutputType | null
    _avg: Review_pretestAvgAggregateOutputType | null
    _sum: Review_pretestSumAggregateOutputType | null
    _min: Review_pretestMinAggregateOutputType | null
    _max: Review_pretestMaxAggregateOutputType | null
  }

  export type Review_pretestAvgAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_review: number | null
  }

  export type Review_pretestSumAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_review: number | null
  }

  export type Review_pretestMinAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_review: number | null
    created_at: Date | null
  }

  export type Review_pretestMaxAggregateOutputType = {
    id: number | null
    id_pretest: number | null
    id_review: number | null
    created_at: Date | null
  }

  export type Review_pretestCountAggregateOutputType = {
    id: number
    id_pretest: number
    id_review: number
    created_at: number
    _all: number
  }


  export type Review_pretestAvgAggregateInputType = {
    id?: true
    id_pretest?: true
    id_review?: true
  }

  export type Review_pretestSumAggregateInputType = {
    id?: true
    id_pretest?: true
    id_review?: true
  }

  export type Review_pretestMinAggregateInputType = {
    id?: true
    id_pretest?: true
    id_review?: true
    created_at?: true
  }

  export type Review_pretestMaxAggregateInputType = {
    id?: true
    id_pretest?: true
    id_review?: true
    created_at?: true
  }

  export type Review_pretestCountAggregateInputType = {
    id?: true
    id_pretest?: true
    id_review?: true
    created_at?: true
    _all?: true
  }

  export type Review_pretestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review_pretest to aggregate.
     */
    where?: Review_pretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Review_pretests to fetch.
     */
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Review_pretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Review_pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Review_pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Review_pretests
    **/
    _count?: true | Review_pretestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Review_pretestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Review_pretestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Review_pretestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Review_pretestMaxAggregateInputType
  }

  export type GetReview_pretestAggregateType<T extends Review_pretestAggregateArgs> = {
        [P in keyof T & keyof AggregateReview_pretest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview_pretest[P]>
      : GetScalarType<T[P], AggregateReview_pretest[P]>
  }




  export type Review_pretestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Review_pretestWhereInput
    orderBy?: Review_pretestOrderByWithAggregationInput | Review_pretestOrderByWithAggregationInput[]
    by: Review_pretestScalarFieldEnum[] | Review_pretestScalarFieldEnum
    having?: Review_pretestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Review_pretestCountAggregateInputType | true
    _avg?: Review_pretestAvgAggregateInputType
    _sum?: Review_pretestSumAggregateInputType
    _min?: Review_pretestMinAggregateInputType
    _max?: Review_pretestMaxAggregateInputType
  }

  export type Review_pretestGroupByOutputType = {
    id: number
    id_pretest: number
    id_review: number
    created_at: Date
    _count: Review_pretestCountAggregateOutputType | null
    _avg: Review_pretestAvgAggregateOutputType | null
    _sum: Review_pretestSumAggregateOutputType | null
    _min: Review_pretestMinAggregateOutputType | null
    _max: Review_pretestMaxAggregateOutputType | null
  }

  type GetReview_pretestGroupByPayload<T extends Review_pretestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Review_pretestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Review_pretestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Review_pretestGroupByOutputType[P]>
            : GetScalarType<T[P], Review_pretestGroupByOutputType[P]>
        }
      >
    >


  export type Review_pretestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_pretest?: boolean
    id_review?: boolean
    created_at?: boolean
    pretest?: boolean | PretestDefaultArgs<ExtArgs>
    review?: boolean | ReviewDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review_pretest"]>


  export type Review_pretestSelectScalar = {
    id?: boolean
    id_pretest?: boolean
    id_review?: boolean
    created_at?: boolean
  }

  export type Review_pretestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pretest?: boolean | PretestDefaultArgs<ExtArgs>
    review?: boolean | ReviewDefaultArgs<ExtArgs>
  }

  export type $Review_pretestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review_pretest"
    objects: {
      pretest: Prisma.$PretestPayload<ExtArgs>
      review: Prisma.$ReviewPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_pretest: number
      id_review: number
      created_at: Date
    }, ExtArgs["result"]["review_pretest"]>
    composites: {}
  }

  type Review_pretestGetPayload<S extends boolean | null | undefined | Review_pretestDefaultArgs> = $Result.GetResult<Prisma.$Review_pretestPayload, S>

  type Review_pretestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Review_pretestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Review_pretestCountAggregateInputType | true
    }

  export interface Review_pretestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review_pretest'], meta: { name: 'Review_pretest' } }
    /**
     * Find zero or one Review_pretest that matches the filter.
     * @param {Review_pretestFindUniqueArgs} args - Arguments to find a Review_pretest
     * @example
     * // Get one Review_pretest
     * const review_pretest = await prisma.review_pretest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Review_pretestFindUniqueArgs>(args: SelectSubset<T, Review_pretestFindUniqueArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review_pretest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Review_pretestFindUniqueOrThrowArgs} args - Arguments to find a Review_pretest
     * @example
     * // Get one Review_pretest
     * const review_pretest = await prisma.review_pretest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Review_pretestFindUniqueOrThrowArgs>(args: SelectSubset<T, Review_pretestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review_pretest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestFindFirstArgs} args - Arguments to find a Review_pretest
     * @example
     * // Get one Review_pretest
     * const review_pretest = await prisma.review_pretest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Review_pretestFindFirstArgs>(args?: SelectSubset<T, Review_pretestFindFirstArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review_pretest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestFindFirstOrThrowArgs} args - Arguments to find a Review_pretest
     * @example
     * // Get one Review_pretest
     * const review_pretest = await prisma.review_pretest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Review_pretestFindFirstOrThrowArgs>(args?: SelectSubset<T, Review_pretestFindFirstOrThrowArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Review_pretests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Review_pretests
     * const review_pretests = await prisma.review_pretest.findMany()
     * 
     * // Get first 10 Review_pretests
     * const review_pretests = await prisma.review_pretest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const review_pretestWithIdOnly = await prisma.review_pretest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Review_pretestFindManyArgs>(args?: SelectSubset<T, Review_pretestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review_pretest.
     * @param {Review_pretestCreateArgs} args - Arguments to create a Review_pretest.
     * @example
     * // Create one Review_pretest
     * const Review_pretest = await prisma.review_pretest.create({
     *   data: {
     *     // ... data to create a Review_pretest
     *   }
     * })
     * 
     */
    create<T extends Review_pretestCreateArgs>(args: SelectSubset<T, Review_pretestCreateArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Review_pretests.
     * @param {Review_pretestCreateManyArgs} args - Arguments to create many Review_pretests.
     * @example
     * // Create many Review_pretests
     * const review_pretest = await prisma.review_pretest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Review_pretestCreateManyArgs>(args?: SelectSubset<T, Review_pretestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review_pretest.
     * @param {Review_pretestDeleteArgs} args - Arguments to delete one Review_pretest.
     * @example
     * // Delete one Review_pretest
     * const Review_pretest = await prisma.review_pretest.delete({
     *   where: {
     *     // ... filter to delete one Review_pretest
     *   }
     * })
     * 
     */
    delete<T extends Review_pretestDeleteArgs>(args: SelectSubset<T, Review_pretestDeleteArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review_pretest.
     * @param {Review_pretestUpdateArgs} args - Arguments to update one Review_pretest.
     * @example
     * // Update one Review_pretest
     * const review_pretest = await prisma.review_pretest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Review_pretestUpdateArgs>(args: SelectSubset<T, Review_pretestUpdateArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Review_pretests.
     * @param {Review_pretestDeleteManyArgs} args - Arguments to filter Review_pretests to delete.
     * @example
     * // Delete a few Review_pretests
     * const { count } = await prisma.review_pretest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Review_pretestDeleteManyArgs>(args?: SelectSubset<T, Review_pretestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Review_pretests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Review_pretests
     * const review_pretest = await prisma.review_pretest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Review_pretestUpdateManyArgs>(args: SelectSubset<T, Review_pretestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review_pretest.
     * @param {Review_pretestUpsertArgs} args - Arguments to update or create a Review_pretest.
     * @example
     * // Update or create a Review_pretest
     * const review_pretest = await prisma.review_pretest.upsert({
     *   create: {
     *     // ... data to create a Review_pretest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review_pretest we want to update
     *   }
     * })
     */
    upsert<T extends Review_pretestUpsertArgs>(args: SelectSubset<T, Review_pretestUpsertArgs<ExtArgs>>): Prisma__Review_pretestClient<$Result.GetResult<Prisma.$Review_pretestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Review_pretests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestCountArgs} args - Arguments to filter Review_pretests to count.
     * @example
     * // Count the number of Review_pretests
     * const count = await prisma.review_pretest.count({
     *   where: {
     *     // ... the filter for the Review_pretests we want to count
     *   }
     * })
    **/
    count<T extends Review_pretestCountArgs>(
      args?: Subset<T, Review_pretestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Review_pretestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review_pretest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Review_pretestAggregateArgs>(args: Subset<T, Review_pretestAggregateArgs>): Prisma.PrismaPromise<GetReview_pretestAggregateType<T>>

    /**
     * Group by Review_pretest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Review_pretestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Review_pretestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Review_pretestGroupByArgs['orderBy'] }
        : { orderBy?: Review_pretestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Review_pretestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReview_pretestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review_pretest model
   */
  readonly fields: Review_pretestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review_pretest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Review_pretestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pretest<T extends PretestDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PretestDefaultArgs<ExtArgs>>): Prisma__PretestClient<$Result.GetResult<Prisma.$PretestPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    review<T extends ReviewDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReviewDefaultArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review_pretest model
   */ 
  interface Review_pretestFieldRefs {
    readonly id: FieldRef<"Review_pretest", 'Int'>
    readonly id_pretest: FieldRef<"Review_pretest", 'Int'>
    readonly id_review: FieldRef<"Review_pretest", 'Int'>
    readonly created_at: FieldRef<"Review_pretest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review_pretest findUnique
   */
  export type Review_pretestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter, which Review_pretest to fetch.
     */
    where: Review_pretestWhereUniqueInput
  }

  /**
   * Review_pretest findUniqueOrThrow
   */
  export type Review_pretestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter, which Review_pretest to fetch.
     */
    where: Review_pretestWhereUniqueInput
  }

  /**
   * Review_pretest findFirst
   */
  export type Review_pretestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter, which Review_pretest to fetch.
     */
    where?: Review_pretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Review_pretests to fetch.
     */
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Review_pretests.
     */
    cursor?: Review_pretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Review_pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Review_pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Review_pretests.
     */
    distinct?: Review_pretestScalarFieldEnum | Review_pretestScalarFieldEnum[]
  }

  /**
   * Review_pretest findFirstOrThrow
   */
  export type Review_pretestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter, which Review_pretest to fetch.
     */
    where?: Review_pretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Review_pretests to fetch.
     */
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Review_pretests.
     */
    cursor?: Review_pretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Review_pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Review_pretests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Review_pretests.
     */
    distinct?: Review_pretestScalarFieldEnum | Review_pretestScalarFieldEnum[]
  }

  /**
   * Review_pretest findMany
   */
  export type Review_pretestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter, which Review_pretests to fetch.
     */
    where?: Review_pretestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Review_pretests to fetch.
     */
    orderBy?: Review_pretestOrderByWithRelationInput | Review_pretestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Review_pretests.
     */
    cursor?: Review_pretestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Review_pretests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Review_pretests.
     */
    skip?: number
    distinct?: Review_pretestScalarFieldEnum | Review_pretestScalarFieldEnum[]
  }

  /**
   * Review_pretest create
   */
  export type Review_pretestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * The data needed to create a Review_pretest.
     */
    data: XOR<Review_pretestCreateInput, Review_pretestUncheckedCreateInput>
  }

  /**
   * Review_pretest createMany
   */
  export type Review_pretestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Review_pretests.
     */
    data: Review_pretestCreateManyInput | Review_pretestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review_pretest update
   */
  export type Review_pretestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * The data needed to update a Review_pretest.
     */
    data: XOR<Review_pretestUpdateInput, Review_pretestUncheckedUpdateInput>
    /**
     * Choose, which Review_pretest to update.
     */
    where: Review_pretestWhereUniqueInput
  }

  /**
   * Review_pretest updateMany
   */
  export type Review_pretestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Review_pretests.
     */
    data: XOR<Review_pretestUpdateManyMutationInput, Review_pretestUncheckedUpdateManyInput>
    /**
     * Filter which Review_pretests to update
     */
    where?: Review_pretestWhereInput
  }

  /**
   * Review_pretest upsert
   */
  export type Review_pretestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * The filter to search for the Review_pretest to update in case it exists.
     */
    where: Review_pretestWhereUniqueInput
    /**
     * In case the Review_pretest found by the `where` argument doesn't exist, create a new Review_pretest with this data.
     */
    create: XOR<Review_pretestCreateInput, Review_pretestUncheckedCreateInput>
    /**
     * In case the Review_pretest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Review_pretestUpdateInput, Review_pretestUncheckedUpdateInput>
  }

  /**
   * Review_pretest delete
   */
  export type Review_pretestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
    /**
     * Filter which Review_pretest to delete.
     */
    where: Review_pretestWhereUniqueInput
  }

  /**
   * Review_pretest deleteMany
   */
  export type Review_pretestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review_pretests to delete
     */
    where?: Review_pretestWhereInput
  }

  /**
   * Review_pretest without action
   */
  export type Review_pretestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review_pretest
     */
    select?: Review_pretestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Review_pretestInclude<ExtArgs> | null
  }


  /**
   * Model Silabus
   */

  export type AggregateSilabus = {
    _count: SilabusCountAggregateOutputType | null
    _avg: SilabusAvgAggregateOutputType | null
    _sum: SilabusSumAggregateOutputType | null
    _min: SilabusMinAggregateOutputType | null
    _max: SilabusMaxAggregateOutputType | null
  }

  export type SilabusAvgAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_modul: number | null
  }

  export type SilabusSumAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_modul: number | null
  }

  export type SilabusMinAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_modul: number | null
    created_at: Date | null
  }

  export type SilabusMaxAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_modul: number | null
    created_at: Date | null
  }

  export type SilabusCountAggregateOutputType = {
    id: number
    id_kelas: number
    id_modul: number
    created_at: number
    _all: number
  }


  export type SilabusAvgAggregateInputType = {
    id?: true
    id_kelas?: true
    id_modul?: true
  }

  export type SilabusSumAggregateInputType = {
    id?: true
    id_kelas?: true
    id_modul?: true
  }

  export type SilabusMinAggregateInputType = {
    id?: true
    id_kelas?: true
    id_modul?: true
    created_at?: true
  }

  export type SilabusMaxAggregateInputType = {
    id?: true
    id_kelas?: true
    id_modul?: true
    created_at?: true
  }

  export type SilabusCountAggregateInputType = {
    id?: true
    id_kelas?: true
    id_modul?: true
    created_at?: true
    _all?: true
  }

  export type SilabusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Silabus to aggregate.
     */
    where?: SilabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Silabuses to fetch.
     */
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SilabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Silabuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Silabuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Silabuses
    **/
    _count?: true | SilabusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SilabusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SilabusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SilabusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SilabusMaxAggregateInputType
  }

  export type GetSilabusAggregateType<T extends SilabusAggregateArgs> = {
        [P in keyof T & keyof AggregateSilabus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSilabus[P]>
      : GetScalarType<T[P], AggregateSilabus[P]>
  }




  export type SilabusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SilabusWhereInput
    orderBy?: SilabusOrderByWithAggregationInput | SilabusOrderByWithAggregationInput[]
    by: SilabusScalarFieldEnum[] | SilabusScalarFieldEnum
    having?: SilabusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SilabusCountAggregateInputType | true
    _avg?: SilabusAvgAggregateInputType
    _sum?: SilabusSumAggregateInputType
    _min?: SilabusMinAggregateInputType
    _max?: SilabusMaxAggregateInputType
  }

  export type SilabusGroupByOutputType = {
    id: number
    id_kelas: number
    id_modul: number
    created_at: Date
    _count: SilabusCountAggregateOutputType | null
    _avg: SilabusAvgAggregateOutputType | null
    _sum: SilabusSumAggregateOutputType | null
    _min: SilabusMinAggregateOutputType | null
    _max: SilabusMaxAggregateOutputType | null
  }

  type GetSilabusGroupByPayload<T extends SilabusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SilabusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SilabusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SilabusGroupByOutputType[P]>
            : GetScalarType<T[P], SilabusGroupByOutputType[P]>
        }
      >
    >


  export type SilabusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_kelas?: boolean
    id_modul?: boolean
    created_at?: boolean
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    modul?: boolean | Modul_kelasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["silabus"]>


  export type SilabusSelectScalar = {
    id?: boolean
    id_kelas?: boolean
    id_modul?: boolean
    created_at?: boolean
  }

  export type SilabusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    modul?: boolean | Modul_kelasDefaultArgs<ExtArgs>
  }

  export type $SilabusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Silabus"
    objects: {
      kelas: Prisma.$KelasPayload<ExtArgs>
      modul: Prisma.$Modul_kelasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_kelas: number
      id_modul: number
      created_at: Date
    }, ExtArgs["result"]["silabus"]>
    composites: {}
  }

  type SilabusGetPayload<S extends boolean | null | undefined | SilabusDefaultArgs> = $Result.GetResult<Prisma.$SilabusPayload, S>

  type SilabusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SilabusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SilabusCountAggregateInputType | true
    }

  export interface SilabusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Silabus'], meta: { name: 'Silabus' } }
    /**
     * Find zero or one Silabus that matches the filter.
     * @param {SilabusFindUniqueArgs} args - Arguments to find a Silabus
     * @example
     * // Get one Silabus
     * const silabus = await prisma.silabus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SilabusFindUniqueArgs>(args: SelectSubset<T, SilabusFindUniqueArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Silabus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SilabusFindUniqueOrThrowArgs} args - Arguments to find a Silabus
     * @example
     * // Get one Silabus
     * const silabus = await prisma.silabus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SilabusFindUniqueOrThrowArgs>(args: SelectSubset<T, SilabusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Silabus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusFindFirstArgs} args - Arguments to find a Silabus
     * @example
     * // Get one Silabus
     * const silabus = await prisma.silabus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SilabusFindFirstArgs>(args?: SelectSubset<T, SilabusFindFirstArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Silabus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusFindFirstOrThrowArgs} args - Arguments to find a Silabus
     * @example
     * // Get one Silabus
     * const silabus = await prisma.silabus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SilabusFindFirstOrThrowArgs>(args?: SelectSubset<T, SilabusFindFirstOrThrowArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Silabuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Silabuses
     * const silabuses = await prisma.silabus.findMany()
     * 
     * // Get first 10 Silabuses
     * const silabuses = await prisma.silabus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const silabusWithIdOnly = await prisma.silabus.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SilabusFindManyArgs>(args?: SelectSubset<T, SilabusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Silabus.
     * @param {SilabusCreateArgs} args - Arguments to create a Silabus.
     * @example
     * // Create one Silabus
     * const Silabus = await prisma.silabus.create({
     *   data: {
     *     // ... data to create a Silabus
     *   }
     * })
     * 
     */
    create<T extends SilabusCreateArgs>(args: SelectSubset<T, SilabusCreateArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Silabuses.
     * @param {SilabusCreateManyArgs} args - Arguments to create many Silabuses.
     * @example
     * // Create many Silabuses
     * const silabus = await prisma.silabus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SilabusCreateManyArgs>(args?: SelectSubset<T, SilabusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Silabus.
     * @param {SilabusDeleteArgs} args - Arguments to delete one Silabus.
     * @example
     * // Delete one Silabus
     * const Silabus = await prisma.silabus.delete({
     *   where: {
     *     // ... filter to delete one Silabus
     *   }
     * })
     * 
     */
    delete<T extends SilabusDeleteArgs>(args: SelectSubset<T, SilabusDeleteArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Silabus.
     * @param {SilabusUpdateArgs} args - Arguments to update one Silabus.
     * @example
     * // Update one Silabus
     * const silabus = await prisma.silabus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SilabusUpdateArgs>(args: SelectSubset<T, SilabusUpdateArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Silabuses.
     * @param {SilabusDeleteManyArgs} args - Arguments to filter Silabuses to delete.
     * @example
     * // Delete a few Silabuses
     * const { count } = await prisma.silabus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SilabusDeleteManyArgs>(args?: SelectSubset<T, SilabusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Silabuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Silabuses
     * const silabus = await prisma.silabus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SilabusUpdateManyArgs>(args: SelectSubset<T, SilabusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Silabus.
     * @param {SilabusUpsertArgs} args - Arguments to update or create a Silabus.
     * @example
     * // Update or create a Silabus
     * const silabus = await prisma.silabus.upsert({
     *   create: {
     *     // ... data to create a Silabus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Silabus we want to update
     *   }
     * })
     */
    upsert<T extends SilabusUpsertArgs>(args: SelectSubset<T, SilabusUpsertArgs<ExtArgs>>): Prisma__SilabusClient<$Result.GetResult<Prisma.$SilabusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Silabuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusCountArgs} args - Arguments to filter Silabuses to count.
     * @example
     * // Count the number of Silabuses
     * const count = await prisma.silabus.count({
     *   where: {
     *     // ... the filter for the Silabuses we want to count
     *   }
     * })
    **/
    count<T extends SilabusCountArgs>(
      args?: Subset<T, SilabusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SilabusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Silabus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SilabusAggregateArgs>(args: Subset<T, SilabusAggregateArgs>): Prisma.PrismaPromise<GetSilabusAggregateType<T>>

    /**
     * Group by Silabus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SilabusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SilabusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SilabusGroupByArgs['orderBy'] }
        : { orderBy?: SilabusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SilabusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSilabusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Silabus model
   */
  readonly fields: SilabusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Silabus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SilabusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kelas<T extends KelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KelasDefaultArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modul<T extends Modul_kelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Modul_kelasDefaultArgs<ExtArgs>>): Prisma__Modul_kelasClient<$Result.GetResult<Prisma.$Modul_kelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Silabus model
   */ 
  interface SilabusFieldRefs {
    readonly id: FieldRef<"Silabus", 'Int'>
    readonly id_kelas: FieldRef<"Silabus", 'Int'>
    readonly id_modul: FieldRef<"Silabus", 'Int'>
    readonly created_at: FieldRef<"Silabus", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Silabus findUnique
   */
  export type SilabusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter, which Silabus to fetch.
     */
    where: SilabusWhereUniqueInput
  }

  /**
   * Silabus findUniqueOrThrow
   */
  export type SilabusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter, which Silabus to fetch.
     */
    where: SilabusWhereUniqueInput
  }

  /**
   * Silabus findFirst
   */
  export type SilabusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter, which Silabus to fetch.
     */
    where?: SilabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Silabuses to fetch.
     */
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Silabuses.
     */
    cursor?: SilabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Silabuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Silabuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Silabuses.
     */
    distinct?: SilabusScalarFieldEnum | SilabusScalarFieldEnum[]
  }

  /**
   * Silabus findFirstOrThrow
   */
  export type SilabusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter, which Silabus to fetch.
     */
    where?: SilabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Silabuses to fetch.
     */
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Silabuses.
     */
    cursor?: SilabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Silabuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Silabuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Silabuses.
     */
    distinct?: SilabusScalarFieldEnum | SilabusScalarFieldEnum[]
  }

  /**
   * Silabus findMany
   */
  export type SilabusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter, which Silabuses to fetch.
     */
    where?: SilabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Silabuses to fetch.
     */
    orderBy?: SilabusOrderByWithRelationInput | SilabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Silabuses.
     */
    cursor?: SilabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Silabuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Silabuses.
     */
    skip?: number
    distinct?: SilabusScalarFieldEnum | SilabusScalarFieldEnum[]
  }

  /**
   * Silabus create
   */
  export type SilabusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * The data needed to create a Silabus.
     */
    data: XOR<SilabusCreateInput, SilabusUncheckedCreateInput>
  }

  /**
   * Silabus createMany
   */
  export type SilabusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Silabuses.
     */
    data: SilabusCreateManyInput | SilabusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Silabus update
   */
  export type SilabusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * The data needed to update a Silabus.
     */
    data: XOR<SilabusUpdateInput, SilabusUncheckedUpdateInput>
    /**
     * Choose, which Silabus to update.
     */
    where: SilabusWhereUniqueInput
  }

  /**
   * Silabus updateMany
   */
  export type SilabusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Silabuses.
     */
    data: XOR<SilabusUpdateManyMutationInput, SilabusUncheckedUpdateManyInput>
    /**
     * Filter which Silabuses to update
     */
    where?: SilabusWhereInput
  }

  /**
   * Silabus upsert
   */
  export type SilabusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * The filter to search for the Silabus to update in case it exists.
     */
    where: SilabusWhereUniqueInput
    /**
     * In case the Silabus found by the `where` argument doesn't exist, create a new Silabus with this data.
     */
    create: XOR<SilabusCreateInput, SilabusUncheckedCreateInput>
    /**
     * In case the Silabus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SilabusUpdateInput, SilabusUncheckedUpdateInput>
  }

  /**
   * Silabus delete
   */
  export type SilabusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
    /**
     * Filter which Silabus to delete.
     */
    where: SilabusWhereUniqueInput
  }

  /**
   * Silabus deleteMany
   */
  export type SilabusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Silabuses to delete
     */
    where?: SilabusWhereInput
  }

  /**
   * Silabus without action
   */
  export type SilabusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Silabus
     */
    select?: SilabusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SilabusInclude<ExtArgs> | null
  }


  /**
   * Model Transaksi_kelas
   */

  export type AggregateTransaksi_kelas = {
    _count: Transaksi_kelasCountAggregateOutputType | null
    _avg: Transaksi_kelasAvgAggregateOutputType | null
    _sum: Transaksi_kelasSumAggregateOutputType | null
    _min: Transaksi_kelasMinAggregateOutputType | null
    _max: Transaksi_kelasMaxAggregateOutputType | null
  }

  export type Transaksi_kelasAvgAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_pembayaran: number | null
  }

  export type Transaksi_kelasSumAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_pembayaran: number | null
  }

  export type Transaksi_kelasMinAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_pembayaran: number | null
    created_at: Date | null
  }

  export type Transaksi_kelasMaxAggregateOutputType = {
    id: number | null
    id_kelas: number | null
    id_pembayaran: number | null
    created_at: Date | null
  }

  export type Transaksi_kelasCountAggregateOutputType = {
    id: number
    id_kelas: number
    id_pembayaran: number
    created_at: number
    _all: number
  }


  export type Transaksi_kelasAvgAggregateInputType = {
    id?: true
    id_kelas?: true
    id_pembayaran?: true
  }

  export type Transaksi_kelasSumAggregateInputType = {
    id?: true
    id_kelas?: true
    id_pembayaran?: true
  }

  export type Transaksi_kelasMinAggregateInputType = {
    id?: true
    id_kelas?: true
    id_pembayaran?: true
    created_at?: true
  }

  export type Transaksi_kelasMaxAggregateInputType = {
    id?: true
    id_kelas?: true
    id_pembayaran?: true
    created_at?: true
  }

  export type Transaksi_kelasCountAggregateInputType = {
    id?: true
    id_kelas?: true
    id_pembayaran?: true
    created_at?: true
    _all?: true
  }

  export type Transaksi_kelasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaksi_kelas to aggregate.
     */
    where?: Transaksi_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksi_kelas to fetch.
     */
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Transaksi_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksi_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksi_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transaksi_kelas
    **/
    _count?: true | Transaksi_kelasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Transaksi_kelasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Transaksi_kelasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Transaksi_kelasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Transaksi_kelasMaxAggregateInputType
  }

  export type GetTransaksi_kelasAggregateType<T extends Transaksi_kelasAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaksi_kelas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaksi_kelas[P]>
      : GetScalarType<T[P], AggregateTransaksi_kelas[P]>
  }




  export type Transaksi_kelasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Transaksi_kelasWhereInput
    orderBy?: Transaksi_kelasOrderByWithAggregationInput | Transaksi_kelasOrderByWithAggregationInput[]
    by: Transaksi_kelasScalarFieldEnum[] | Transaksi_kelasScalarFieldEnum
    having?: Transaksi_kelasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Transaksi_kelasCountAggregateInputType | true
    _avg?: Transaksi_kelasAvgAggregateInputType
    _sum?: Transaksi_kelasSumAggregateInputType
    _min?: Transaksi_kelasMinAggregateInputType
    _max?: Transaksi_kelasMaxAggregateInputType
  }

  export type Transaksi_kelasGroupByOutputType = {
    id: number
    id_kelas: number
    id_pembayaran: number
    created_at: Date
    _count: Transaksi_kelasCountAggregateOutputType | null
    _avg: Transaksi_kelasAvgAggregateOutputType | null
    _sum: Transaksi_kelasSumAggregateOutputType | null
    _min: Transaksi_kelasMinAggregateOutputType | null
    _max: Transaksi_kelasMaxAggregateOutputType | null
  }

  type GetTransaksi_kelasGroupByPayload<T extends Transaksi_kelasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Transaksi_kelasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Transaksi_kelasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Transaksi_kelasGroupByOutputType[P]>
            : GetScalarType<T[P], Transaksi_kelasGroupByOutputType[P]>
        }
      >
    >


  export type Transaksi_kelasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_kelas?: boolean
    id_pembayaran?: boolean
    created_at?: boolean
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    pembayaran?: boolean | PembayaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi_kelas"]>


  export type Transaksi_kelasSelectScalar = {
    id?: boolean
    id_kelas?: boolean
    id_pembayaran?: boolean
    created_at?: boolean
  }

  export type Transaksi_kelasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kelas?: boolean | KelasDefaultArgs<ExtArgs>
    pembayaran?: boolean | PembayaranDefaultArgs<ExtArgs>
  }

  export type $Transaksi_kelasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaksi_kelas"
    objects: {
      kelas: Prisma.$KelasPayload<ExtArgs>
      pembayaran: Prisma.$PembayaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_kelas: number
      id_pembayaran: number
      created_at: Date
    }, ExtArgs["result"]["transaksi_kelas"]>
    composites: {}
  }

  type Transaksi_kelasGetPayload<S extends boolean | null | undefined | Transaksi_kelasDefaultArgs> = $Result.GetResult<Prisma.$Transaksi_kelasPayload, S>

  type Transaksi_kelasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Transaksi_kelasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Transaksi_kelasCountAggregateInputType | true
    }

  export interface Transaksi_kelasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaksi_kelas'], meta: { name: 'Transaksi_kelas' } }
    /**
     * Find zero or one Transaksi_kelas that matches the filter.
     * @param {Transaksi_kelasFindUniqueArgs} args - Arguments to find a Transaksi_kelas
     * @example
     * // Get one Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Transaksi_kelasFindUniqueArgs>(args: SelectSubset<T, Transaksi_kelasFindUniqueArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Transaksi_kelas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Transaksi_kelasFindUniqueOrThrowArgs} args - Arguments to find a Transaksi_kelas
     * @example
     * // Get one Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Transaksi_kelasFindUniqueOrThrowArgs>(args: SelectSubset<T, Transaksi_kelasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Transaksi_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasFindFirstArgs} args - Arguments to find a Transaksi_kelas
     * @example
     * // Get one Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Transaksi_kelasFindFirstArgs>(args?: SelectSubset<T, Transaksi_kelasFindFirstArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Transaksi_kelas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasFindFirstOrThrowArgs} args - Arguments to find a Transaksi_kelas
     * @example
     * // Get one Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Transaksi_kelasFindFirstOrThrowArgs>(args?: SelectSubset<T, Transaksi_kelasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Transaksi_kelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findMany()
     * 
     * // Get first 10 Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaksi_kelasWithIdOnly = await prisma.transaksi_kelas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Transaksi_kelasFindManyArgs>(args?: SelectSubset<T, Transaksi_kelasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Transaksi_kelas.
     * @param {Transaksi_kelasCreateArgs} args - Arguments to create a Transaksi_kelas.
     * @example
     * // Create one Transaksi_kelas
     * const Transaksi_kelas = await prisma.transaksi_kelas.create({
     *   data: {
     *     // ... data to create a Transaksi_kelas
     *   }
     * })
     * 
     */
    create<T extends Transaksi_kelasCreateArgs>(args: SelectSubset<T, Transaksi_kelasCreateArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Transaksi_kelas.
     * @param {Transaksi_kelasCreateManyArgs} args - Arguments to create many Transaksi_kelas.
     * @example
     * // Create many Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Transaksi_kelasCreateManyArgs>(args?: SelectSubset<T, Transaksi_kelasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Transaksi_kelas.
     * @param {Transaksi_kelasDeleteArgs} args - Arguments to delete one Transaksi_kelas.
     * @example
     * // Delete one Transaksi_kelas
     * const Transaksi_kelas = await prisma.transaksi_kelas.delete({
     *   where: {
     *     // ... filter to delete one Transaksi_kelas
     *   }
     * })
     * 
     */
    delete<T extends Transaksi_kelasDeleteArgs>(args: SelectSubset<T, Transaksi_kelasDeleteArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Transaksi_kelas.
     * @param {Transaksi_kelasUpdateArgs} args - Arguments to update one Transaksi_kelas.
     * @example
     * // Update one Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Transaksi_kelasUpdateArgs>(args: SelectSubset<T, Transaksi_kelasUpdateArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Transaksi_kelas.
     * @param {Transaksi_kelasDeleteManyArgs} args - Arguments to filter Transaksi_kelas to delete.
     * @example
     * // Delete a few Transaksi_kelas
     * const { count } = await prisma.transaksi_kelas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Transaksi_kelasDeleteManyArgs>(args?: SelectSubset<T, Transaksi_kelasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaksi_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Transaksi_kelasUpdateManyArgs>(args: SelectSubset<T, Transaksi_kelasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transaksi_kelas.
     * @param {Transaksi_kelasUpsertArgs} args - Arguments to update or create a Transaksi_kelas.
     * @example
     * // Update or create a Transaksi_kelas
     * const transaksi_kelas = await prisma.transaksi_kelas.upsert({
     *   create: {
     *     // ... data to create a Transaksi_kelas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaksi_kelas we want to update
     *   }
     * })
     */
    upsert<T extends Transaksi_kelasUpsertArgs>(args: SelectSubset<T, Transaksi_kelasUpsertArgs<ExtArgs>>): Prisma__Transaksi_kelasClient<$Result.GetResult<Prisma.$Transaksi_kelasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Transaksi_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasCountArgs} args - Arguments to filter Transaksi_kelas to count.
     * @example
     * // Count the number of Transaksi_kelas
     * const count = await prisma.transaksi_kelas.count({
     *   where: {
     *     // ... the filter for the Transaksi_kelas we want to count
     *   }
     * })
    **/
    count<T extends Transaksi_kelasCountArgs>(
      args?: Subset<T, Transaksi_kelasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Transaksi_kelasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaksi_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Transaksi_kelasAggregateArgs>(args: Subset<T, Transaksi_kelasAggregateArgs>): Prisma.PrismaPromise<GetTransaksi_kelasAggregateType<T>>

    /**
     * Group by Transaksi_kelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaksi_kelasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Transaksi_kelasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Transaksi_kelasGroupByArgs['orderBy'] }
        : { orderBy?: Transaksi_kelasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Transaksi_kelasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaksi_kelasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaksi_kelas model
   */
  readonly fields: Transaksi_kelasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaksi_kelas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Transaksi_kelasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kelas<T extends KelasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KelasDefaultArgs<ExtArgs>>): Prisma__KelasClient<$Result.GetResult<Prisma.$KelasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    pembayaran<T extends PembayaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PembayaranDefaultArgs<ExtArgs>>): Prisma__PembayaranClient<$Result.GetResult<Prisma.$PembayaranPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaksi_kelas model
   */ 
  interface Transaksi_kelasFieldRefs {
    readonly id: FieldRef<"Transaksi_kelas", 'Int'>
    readonly id_kelas: FieldRef<"Transaksi_kelas", 'Int'>
    readonly id_pembayaran: FieldRef<"Transaksi_kelas", 'Int'>
    readonly created_at: FieldRef<"Transaksi_kelas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transaksi_kelas findUnique
   */
  export type Transaksi_kelasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi_kelas to fetch.
     */
    where: Transaksi_kelasWhereUniqueInput
  }

  /**
   * Transaksi_kelas findUniqueOrThrow
   */
  export type Transaksi_kelasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi_kelas to fetch.
     */
    where: Transaksi_kelasWhereUniqueInput
  }

  /**
   * Transaksi_kelas findFirst
   */
  export type Transaksi_kelasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi_kelas to fetch.
     */
    where?: Transaksi_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksi_kelas to fetch.
     */
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaksi_kelas.
     */
    cursor?: Transaksi_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksi_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksi_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaksi_kelas.
     */
    distinct?: Transaksi_kelasScalarFieldEnum | Transaksi_kelasScalarFieldEnum[]
  }

  /**
   * Transaksi_kelas findFirstOrThrow
   */
  export type Transaksi_kelasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi_kelas to fetch.
     */
    where?: Transaksi_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksi_kelas to fetch.
     */
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaksi_kelas.
     */
    cursor?: Transaksi_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksi_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksi_kelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaksi_kelas.
     */
    distinct?: Transaksi_kelasScalarFieldEnum | Transaksi_kelasScalarFieldEnum[]
  }

  /**
   * Transaksi_kelas findMany
   */
  export type Transaksi_kelasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi_kelas to fetch.
     */
    where?: Transaksi_kelasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksi_kelas to fetch.
     */
    orderBy?: Transaksi_kelasOrderByWithRelationInput | Transaksi_kelasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transaksi_kelas.
     */
    cursor?: Transaksi_kelasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksi_kelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksi_kelas.
     */
    skip?: number
    distinct?: Transaksi_kelasScalarFieldEnum | Transaksi_kelasScalarFieldEnum[]
  }

  /**
   * Transaksi_kelas create
   */
  export type Transaksi_kelasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaksi_kelas.
     */
    data: XOR<Transaksi_kelasCreateInput, Transaksi_kelasUncheckedCreateInput>
  }

  /**
   * Transaksi_kelas createMany
   */
  export type Transaksi_kelasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transaksi_kelas.
     */
    data: Transaksi_kelasCreateManyInput | Transaksi_kelasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaksi_kelas update
   */
  export type Transaksi_kelasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaksi_kelas.
     */
    data: XOR<Transaksi_kelasUpdateInput, Transaksi_kelasUncheckedUpdateInput>
    /**
     * Choose, which Transaksi_kelas to update.
     */
    where: Transaksi_kelasWhereUniqueInput
  }

  /**
   * Transaksi_kelas updateMany
   */
  export type Transaksi_kelasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transaksi_kelas.
     */
    data: XOR<Transaksi_kelasUpdateManyMutationInput, Transaksi_kelasUncheckedUpdateManyInput>
    /**
     * Filter which Transaksi_kelas to update
     */
    where?: Transaksi_kelasWhereInput
  }

  /**
   * Transaksi_kelas upsert
   */
  export type Transaksi_kelasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaksi_kelas to update in case it exists.
     */
    where: Transaksi_kelasWhereUniqueInput
    /**
     * In case the Transaksi_kelas found by the `where` argument doesn't exist, create a new Transaksi_kelas with this data.
     */
    create: XOR<Transaksi_kelasCreateInput, Transaksi_kelasUncheckedCreateInput>
    /**
     * In case the Transaksi_kelas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Transaksi_kelasUpdateInput, Transaksi_kelasUncheckedUpdateInput>
  }

  /**
   * Transaksi_kelas delete
   */
  export type Transaksi_kelasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
    /**
     * Filter which Transaksi_kelas to delete.
     */
    where: Transaksi_kelasWhereUniqueInput
  }

  /**
   * Transaksi_kelas deleteMany
   */
  export type Transaksi_kelasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaksi_kelas to delete
     */
    where?: Transaksi_kelasWhereInput
  }

  /**
   * Transaksi_kelas without action
   */
  export type Transaksi_kelasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi_kelas
     */
    select?: Transaksi_kelasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Transaksi_kelasInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    fullname: 'fullname',
    username: 'username',
    email: 'email',
    password: 'password',
    emailToken: 'emailToken',
    isVerified: 'isVerified'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const TutorScalarFieldEnum: {
    nama: 'nama',
    email: 'email',
    password: 'password',
    jabatan: 'jabatan',
    perusahaan: 'perusahaan',
    created_at: 'created_at'
  };

  export type TutorScalarFieldEnum = (typeof TutorScalarFieldEnum)[keyof typeof TutorScalarFieldEnum]


  export const KelasScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    harga: 'harga',
    deskripsi: 'deskripsi',
    background_foto: 'background_foto',
    video: 'video',
    created_at: 'created_at'
  };

  export type KelasScalarFieldEnum = (typeof KelasScalarFieldEnum)[keyof typeof KelasScalarFieldEnum]


  export const Kategori_kelasScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    created_at: 'created_at'
  };

  export type Kategori_kelasScalarFieldEnum = (typeof Kategori_kelasScalarFieldEnum)[keyof typeof Kategori_kelasScalarFieldEnum]


  export const Kategori_kelas_relasiScalarFieldEnum: {
    id: 'id',
    id_kelas: 'id_kelas',
    id_kategori_kelas: 'id_kategori_kelas',
    created_at: 'created_at'
  };

  export type Kategori_kelas_relasiScalarFieldEnum = (typeof Kategori_kelas_relasiScalarFieldEnum)[keyof typeof Kategori_kelas_relasiScalarFieldEnum]


  export const Kelas_sayaScalarFieldEnum: {
    id: 'id',
    progres_kelas: 'progres_kelas',
    status_kelas: 'status_kelas',
    created_at: 'created_at'
  };

  export type Kelas_sayaScalarFieldEnum = (typeof Kelas_sayaScalarFieldEnum)[keyof typeof Kelas_sayaScalarFieldEnum]


  export const MaterialScalarFieldEnum: {
    id: 'id',
    durasi: 'durasi',
    kuis: 'kuis',
    rangkuman: 'rangkuman',
    created_at: 'created_at'
  };

  export type MaterialScalarFieldEnum = (typeof MaterialScalarFieldEnum)[keyof typeof MaterialScalarFieldEnum]


  export const MengajarScalarFieldEnum: {
    id: 'id',
    id_kelas: 'id_kelas',
    email_tutor: 'email_tutor',
    created_at: 'created_at'
  };

  export type MengajarScalarFieldEnum = (typeof MengajarScalarFieldEnum)[keyof typeof MengajarScalarFieldEnum]


  export const Modul_kelasScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    created_at: 'created_at'
  };

  export type Modul_kelasScalarFieldEnum = (typeof Modul_kelasScalarFieldEnum)[keyof typeof Modul_kelasScalarFieldEnum]


  export const Modul_materialScalarFieldEnum: {
    id: 'id',
    id_material: 'id_material',
    id_modul_kelas: 'id_modul_kelas'
  };

  export type Modul_materialScalarFieldEnum = (typeof Modul_materialScalarFieldEnum)[keyof typeof Modul_materialScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    invoice: 'invoice',
    waktu_transaksi: 'waktu_transaksi',
    total_pembayaran: 'total_pembayaran',
    harga: 'harga',
    status_pembayaran: 'status_pembayaran',
    created_at: 'created_at'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const Orders_kelasScalarFieldEnum: {
    id: 'id',
    id_orders: 'id_orders',
    id_kelas_saya: 'id_kelas_saya',
    created_at: 'created_at'
  };

  export type Orders_kelasScalarFieldEnum = (typeof Orders_kelasScalarFieldEnum)[keyof typeof Orders_kelasScalarFieldEnum]


  export const PembayaranScalarFieldEnum: {
    id: 'id',
    kode: 'kode',
    nama: 'nama',
    jenis_pembayaran: 'jenis_pembayaran',
    created_at: 'created_at'
  };

  export type PembayaranScalarFieldEnum = (typeof PembayaranScalarFieldEnum)[keyof typeof PembayaranScalarFieldEnum]


  export const Orders_pembayaranScalarFieldEnum: {
    id: 'id',
    id_orders: 'id_orders',
    id_pembayaran: 'id_pembayaran',
    created_at: 'created_at'
  };

  export type Orders_pembayaranScalarFieldEnum = (typeof Orders_pembayaranScalarFieldEnum)[keyof typeof Orders_pembayaranScalarFieldEnum]


  export const PretestScalarFieldEnum: {
    id: 'id',
    jdudul_pertanyaan: 'jdudul_pertanyaan',
    list_soal: 'list_soal',
    opsi_jawaban: 'opsi_jawaban',
    pertanyaan: 'pertanyaan',
    created_at: 'created_at'
  };

  export type PretestScalarFieldEnum = (typeof PretestScalarFieldEnum)[keyof typeof PretestScalarFieldEnum]


  export const Pretest_kelasScalarFieldEnum: {
    id: 'id',
    id_pretest: 'id_pretest',
    id_kelas_saya: 'id_kelas_saya',
    created_at: 'created_at'
  };

  export type Pretest_kelasScalarFieldEnum = (typeof Pretest_kelasScalarFieldEnum)[keyof typeof Pretest_kelasScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    rating: 'rating',
    deskripsi: 'deskripsi',
    created_at: 'created_at'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const Review_pretestScalarFieldEnum: {
    id: 'id',
    id_pretest: 'id_pretest',
    id_review: 'id_review',
    created_at: 'created_at'
  };

  export type Review_pretestScalarFieldEnum = (typeof Review_pretestScalarFieldEnum)[keyof typeof Review_pretestScalarFieldEnum]


  export const SilabusScalarFieldEnum: {
    id: 'id',
    id_kelas: 'id_kelas',
    id_modul: 'id_modul',
    created_at: 'created_at'
  };

  export type SilabusScalarFieldEnum = (typeof SilabusScalarFieldEnum)[keyof typeof SilabusScalarFieldEnum]


  export const Transaksi_kelasScalarFieldEnum: {
    id: 'id',
    id_kelas: 'id_kelas',
    id_pembayaran: 'id_pembayaran',
    created_at: 'created_at'
  };

  export type Transaksi_kelasScalarFieldEnum = (typeof Transaksi_kelasScalarFieldEnum)[keyof typeof Transaksi_kelasScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Status_kelas'
   */
  export type EnumStatus_kelasFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status_kelas'>
    


  /**
   * Reference to a field of type 'Status_pembayaran'
   */
  export type EnumStatus_pembayaranFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status_pembayaran'>
    


  /**
   * Reference to a field of type 'Jenis_pembayaran'
   */
  export type EnumJenis_pembayaranFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Jenis_pembayaran'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    fullname?: StringNullableFilter<"User"> | string | null
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    emailToken?: StringNullableFilter<"User"> | string | null
    isVerified?: BoolNullableFilter<"User"> | boolean | null
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    fullname?: SortOrderInput | SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    emailToken?: SortOrderInput | SortOrder
    isVerified?: SortOrderInput | SortOrder
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    emailToken?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    fullname?: StringNullableFilter<"User"> | string | null
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    isVerified?: BoolNullableFilter<"User"> | boolean | null
  }, "id" | "email" | "emailToken">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    fullname?: SortOrderInput | SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    emailToken?: SortOrderInput | SortOrder
    isVerified?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    fullname?: StringNullableWithAggregatesFilter<"User"> | string | null
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    emailToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    isVerified?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
  }

  export type TutorWhereInput = {
    AND?: TutorWhereInput | TutorWhereInput[]
    OR?: TutorWhereInput[]
    NOT?: TutorWhereInput | TutorWhereInput[]
    nama?: StringFilter<"Tutor"> | string
    email?: StringFilter<"Tutor"> | string
    password?: StringFilter<"Tutor"> | string
    jabatan?: StringFilter<"Tutor"> | string
    perusahaan?: StringFilter<"Tutor"> | string
    created_at?: DateTimeFilter<"Tutor"> | Date | string
    mengajar?: MengajarListRelationFilter
  }

  export type TutorOrderByWithRelationInput = {
    nama?: SortOrder
    email?: SortOrder
    password?: SortOrder
    jabatan?: SortOrder
    perusahaan?: SortOrder
    created_at?: SortOrder
    mengajar?: MengajarOrderByRelationAggregateInput
  }

  export type TutorWhereUniqueInput = Prisma.AtLeast<{
    email?: string
    AND?: TutorWhereInput | TutorWhereInput[]
    OR?: TutorWhereInput[]
    NOT?: TutorWhereInput | TutorWhereInput[]
    nama?: StringFilter<"Tutor"> | string
    password?: StringFilter<"Tutor"> | string
    jabatan?: StringFilter<"Tutor"> | string
    perusahaan?: StringFilter<"Tutor"> | string
    created_at?: DateTimeFilter<"Tutor"> | Date | string
    mengajar?: MengajarListRelationFilter
  }, "email">

  export type TutorOrderByWithAggregationInput = {
    nama?: SortOrder
    email?: SortOrder
    password?: SortOrder
    jabatan?: SortOrder
    perusahaan?: SortOrder
    created_at?: SortOrder
    _count?: TutorCountOrderByAggregateInput
    _max?: TutorMaxOrderByAggregateInput
    _min?: TutorMinOrderByAggregateInput
  }

  export type TutorScalarWhereWithAggregatesInput = {
    AND?: TutorScalarWhereWithAggregatesInput | TutorScalarWhereWithAggregatesInput[]
    OR?: TutorScalarWhereWithAggregatesInput[]
    NOT?: TutorScalarWhereWithAggregatesInput | TutorScalarWhereWithAggregatesInput[]
    nama?: StringWithAggregatesFilter<"Tutor"> | string
    email?: StringWithAggregatesFilter<"Tutor"> | string
    password?: StringWithAggregatesFilter<"Tutor"> | string
    jabatan?: StringWithAggregatesFilter<"Tutor"> | string
    perusahaan?: StringWithAggregatesFilter<"Tutor"> | string
    created_at?: DateTimeWithAggregatesFilter<"Tutor"> | Date | string
  }

  export type KelasWhereInput = {
    AND?: KelasWhereInput | KelasWhereInput[]
    OR?: KelasWhereInput[]
    NOT?: KelasWhereInput | KelasWhereInput[]
    id?: IntFilter<"Kelas"> | number
    nama?: StringFilter<"Kelas"> | string
    harga?: DecimalFilter<"Kelas"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFilter<"Kelas"> | string
    background_foto?: StringFilter<"Kelas"> | string
    video?: StringFilter<"Kelas"> | string
    created_at?: DateTimeFilter<"Kelas"> | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiListRelationFilter
    mengajar?: MengajarListRelationFilter
    silabus?: SilabusListRelationFilter
    transaksi_kelas?: Transaksi_kelasListRelationFilter
  }

  export type KelasOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    deskripsi?: SortOrder
    background_foto?: SortOrder
    video?: SortOrder
    created_at?: SortOrder
    kategori_kelas_relasi?: Kategori_kelas_relasiOrderByRelationAggregateInput
    mengajar?: MengajarOrderByRelationAggregateInput
    silabus?: SilabusOrderByRelationAggregateInput
    transaksi_kelas?: Transaksi_kelasOrderByRelationAggregateInput
  }

  export type KelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: KelasWhereInput | KelasWhereInput[]
    OR?: KelasWhereInput[]
    NOT?: KelasWhereInput | KelasWhereInput[]
    nama?: StringFilter<"Kelas"> | string
    harga?: DecimalFilter<"Kelas"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFilter<"Kelas"> | string
    background_foto?: StringFilter<"Kelas"> | string
    video?: StringFilter<"Kelas"> | string
    created_at?: DateTimeFilter<"Kelas"> | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiListRelationFilter
    mengajar?: MengajarListRelationFilter
    silabus?: SilabusListRelationFilter
    transaksi_kelas?: Transaksi_kelasListRelationFilter
  }, "id">

  export type KelasOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    deskripsi?: SortOrder
    background_foto?: SortOrder
    video?: SortOrder
    created_at?: SortOrder
    _count?: KelasCountOrderByAggregateInput
    _avg?: KelasAvgOrderByAggregateInput
    _max?: KelasMaxOrderByAggregateInput
    _min?: KelasMinOrderByAggregateInput
    _sum?: KelasSumOrderByAggregateInput
  }

  export type KelasScalarWhereWithAggregatesInput = {
    AND?: KelasScalarWhereWithAggregatesInput | KelasScalarWhereWithAggregatesInput[]
    OR?: KelasScalarWhereWithAggregatesInput[]
    NOT?: KelasScalarWhereWithAggregatesInput | KelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Kelas"> | number
    nama?: StringWithAggregatesFilter<"Kelas"> | string
    harga?: DecimalWithAggregatesFilter<"Kelas"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringWithAggregatesFilter<"Kelas"> | string
    background_foto?: StringWithAggregatesFilter<"Kelas"> | string
    video?: StringWithAggregatesFilter<"Kelas"> | string
    created_at?: DateTimeWithAggregatesFilter<"Kelas"> | Date | string
  }

  export type Kategori_kelasWhereInput = {
    AND?: Kategori_kelasWhereInput | Kategori_kelasWhereInput[]
    OR?: Kategori_kelasWhereInput[]
    NOT?: Kategori_kelasWhereInput | Kategori_kelasWhereInput[]
    id?: IntFilter<"Kategori_kelas"> | number
    nama?: StringFilter<"Kategori_kelas"> | string
    created_at?: DateTimeFilter<"Kategori_kelas"> | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiListRelationFilter
  }

  export type Kategori_kelasOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
    kategori_kelas_relasi?: Kategori_kelas_relasiOrderByRelationAggregateInput
  }

  export type Kategori_kelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Kategori_kelasWhereInput | Kategori_kelasWhereInput[]
    OR?: Kategori_kelasWhereInput[]
    NOT?: Kategori_kelasWhereInput | Kategori_kelasWhereInput[]
    nama?: StringFilter<"Kategori_kelas"> | string
    created_at?: DateTimeFilter<"Kategori_kelas"> | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiListRelationFilter
  }, "id">

  export type Kategori_kelasOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
    _count?: Kategori_kelasCountOrderByAggregateInput
    _avg?: Kategori_kelasAvgOrderByAggregateInput
    _max?: Kategori_kelasMaxOrderByAggregateInput
    _min?: Kategori_kelasMinOrderByAggregateInput
    _sum?: Kategori_kelasSumOrderByAggregateInput
  }

  export type Kategori_kelasScalarWhereWithAggregatesInput = {
    AND?: Kategori_kelasScalarWhereWithAggregatesInput | Kategori_kelasScalarWhereWithAggregatesInput[]
    OR?: Kategori_kelasScalarWhereWithAggregatesInput[]
    NOT?: Kategori_kelasScalarWhereWithAggregatesInput | Kategori_kelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Kategori_kelas"> | number
    nama?: StringWithAggregatesFilter<"Kategori_kelas"> | string
    created_at?: DateTimeWithAggregatesFilter<"Kategori_kelas"> | Date | string
  }

  export type Kategori_kelas_relasiWhereInput = {
    AND?: Kategori_kelas_relasiWhereInput | Kategori_kelas_relasiWhereInput[]
    OR?: Kategori_kelas_relasiWhereInput[]
    NOT?: Kategori_kelas_relasiWhereInput | Kategori_kelas_relasiWhereInput[]
    id?: IntFilter<"Kategori_kelas_relasi"> | number
    id_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    id_kategori_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    created_at?: DateTimeFilter<"Kategori_kelas_relasi"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    kategori_kelas?: XOR<Kategori_kelasRelationFilter, Kategori_kelasWhereInput>
  }

  export type Kategori_kelas_relasiOrderByWithRelationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
    created_at?: SortOrder
    kelas?: KelasOrderByWithRelationInput
    kategori_kelas?: Kategori_kelasOrderByWithRelationInput
  }

  export type Kategori_kelas_relasiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Kategori_kelas_relasiWhereInput | Kategori_kelas_relasiWhereInput[]
    OR?: Kategori_kelas_relasiWhereInput[]
    NOT?: Kategori_kelas_relasiWhereInput | Kategori_kelas_relasiWhereInput[]
    id_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    id_kategori_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    created_at?: DateTimeFilter<"Kategori_kelas_relasi"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    kategori_kelas?: XOR<Kategori_kelasRelationFilter, Kategori_kelasWhereInput>
  }, "id">

  export type Kategori_kelas_relasiOrderByWithAggregationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
    created_at?: SortOrder
    _count?: Kategori_kelas_relasiCountOrderByAggregateInput
    _avg?: Kategori_kelas_relasiAvgOrderByAggregateInput
    _max?: Kategori_kelas_relasiMaxOrderByAggregateInput
    _min?: Kategori_kelas_relasiMinOrderByAggregateInput
    _sum?: Kategori_kelas_relasiSumOrderByAggregateInput
  }

  export type Kategori_kelas_relasiScalarWhereWithAggregatesInput = {
    AND?: Kategori_kelas_relasiScalarWhereWithAggregatesInput | Kategori_kelas_relasiScalarWhereWithAggregatesInput[]
    OR?: Kategori_kelas_relasiScalarWhereWithAggregatesInput[]
    NOT?: Kategori_kelas_relasiScalarWhereWithAggregatesInput | Kategori_kelas_relasiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Kategori_kelas_relasi"> | number
    id_kelas?: IntWithAggregatesFilter<"Kategori_kelas_relasi"> | number
    id_kategori_kelas?: IntWithAggregatesFilter<"Kategori_kelas_relasi"> | number
    created_at?: DateTimeWithAggregatesFilter<"Kategori_kelas_relasi"> | Date | string
  }

  export type Kelas_sayaWhereInput = {
    AND?: Kelas_sayaWhereInput | Kelas_sayaWhereInput[]
    OR?: Kelas_sayaWhereInput[]
    NOT?: Kelas_sayaWhereInput | Kelas_sayaWhereInput[]
    id?: IntFilter<"Kelas_saya"> | number
    progres_kelas?: FloatFilter<"Kelas_saya"> | number
    status_kelas?: EnumStatus_kelasFilter<"Kelas_saya"> | $Enums.Status_kelas
    created_at?: DateTimeFilter<"Kelas_saya"> | Date | string
    orders_kelas?: Orders_kelasListRelationFilter
    pretest_kelas?: Pretest_kelasListRelationFilter
  }

  export type Kelas_sayaOrderByWithRelationInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
    status_kelas?: SortOrder
    created_at?: SortOrder
    orders_kelas?: Orders_kelasOrderByRelationAggregateInput
    pretest_kelas?: Pretest_kelasOrderByRelationAggregateInput
  }

  export type Kelas_sayaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Kelas_sayaWhereInput | Kelas_sayaWhereInput[]
    OR?: Kelas_sayaWhereInput[]
    NOT?: Kelas_sayaWhereInput | Kelas_sayaWhereInput[]
    progres_kelas?: FloatFilter<"Kelas_saya"> | number
    status_kelas?: EnumStatus_kelasFilter<"Kelas_saya"> | $Enums.Status_kelas
    created_at?: DateTimeFilter<"Kelas_saya"> | Date | string
    orders_kelas?: Orders_kelasListRelationFilter
    pretest_kelas?: Pretest_kelasListRelationFilter
  }, "id">

  export type Kelas_sayaOrderByWithAggregationInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
    status_kelas?: SortOrder
    created_at?: SortOrder
    _count?: Kelas_sayaCountOrderByAggregateInput
    _avg?: Kelas_sayaAvgOrderByAggregateInput
    _max?: Kelas_sayaMaxOrderByAggregateInput
    _min?: Kelas_sayaMinOrderByAggregateInput
    _sum?: Kelas_sayaSumOrderByAggregateInput
  }

  export type Kelas_sayaScalarWhereWithAggregatesInput = {
    AND?: Kelas_sayaScalarWhereWithAggregatesInput | Kelas_sayaScalarWhereWithAggregatesInput[]
    OR?: Kelas_sayaScalarWhereWithAggregatesInput[]
    NOT?: Kelas_sayaScalarWhereWithAggregatesInput | Kelas_sayaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Kelas_saya"> | number
    progres_kelas?: FloatWithAggregatesFilter<"Kelas_saya"> | number
    status_kelas?: EnumStatus_kelasWithAggregatesFilter<"Kelas_saya"> | $Enums.Status_kelas
    created_at?: DateTimeWithAggregatesFilter<"Kelas_saya"> | Date | string
  }

  export type MaterialWhereInput = {
    AND?: MaterialWhereInput | MaterialWhereInput[]
    OR?: MaterialWhereInput[]
    NOT?: MaterialWhereInput | MaterialWhereInput[]
    id?: IntFilter<"Material"> | number
    durasi?: DateTimeFilter<"Material"> | Date | string
    kuis?: StringFilter<"Material"> | string
    rangkuman?: StringFilter<"Material"> | string
    created_at?: DateTimeFilter<"Material"> | Date | string
    modul_material?: Modul_materialListRelationFilter
  }

  export type MaterialOrderByWithRelationInput = {
    id?: SortOrder
    durasi?: SortOrder
    kuis?: SortOrder
    rangkuman?: SortOrder
    created_at?: SortOrder
    modul_material?: Modul_materialOrderByRelationAggregateInput
  }

  export type MaterialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MaterialWhereInput | MaterialWhereInput[]
    OR?: MaterialWhereInput[]
    NOT?: MaterialWhereInput | MaterialWhereInput[]
    durasi?: DateTimeFilter<"Material"> | Date | string
    kuis?: StringFilter<"Material"> | string
    rangkuman?: StringFilter<"Material"> | string
    created_at?: DateTimeFilter<"Material"> | Date | string
    modul_material?: Modul_materialListRelationFilter
  }, "id">

  export type MaterialOrderByWithAggregationInput = {
    id?: SortOrder
    durasi?: SortOrder
    kuis?: SortOrder
    rangkuman?: SortOrder
    created_at?: SortOrder
    _count?: MaterialCountOrderByAggregateInput
    _avg?: MaterialAvgOrderByAggregateInput
    _max?: MaterialMaxOrderByAggregateInput
    _min?: MaterialMinOrderByAggregateInput
    _sum?: MaterialSumOrderByAggregateInput
  }

  export type MaterialScalarWhereWithAggregatesInput = {
    AND?: MaterialScalarWhereWithAggregatesInput | MaterialScalarWhereWithAggregatesInput[]
    OR?: MaterialScalarWhereWithAggregatesInput[]
    NOT?: MaterialScalarWhereWithAggregatesInput | MaterialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Material"> | number
    durasi?: DateTimeWithAggregatesFilter<"Material"> | Date | string
    kuis?: StringWithAggregatesFilter<"Material"> | string
    rangkuman?: StringWithAggregatesFilter<"Material"> | string
    created_at?: DateTimeWithAggregatesFilter<"Material"> | Date | string
  }

  export type MengajarWhereInput = {
    AND?: MengajarWhereInput | MengajarWhereInput[]
    OR?: MengajarWhereInput[]
    NOT?: MengajarWhereInput | MengajarWhereInput[]
    id?: IntFilter<"Mengajar"> | number
    id_kelas?: IntFilter<"Mengajar"> | number
    email_tutor?: StringFilter<"Mengajar"> | string
    created_at?: DateTimeFilter<"Mengajar"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    tutor?: XOR<TutorRelationFilter, TutorWhereInput>
  }

  export type MengajarOrderByWithRelationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    email_tutor?: SortOrder
    created_at?: SortOrder
    kelas?: KelasOrderByWithRelationInput
    tutor?: TutorOrderByWithRelationInput
  }

  export type MengajarWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MengajarWhereInput | MengajarWhereInput[]
    OR?: MengajarWhereInput[]
    NOT?: MengajarWhereInput | MengajarWhereInput[]
    id_kelas?: IntFilter<"Mengajar"> | number
    email_tutor?: StringFilter<"Mengajar"> | string
    created_at?: DateTimeFilter<"Mengajar"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    tutor?: XOR<TutorRelationFilter, TutorWhereInput>
  }, "id">

  export type MengajarOrderByWithAggregationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    email_tutor?: SortOrder
    created_at?: SortOrder
    _count?: MengajarCountOrderByAggregateInput
    _avg?: MengajarAvgOrderByAggregateInput
    _max?: MengajarMaxOrderByAggregateInput
    _min?: MengajarMinOrderByAggregateInput
    _sum?: MengajarSumOrderByAggregateInput
  }

  export type MengajarScalarWhereWithAggregatesInput = {
    AND?: MengajarScalarWhereWithAggregatesInput | MengajarScalarWhereWithAggregatesInput[]
    OR?: MengajarScalarWhereWithAggregatesInput[]
    NOT?: MengajarScalarWhereWithAggregatesInput | MengajarScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mengajar"> | number
    id_kelas?: IntWithAggregatesFilter<"Mengajar"> | number
    email_tutor?: StringWithAggregatesFilter<"Mengajar"> | string
    created_at?: DateTimeWithAggregatesFilter<"Mengajar"> | Date | string
  }

  export type Modul_kelasWhereInput = {
    AND?: Modul_kelasWhereInput | Modul_kelasWhereInput[]
    OR?: Modul_kelasWhereInput[]
    NOT?: Modul_kelasWhereInput | Modul_kelasWhereInput[]
    id?: IntFilter<"Modul_kelas"> | number
    nama?: StringFilter<"Modul_kelas"> | string
    created_at?: DateTimeFilter<"Modul_kelas"> | Date | string
    modul_material?: Modul_materialListRelationFilter
    silabus?: SilabusListRelationFilter
  }

  export type Modul_kelasOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
    modul_material?: Modul_materialOrderByRelationAggregateInput
    silabus?: SilabusOrderByRelationAggregateInput
  }

  export type Modul_kelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Modul_kelasWhereInput | Modul_kelasWhereInput[]
    OR?: Modul_kelasWhereInput[]
    NOT?: Modul_kelasWhereInput | Modul_kelasWhereInput[]
    nama?: StringFilter<"Modul_kelas"> | string
    created_at?: DateTimeFilter<"Modul_kelas"> | Date | string
    modul_material?: Modul_materialListRelationFilter
    silabus?: SilabusListRelationFilter
  }, "id">

  export type Modul_kelasOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
    _count?: Modul_kelasCountOrderByAggregateInput
    _avg?: Modul_kelasAvgOrderByAggregateInput
    _max?: Modul_kelasMaxOrderByAggregateInput
    _min?: Modul_kelasMinOrderByAggregateInput
    _sum?: Modul_kelasSumOrderByAggregateInput
  }

  export type Modul_kelasScalarWhereWithAggregatesInput = {
    AND?: Modul_kelasScalarWhereWithAggregatesInput | Modul_kelasScalarWhereWithAggregatesInput[]
    OR?: Modul_kelasScalarWhereWithAggregatesInput[]
    NOT?: Modul_kelasScalarWhereWithAggregatesInput | Modul_kelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Modul_kelas"> | number
    nama?: StringWithAggregatesFilter<"Modul_kelas"> | string
    created_at?: DateTimeWithAggregatesFilter<"Modul_kelas"> | Date | string
  }

  export type Modul_materialWhereInput = {
    AND?: Modul_materialWhereInput | Modul_materialWhereInput[]
    OR?: Modul_materialWhereInput[]
    NOT?: Modul_materialWhereInput | Modul_materialWhereInput[]
    id?: IntFilter<"Modul_material"> | number
    id_material?: IntFilter<"Modul_material"> | number
    id_modul_kelas?: IntFilter<"Modul_material"> | number
    material?: XOR<MaterialRelationFilter, MaterialWhereInput>
    modul_kelas?: XOR<Modul_kelasRelationFilter, Modul_kelasWhereInput>
  }

  export type Modul_materialOrderByWithRelationInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
    material?: MaterialOrderByWithRelationInput
    modul_kelas?: Modul_kelasOrderByWithRelationInput
  }

  export type Modul_materialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Modul_materialWhereInput | Modul_materialWhereInput[]
    OR?: Modul_materialWhereInput[]
    NOT?: Modul_materialWhereInput | Modul_materialWhereInput[]
    id_material?: IntFilter<"Modul_material"> | number
    id_modul_kelas?: IntFilter<"Modul_material"> | number
    material?: XOR<MaterialRelationFilter, MaterialWhereInput>
    modul_kelas?: XOR<Modul_kelasRelationFilter, Modul_kelasWhereInput>
  }, "id">

  export type Modul_materialOrderByWithAggregationInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
    _count?: Modul_materialCountOrderByAggregateInput
    _avg?: Modul_materialAvgOrderByAggregateInput
    _max?: Modul_materialMaxOrderByAggregateInput
    _min?: Modul_materialMinOrderByAggregateInput
    _sum?: Modul_materialSumOrderByAggregateInput
  }

  export type Modul_materialScalarWhereWithAggregatesInput = {
    AND?: Modul_materialScalarWhereWithAggregatesInput | Modul_materialScalarWhereWithAggregatesInput[]
    OR?: Modul_materialScalarWhereWithAggregatesInput[]
    NOT?: Modul_materialScalarWhereWithAggregatesInput | Modul_materialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Modul_material"> | number
    id_material?: IntWithAggregatesFilter<"Modul_material"> | number
    id_modul_kelas?: IntWithAggregatesFilter<"Modul_material"> | number
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: IntFilter<"Order"> | number
    nama?: StringFilter<"Order"> | string
    invoice?: StringFilter<"Order"> | string
    waktu_transaksi?: DateTimeFilter<"Order"> | Date | string
    total_pembayaran?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    harga?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFilter<"Order"> | $Enums.Status_pembayaran
    created_at?: DateTimeFilter<"Order"> | Date | string
    orders_kelas?: Orders_kelasListRelationFilter
    orders_pembayaran?: Orders_pembayaranListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    invoice?: SortOrder
    waktu_transaksi?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
    status_pembayaran?: SortOrder
    created_at?: SortOrder
    orders_kelas?: Orders_kelasOrderByRelationAggregateInput
    orders_pembayaran?: Orders_pembayaranOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    nama?: StringFilter<"Order"> | string
    invoice?: StringFilter<"Order"> | string
    waktu_transaksi?: DateTimeFilter<"Order"> | Date | string
    total_pembayaran?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    harga?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFilter<"Order"> | $Enums.Status_pembayaran
    created_at?: DateTimeFilter<"Order"> | Date | string
    orders_kelas?: Orders_kelasListRelationFilter
    orders_pembayaran?: Orders_pembayaranListRelationFilter
  }, "id">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    invoice?: SortOrder
    waktu_transaksi?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
    status_pembayaran?: SortOrder
    created_at?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Order"> | number
    nama?: StringWithAggregatesFilter<"Order"> | string
    invoice?: StringWithAggregatesFilter<"Order"> | string
    waktu_transaksi?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    total_pembayaran?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    harga?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranWithAggregatesFilter<"Order"> | $Enums.Status_pembayaran
    created_at?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type Orders_kelasWhereInput = {
    AND?: Orders_kelasWhereInput | Orders_kelasWhereInput[]
    OR?: Orders_kelasWhereInput[]
    NOT?: Orders_kelasWhereInput | Orders_kelasWhereInput[]
    id?: IntFilter<"Orders_kelas"> | number
    id_orders?: IntFilter<"Orders_kelas"> | number
    id_kelas_saya?: IntFilter<"Orders_kelas"> | number
    created_at?: DateTimeFilter<"Orders_kelas"> | Date | string
    orders?: XOR<OrderRelationFilter, OrderWhereInput>
    kelas_saya?: XOR<Kelas_sayaRelationFilter, Kelas_sayaWhereInput>
  }

  export type Orders_kelasOrderByWithRelationInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
    orders?: OrderOrderByWithRelationInput
    kelas_saya?: Kelas_sayaOrderByWithRelationInput
  }

  export type Orders_kelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Orders_kelasWhereInput | Orders_kelasWhereInput[]
    OR?: Orders_kelasWhereInput[]
    NOT?: Orders_kelasWhereInput | Orders_kelasWhereInput[]
    id_orders?: IntFilter<"Orders_kelas"> | number
    id_kelas_saya?: IntFilter<"Orders_kelas"> | number
    created_at?: DateTimeFilter<"Orders_kelas"> | Date | string
    orders?: XOR<OrderRelationFilter, OrderWhereInput>
    kelas_saya?: XOR<Kelas_sayaRelationFilter, Kelas_sayaWhereInput>
  }, "id">

  export type Orders_kelasOrderByWithAggregationInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
    _count?: Orders_kelasCountOrderByAggregateInput
    _avg?: Orders_kelasAvgOrderByAggregateInput
    _max?: Orders_kelasMaxOrderByAggregateInput
    _min?: Orders_kelasMinOrderByAggregateInput
    _sum?: Orders_kelasSumOrderByAggregateInput
  }

  export type Orders_kelasScalarWhereWithAggregatesInput = {
    AND?: Orders_kelasScalarWhereWithAggregatesInput | Orders_kelasScalarWhereWithAggregatesInput[]
    OR?: Orders_kelasScalarWhereWithAggregatesInput[]
    NOT?: Orders_kelasScalarWhereWithAggregatesInput | Orders_kelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Orders_kelas"> | number
    id_orders?: IntWithAggregatesFilter<"Orders_kelas"> | number
    id_kelas_saya?: IntWithAggregatesFilter<"Orders_kelas"> | number
    created_at?: DateTimeWithAggregatesFilter<"Orders_kelas"> | Date | string
  }

  export type PembayaranWhereInput = {
    AND?: PembayaranWhereInput | PembayaranWhereInput[]
    OR?: PembayaranWhereInput[]
    NOT?: PembayaranWhereInput | PembayaranWhereInput[]
    id?: IntFilter<"Pembayaran"> | number
    kode?: StringFilter<"Pembayaran"> | string
    nama?: StringFilter<"Pembayaran"> | string
    jenis_pembayaran?: EnumJenis_pembayaranFilter<"Pembayaran"> | $Enums.Jenis_pembayaran
    created_at?: DateTimeFilter<"Pembayaran"> | Date | string
    orders_pembayaran?: Orders_pembayaranListRelationFilter
    transaksi_kelas?: Transaksi_kelasListRelationFilter
  }

  export type PembayaranOrderByWithRelationInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    jenis_pembayaran?: SortOrder
    created_at?: SortOrder
    orders_pembayaran?: Orders_pembayaranOrderByRelationAggregateInput
    transaksi_kelas?: Transaksi_kelasOrderByRelationAggregateInput
  }

  export type PembayaranWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PembayaranWhereInput | PembayaranWhereInput[]
    OR?: PembayaranWhereInput[]
    NOT?: PembayaranWhereInput | PembayaranWhereInput[]
    kode?: StringFilter<"Pembayaran"> | string
    nama?: StringFilter<"Pembayaran"> | string
    jenis_pembayaran?: EnumJenis_pembayaranFilter<"Pembayaran"> | $Enums.Jenis_pembayaran
    created_at?: DateTimeFilter<"Pembayaran"> | Date | string
    orders_pembayaran?: Orders_pembayaranListRelationFilter
    transaksi_kelas?: Transaksi_kelasListRelationFilter
  }, "id">

  export type PembayaranOrderByWithAggregationInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    jenis_pembayaran?: SortOrder
    created_at?: SortOrder
    _count?: PembayaranCountOrderByAggregateInput
    _avg?: PembayaranAvgOrderByAggregateInput
    _max?: PembayaranMaxOrderByAggregateInput
    _min?: PembayaranMinOrderByAggregateInput
    _sum?: PembayaranSumOrderByAggregateInput
  }

  export type PembayaranScalarWhereWithAggregatesInput = {
    AND?: PembayaranScalarWhereWithAggregatesInput | PembayaranScalarWhereWithAggregatesInput[]
    OR?: PembayaranScalarWhereWithAggregatesInput[]
    NOT?: PembayaranScalarWhereWithAggregatesInput | PembayaranScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pembayaran"> | number
    kode?: StringWithAggregatesFilter<"Pembayaran"> | string
    nama?: StringWithAggregatesFilter<"Pembayaran"> | string
    jenis_pembayaran?: EnumJenis_pembayaranWithAggregatesFilter<"Pembayaran"> | $Enums.Jenis_pembayaran
    created_at?: DateTimeWithAggregatesFilter<"Pembayaran"> | Date | string
  }

  export type Orders_pembayaranWhereInput = {
    AND?: Orders_pembayaranWhereInput | Orders_pembayaranWhereInput[]
    OR?: Orders_pembayaranWhereInput[]
    NOT?: Orders_pembayaranWhereInput | Orders_pembayaranWhereInput[]
    id?: IntFilter<"Orders_pembayaran"> | number
    id_orders?: IntFilter<"Orders_pembayaran"> | number
    id_pembayaran?: IntFilter<"Orders_pembayaran"> | number
    created_at?: DateTimeFilter<"Orders_pembayaran"> | Date | string
    orders?: XOR<OrderRelationFilter, OrderWhereInput>
    pembayaran?: XOR<PembayaranRelationFilter, PembayaranWhereInput>
  }

  export type Orders_pembayaranOrderByWithRelationInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
    orders?: OrderOrderByWithRelationInput
    pembayaran?: PembayaranOrderByWithRelationInput
  }

  export type Orders_pembayaranWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Orders_pembayaranWhereInput | Orders_pembayaranWhereInput[]
    OR?: Orders_pembayaranWhereInput[]
    NOT?: Orders_pembayaranWhereInput | Orders_pembayaranWhereInput[]
    id_orders?: IntFilter<"Orders_pembayaran"> | number
    id_pembayaran?: IntFilter<"Orders_pembayaran"> | number
    created_at?: DateTimeFilter<"Orders_pembayaran"> | Date | string
    orders?: XOR<OrderRelationFilter, OrderWhereInput>
    pembayaran?: XOR<PembayaranRelationFilter, PembayaranWhereInput>
  }, "id">

  export type Orders_pembayaranOrderByWithAggregationInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
    _count?: Orders_pembayaranCountOrderByAggregateInput
    _avg?: Orders_pembayaranAvgOrderByAggregateInput
    _max?: Orders_pembayaranMaxOrderByAggregateInput
    _min?: Orders_pembayaranMinOrderByAggregateInput
    _sum?: Orders_pembayaranSumOrderByAggregateInput
  }

  export type Orders_pembayaranScalarWhereWithAggregatesInput = {
    AND?: Orders_pembayaranScalarWhereWithAggregatesInput | Orders_pembayaranScalarWhereWithAggregatesInput[]
    OR?: Orders_pembayaranScalarWhereWithAggregatesInput[]
    NOT?: Orders_pembayaranScalarWhereWithAggregatesInput | Orders_pembayaranScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Orders_pembayaran"> | number
    id_orders?: IntWithAggregatesFilter<"Orders_pembayaran"> | number
    id_pembayaran?: IntWithAggregatesFilter<"Orders_pembayaran"> | number
    created_at?: DateTimeWithAggregatesFilter<"Orders_pembayaran"> | Date | string
  }

  export type PretestWhereInput = {
    AND?: PretestWhereInput | PretestWhereInput[]
    OR?: PretestWhereInput[]
    NOT?: PretestWhereInput | PretestWhereInput[]
    id?: IntFilter<"Pretest"> | number
    jdudul_pertanyaan?: StringFilter<"Pretest"> | string
    list_soal?: IntFilter<"Pretest"> | number
    opsi_jawaban?: StringFilter<"Pretest"> | string
    pertanyaan?: StringFilter<"Pretest"> | string
    created_at?: DateTimeFilter<"Pretest"> | Date | string
    pretest_kelas?: Pretest_kelasListRelationFilter
    review_pretest?: Review_pretestListRelationFilter
  }

  export type PretestOrderByWithRelationInput = {
    id?: SortOrder
    jdudul_pertanyaan?: SortOrder
    list_soal?: SortOrder
    opsi_jawaban?: SortOrder
    pertanyaan?: SortOrder
    created_at?: SortOrder
    pretest_kelas?: Pretest_kelasOrderByRelationAggregateInput
    review_pretest?: Review_pretestOrderByRelationAggregateInput
  }

  export type PretestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PretestWhereInput | PretestWhereInput[]
    OR?: PretestWhereInput[]
    NOT?: PretestWhereInput | PretestWhereInput[]
    jdudul_pertanyaan?: StringFilter<"Pretest"> | string
    list_soal?: IntFilter<"Pretest"> | number
    opsi_jawaban?: StringFilter<"Pretest"> | string
    pertanyaan?: StringFilter<"Pretest"> | string
    created_at?: DateTimeFilter<"Pretest"> | Date | string
    pretest_kelas?: Pretest_kelasListRelationFilter
    review_pretest?: Review_pretestListRelationFilter
  }, "id">

  export type PretestOrderByWithAggregationInput = {
    id?: SortOrder
    jdudul_pertanyaan?: SortOrder
    list_soal?: SortOrder
    opsi_jawaban?: SortOrder
    pertanyaan?: SortOrder
    created_at?: SortOrder
    _count?: PretestCountOrderByAggregateInput
    _avg?: PretestAvgOrderByAggregateInput
    _max?: PretestMaxOrderByAggregateInput
    _min?: PretestMinOrderByAggregateInput
    _sum?: PretestSumOrderByAggregateInput
  }

  export type PretestScalarWhereWithAggregatesInput = {
    AND?: PretestScalarWhereWithAggregatesInput | PretestScalarWhereWithAggregatesInput[]
    OR?: PretestScalarWhereWithAggregatesInput[]
    NOT?: PretestScalarWhereWithAggregatesInput | PretestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pretest"> | number
    jdudul_pertanyaan?: StringWithAggregatesFilter<"Pretest"> | string
    list_soal?: IntWithAggregatesFilter<"Pretest"> | number
    opsi_jawaban?: StringWithAggregatesFilter<"Pretest"> | string
    pertanyaan?: StringWithAggregatesFilter<"Pretest"> | string
    created_at?: DateTimeWithAggregatesFilter<"Pretest"> | Date | string
  }

  export type Pretest_kelasWhereInput = {
    AND?: Pretest_kelasWhereInput | Pretest_kelasWhereInput[]
    OR?: Pretest_kelasWhereInput[]
    NOT?: Pretest_kelasWhereInput | Pretest_kelasWhereInput[]
    id?: IntFilter<"Pretest_kelas"> | number
    id_pretest?: IntFilter<"Pretest_kelas"> | number
    id_kelas_saya?: IntFilter<"Pretest_kelas"> | number
    created_at?: DateTimeFilter<"Pretest_kelas"> | Date | string
    pretest?: XOR<PretestRelationFilter, PretestWhereInput>
    kelas_saya?: XOR<Kelas_sayaRelationFilter, Kelas_sayaWhereInput>
  }

  export type Pretest_kelasOrderByWithRelationInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
    pretest?: PretestOrderByWithRelationInput
    kelas_saya?: Kelas_sayaOrderByWithRelationInput
  }

  export type Pretest_kelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Pretest_kelasWhereInput | Pretest_kelasWhereInput[]
    OR?: Pretest_kelasWhereInput[]
    NOT?: Pretest_kelasWhereInput | Pretest_kelasWhereInput[]
    id_pretest?: IntFilter<"Pretest_kelas"> | number
    id_kelas_saya?: IntFilter<"Pretest_kelas"> | number
    created_at?: DateTimeFilter<"Pretest_kelas"> | Date | string
    pretest?: XOR<PretestRelationFilter, PretestWhereInput>
    kelas_saya?: XOR<Kelas_sayaRelationFilter, Kelas_sayaWhereInput>
  }, "id">

  export type Pretest_kelasOrderByWithAggregationInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
    _count?: Pretest_kelasCountOrderByAggregateInput
    _avg?: Pretest_kelasAvgOrderByAggregateInput
    _max?: Pretest_kelasMaxOrderByAggregateInput
    _min?: Pretest_kelasMinOrderByAggregateInput
    _sum?: Pretest_kelasSumOrderByAggregateInput
  }

  export type Pretest_kelasScalarWhereWithAggregatesInput = {
    AND?: Pretest_kelasScalarWhereWithAggregatesInput | Pretest_kelasScalarWhereWithAggregatesInput[]
    OR?: Pretest_kelasScalarWhereWithAggregatesInput[]
    NOT?: Pretest_kelasScalarWhereWithAggregatesInput | Pretest_kelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pretest_kelas"> | number
    id_pretest?: IntWithAggregatesFilter<"Pretest_kelas"> | number
    id_kelas_saya?: IntWithAggregatesFilter<"Pretest_kelas"> | number
    created_at?: DateTimeWithAggregatesFilter<"Pretest_kelas"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: IntFilter<"Review"> | number
    rating?: DecimalFilter<"Review"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFilter<"Review"> | string
    created_at?: DateTimeFilter<"Review"> | Date | string
    review_pretest?: Review_pretestListRelationFilter
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    rating?: SortOrder
    deskripsi?: SortOrder
    created_at?: SortOrder
    review_pretest?: Review_pretestOrderByRelationAggregateInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    rating?: DecimalFilter<"Review"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFilter<"Review"> | string
    created_at?: DateTimeFilter<"Review"> | Date | string
    review_pretest?: Review_pretestListRelationFilter
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    rating?: SortOrder
    deskripsi?: SortOrder
    created_at?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review"> | number
    rating?: DecimalWithAggregatesFilter<"Review"> | Decimal | DecimalJsLike | number | string
    deskripsi?: StringWithAggregatesFilter<"Review"> | string
    created_at?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type Review_pretestWhereInput = {
    AND?: Review_pretestWhereInput | Review_pretestWhereInput[]
    OR?: Review_pretestWhereInput[]
    NOT?: Review_pretestWhereInput | Review_pretestWhereInput[]
    id?: IntFilter<"Review_pretest"> | number
    id_pretest?: IntFilter<"Review_pretest"> | number
    id_review?: IntFilter<"Review_pretest"> | number
    created_at?: DateTimeFilter<"Review_pretest"> | Date | string
    pretest?: XOR<PretestRelationFilter, PretestWhereInput>
    review?: XOR<ReviewRelationFilter, ReviewWhereInput>
  }

  export type Review_pretestOrderByWithRelationInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
    created_at?: SortOrder
    pretest?: PretestOrderByWithRelationInput
    review?: ReviewOrderByWithRelationInput
  }

  export type Review_pretestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Review_pretestWhereInput | Review_pretestWhereInput[]
    OR?: Review_pretestWhereInput[]
    NOT?: Review_pretestWhereInput | Review_pretestWhereInput[]
    id_pretest?: IntFilter<"Review_pretest"> | number
    id_review?: IntFilter<"Review_pretest"> | number
    created_at?: DateTimeFilter<"Review_pretest"> | Date | string
    pretest?: XOR<PretestRelationFilter, PretestWhereInput>
    review?: XOR<ReviewRelationFilter, ReviewWhereInput>
  }, "id">

  export type Review_pretestOrderByWithAggregationInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
    created_at?: SortOrder
    _count?: Review_pretestCountOrderByAggregateInput
    _avg?: Review_pretestAvgOrderByAggregateInput
    _max?: Review_pretestMaxOrderByAggregateInput
    _min?: Review_pretestMinOrderByAggregateInput
    _sum?: Review_pretestSumOrderByAggregateInput
  }

  export type Review_pretestScalarWhereWithAggregatesInput = {
    AND?: Review_pretestScalarWhereWithAggregatesInput | Review_pretestScalarWhereWithAggregatesInput[]
    OR?: Review_pretestScalarWhereWithAggregatesInput[]
    NOT?: Review_pretestScalarWhereWithAggregatesInput | Review_pretestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review_pretest"> | number
    id_pretest?: IntWithAggregatesFilter<"Review_pretest"> | number
    id_review?: IntWithAggregatesFilter<"Review_pretest"> | number
    created_at?: DateTimeWithAggregatesFilter<"Review_pretest"> | Date | string
  }

  export type SilabusWhereInput = {
    AND?: SilabusWhereInput | SilabusWhereInput[]
    OR?: SilabusWhereInput[]
    NOT?: SilabusWhereInput | SilabusWhereInput[]
    id?: IntFilter<"Silabus"> | number
    id_kelas?: IntFilter<"Silabus"> | number
    id_modul?: IntFilter<"Silabus"> | number
    created_at?: DateTimeFilter<"Silabus"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    modul?: XOR<Modul_kelasRelationFilter, Modul_kelasWhereInput>
  }

  export type SilabusOrderByWithRelationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
    created_at?: SortOrder
    kelas?: KelasOrderByWithRelationInput
    modul?: Modul_kelasOrderByWithRelationInput
  }

  export type SilabusWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SilabusWhereInput | SilabusWhereInput[]
    OR?: SilabusWhereInput[]
    NOT?: SilabusWhereInput | SilabusWhereInput[]
    id_kelas?: IntFilter<"Silabus"> | number
    id_modul?: IntFilter<"Silabus"> | number
    created_at?: DateTimeFilter<"Silabus"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    modul?: XOR<Modul_kelasRelationFilter, Modul_kelasWhereInput>
  }, "id">

  export type SilabusOrderByWithAggregationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
    created_at?: SortOrder
    _count?: SilabusCountOrderByAggregateInput
    _avg?: SilabusAvgOrderByAggregateInput
    _max?: SilabusMaxOrderByAggregateInput
    _min?: SilabusMinOrderByAggregateInput
    _sum?: SilabusSumOrderByAggregateInput
  }

  export type SilabusScalarWhereWithAggregatesInput = {
    AND?: SilabusScalarWhereWithAggregatesInput | SilabusScalarWhereWithAggregatesInput[]
    OR?: SilabusScalarWhereWithAggregatesInput[]
    NOT?: SilabusScalarWhereWithAggregatesInput | SilabusScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Silabus"> | number
    id_kelas?: IntWithAggregatesFilter<"Silabus"> | number
    id_modul?: IntWithAggregatesFilter<"Silabus"> | number
    created_at?: DateTimeWithAggregatesFilter<"Silabus"> | Date | string
  }

  export type Transaksi_kelasWhereInput = {
    AND?: Transaksi_kelasWhereInput | Transaksi_kelasWhereInput[]
    OR?: Transaksi_kelasWhereInput[]
    NOT?: Transaksi_kelasWhereInput | Transaksi_kelasWhereInput[]
    id?: IntFilter<"Transaksi_kelas"> | number
    id_kelas?: IntFilter<"Transaksi_kelas"> | number
    id_pembayaran?: IntFilter<"Transaksi_kelas"> | number
    created_at?: DateTimeFilter<"Transaksi_kelas"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    pembayaran?: XOR<PembayaranRelationFilter, PembayaranWhereInput>
  }

  export type Transaksi_kelasOrderByWithRelationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
    kelas?: KelasOrderByWithRelationInput
    pembayaran?: PembayaranOrderByWithRelationInput
  }

  export type Transaksi_kelasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Transaksi_kelasWhereInput | Transaksi_kelasWhereInput[]
    OR?: Transaksi_kelasWhereInput[]
    NOT?: Transaksi_kelasWhereInput | Transaksi_kelasWhereInput[]
    id_kelas?: IntFilter<"Transaksi_kelas"> | number
    id_pembayaran?: IntFilter<"Transaksi_kelas"> | number
    created_at?: DateTimeFilter<"Transaksi_kelas"> | Date | string
    kelas?: XOR<KelasRelationFilter, KelasWhereInput>
    pembayaran?: XOR<PembayaranRelationFilter, PembayaranWhereInput>
  }, "id">

  export type Transaksi_kelasOrderByWithAggregationInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
    _count?: Transaksi_kelasCountOrderByAggregateInput
    _avg?: Transaksi_kelasAvgOrderByAggregateInput
    _max?: Transaksi_kelasMaxOrderByAggregateInput
    _min?: Transaksi_kelasMinOrderByAggregateInput
    _sum?: Transaksi_kelasSumOrderByAggregateInput
  }

  export type Transaksi_kelasScalarWhereWithAggregatesInput = {
    AND?: Transaksi_kelasScalarWhereWithAggregatesInput | Transaksi_kelasScalarWhereWithAggregatesInput[]
    OR?: Transaksi_kelasScalarWhereWithAggregatesInput[]
    NOT?: Transaksi_kelasScalarWhereWithAggregatesInput | Transaksi_kelasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transaksi_kelas"> | number
    id_kelas?: IntWithAggregatesFilter<"Transaksi_kelas"> | number
    id_pembayaran?: IntWithAggregatesFilter<"Transaksi_kelas"> | number
    created_at?: DateTimeWithAggregatesFilter<"Transaksi_kelas"> | Date | string
  }

  export type UserCreateInput = {
    fullname?: string | null
    username: string
    email: string
    password: string
    emailToken?: string | null
    isVerified?: boolean | null
  }

  export type UserUncheckedCreateInput = {
    id?: number
    fullname?: string | null
    username: string
    email: string
    password: string
    emailToken?: string | null
    isVerified?: boolean | null
  }

  export type UserUpdateInput = {
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    emailToken?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    emailToken?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UserCreateManyInput = {
    id?: number
    fullname?: string | null
    username: string
    email: string
    password: string
    emailToken?: string | null
    isVerified?: boolean | null
  }

  export type UserUpdateManyMutationInput = {
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    emailToken?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fullname?: NullableStringFieldUpdateOperationsInput | string | null
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    emailToken?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TutorCreateInput = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at?: Date | string
    mengajar?: MengajarCreateNestedManyWithoutTutorInput
  }

  export type TutorUncheckedCreateInput = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at?: Date | string
    mengajar?: MengajarUncheckedCreateNestedManyWithoutTutorInput
  }

  export type TutorUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    mengajar?: MengajarUpdateManyWithoutTutorNestedInput
  }

  export type TutorUncheckedUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    mengajar?: MengajarUncheckedUpdateManyWithoutTutorNestedInput
  }

  export type TutorCreateManyInput = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at?: Date | string
  }

  export type TutorUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TutorUncheckedUpdateManyInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KelasCreateInput = {
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiCreateNestedManyWithoutKelasInput
    mengajar?: MengajarCreateNestedManyWithoutKelasInput
    silabus?: SilabusCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutKelasInput
  }

  export type KelasUncheckedCreateInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKelasInput
    mengajar?: MengajarUncheckedCreateNestedManyWithoutKelasInput
    silabus?: SilabusUncheckedCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutKelasInput
  }

  export type KelasUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutKelasNestedInput
  }

  export type KelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUncheckedUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUncheckedUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutKelasNestedInput
  }

  export type KelasCreateManyInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
  }

  export type KelasUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelasCreateInput = {
    nama: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiCreateNestedManyWithoutKategori_kelasInput
  }

  export type Kategori_kelasUncheckedCreateInput = {
    id?: number
    nama: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKategori_kelasInput
  }

  export type Kategori_kelasUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUpdateManyWithoutKategori_kelasNestedInput
  }

  export type Kategori_kelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedUpdateManyWithoutKategori_kelasNestedInput
  }

  export type Kategori_kelasCreateManyInput = {
    id?: number
    nama: string
    created_at?: Date | string
  }

  export type Kategori_kelasUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiCreateInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutKategori_kelas_relasiInput
    kategori_kelas: Kategori_kelasCreateNestedOneWithoutKategori_kelas_relasiInput
  }

  export type Kategori_kelas_relasiUncheckedCreateInput = {
    id?: number
    id_kelas: number
    id_kategori_kelas: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput
    kategori_kelas?: Kategori_kelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput
  }

  export type Kategori_kelas_relasiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_kategori_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiCreateManyInput = {
    id?: number
    id_kelas: number
    id_kategori_kelas: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_kategori_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kelas_sayaCreateInput = {
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    orders_kelas?: Orders_kelasCreateNestedManyWithoutKelas_sayaInput
    pretest_kelas?: Pretest_kelasCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaUncheckedCreateInput = {
    id?: number
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    orders_kelas?: Orders_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput
    pretest_kelas?: Pretest_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaUpdateInput = {
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUpdateManyWithoutKelas_sayaNestedInput
    pretest_kelas?: Pretest_kelasUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Kelas_sayaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput
    pretest_kelas?: Pretest_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Kelas_sayaCreateManyInput = {
    id?: number
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
  }

  export type Kelas_sayaUpdateManyMutationInput = {
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kelas_sayaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialCreateInput = {
    durasi: Date | string
    kuis: string
    rangkuman: string
    created_at?: Date | string
    modul_material?: Modul_materialCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateInput = {
    id?: number
    durasi: Date | string
    kuis: string
    rangkuman: string
    created_at?: Date | string
    modul_material?: Modul_materialUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUpdateInput = {
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialCreateManyInput = {
    id?: number
    durasi: Date | string
    kuis: string
    rangkuman: string
    created_at?: Date | string
  }

  export type MaterialUpdateManyMutationInput = {
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarCreateInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutMengajarInput
    tutor: TutorCreateNestedOneWithoutMengajarInput
  }

  export type MengajarUncheckedCreateInput = {
    id?: number
    id_kelas: number
    email_tutor: string
    created_at?: Date | string
  }

  export type MengajarUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutMengajarNestedInput
    tutor?: TutorUpdateOneRequiredWithoutMengajarNestedInput
  }

  export type MengajarUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    email_tutor?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarCreateManyInput = {
    id?: number
    id_kelas: number
    email_tutor: string
    created_at?: Date | string
  }

  export type MengajarUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    email_tutor?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_kelasCreateInput = {
    nama: string
    created_at?: Date | string
    modul_material?: Modul_materialCreateNestedManyWithoutModul_kelasInput
    silabus?: SilabusCreateNestedManyWithoutModulInput
  }

  export type Modul_kelasUncheckedCreateInput = {
    id?: number
    nama: string
    created_at?: Date | string
    modul_material?: Modul_materialUncheckedCreateNestedManyWithoutModul_kelasInput
    silabus?: SilabusUncheckedCreateNestedManyWithoutModulInput
  }

  export type Modul_kelasUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUpdateManyWithoutModul_kelasNestedInput
    silabus?: SilabusUpdateManyWithoutModulNestedInput
  }

  export type Modul_kelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUncheckedUpdateManyWithoutModul_kelasNestedInput
    silabus?: SilabusUncheckedUpdateManyWithoutModulNestedInput
  }

  export type Modul_kelasCreateManyInput = {
    id?: number
    nama: string
    created_at?: Date | string
  }

  export type Modul_kelasUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_kelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_materialCreateInput = {
    material: MaterialCreateNestedOneWithoutModul_materialInput
    modul_kelas: Modul_kelasCreateNestedOneWithoutModul_materialInput
  }

  export type Modul_materialUncheckedCreateInput = {
    id?: number
    id_material: number
    id_modul_kelas: number
  }

  export type Modul_materialUpdateInput = {
    material?: MaterialUpdateOneRequiredWithoutModul_materialNestedInput
    modul_kelas?: Modul_kelasUpdateOneRequiredWithoutModul_materialNestedInput
  }

  export type Modul_materialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_material?: IntFieldUpdateOperationsInput | number
    id_modul_kelas?: IntFieldUpdateOperationsInput | number
  }

  export type Modul_materialCreateManyInput = {
    id?: number
    id_material: number
    id_modul_kelas: number
  }

  export type Modul_materialUpdateManyMutationInput = {

  }

  export type Modul_materialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_material?: IntFieldUpdateOperationsInput | number
    id_modul_kelas?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCreateInput = {
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_kelas?: Orders_kelasCreateNestedManyWithoutOrdersInput
    orders_pembayaran?: Orders_pembayaranCreateNestedManyWithoutOrdersInput
  }

  export type OrderUncheckedCreateInput = {
    id?: number
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_kelas?: Orders_kelasUncheckedCreateNestedManyWithoutOrdersInput
    orders_pembayaran?: Orders_pembayaranUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type OrderUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUpdateManyWithoutOrdersNestedInput
    orders_pembayaran?: Orders_pembayaranUpdateManyWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUncheckedUpdateManyWithoutOrdersNestedInput
    orders_pembayaran?: Orders_pembayaranUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type OrderCreateManyInput = {
    id?: number
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasCreateInput = {
    created_at?: Date | string
    orders: OrderCreateNestedOneWithoutOrders_kelasInput
    kelas_saya: Kelas_sayaCreateNestedOneWithoutOrders_kelasInput
  }

  export type Orders_kelasUncheckedCreateInput = {
    id?: number
    id_orders: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Orders_kelasUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateOneRequiredWithoutOrders_kelasNestedInput
    kelas_saya?: Kelas_sayaUpdateOneRequiredWithoutOrders_kelasNestedInput
  }

  export type Orders_kelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasCreateManyInput = {
    id?: number
    id_orders: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Orders_kelasUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PembayaranCreateInput = {
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranCreateNestedManyWithoutPembayaranInput
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranUncheckedCreateInput = {
    id?: number
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedCreateNestedManyWithoutPembayaranInput
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUpdateManyWithoutPembayaranNestedInput
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutPembayaranNestedInput
  }

  export type PembayaranUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedUpdateManyWithoutPembayaranNestedInput
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutPembayaranNestedInput
  }

  export type PembayaranCreateManyInput = {
    id?: number
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
  }

  export type PembayaranUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PembayaranUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranCreateInput = {
    created_at?: Date | string
    orders: OrderCreateNestedOneWithoutOrders_pembayaranInput
    pembayaran: PembayaranCreateNestedOneWithoutOrders_pembayaranInput
  }

  export type Orders_pembayaranUncheckedCreateInput = {
    id?: number
    id_orders: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Orders_pembayaranUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateOneRequiredWithoutOrders_pembayaranNestedInput
    pembayaran?: PembayaranUpdateOneRequiredWithoutOrders_pembayaranNestedInput
  }

  export type Orders_pembayaranUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranCreateManyInput = {
    id?: number
    id_orders: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Orders_pembayaranUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PretestCreateInput = {
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasCreateNestedManyWithoutPretestInput
    review_pretest?: Review_pretestCreateNestedManyWithoutPretestInput
  }

  export type PretestUncheckedCreateInput = {
    id?: number
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasUncheckedCreateNestedManyWithoutPretestInput
    review_pretest?: Review_pretestUncheckedCreateNestedManyWithoutPretestInput
  }

  export type PretestUpdateInput = {
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUpdateManyWithoutPretestNestedInput
    review_pretest?: Review_pretestUpdateManyWithoutPretestNestedInput
  }

  export type PretestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUncheckedUpdateManyWithoutPretestNestedInput
    review_pretest?: Review_pretestUncheckedUpdateManyWithoutPretestNestedInput
  }

  export type PretestCreateManyInput = {
    id?: number
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
  }

  export type PretestUpdateManyMutationInput = {
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PretestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasCreateInput = {
    created_at?: Date | string
    pretest: PretestCreateNestedOneWithoutPretest_kelasInput
    kelas_saya: Kelas_sayaCreateNestedOneWithoutPretest_kelasInput
  }

  export type Pretest_kelasUncheckedCreateInput = {
    id?: number
    id_pretest: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Pretest_kelasUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest?: PretestUpdateOneRequiredWithoutPretest_kelasNestedInput
    kelas_saya?: Kelas_sayaUpdateOneRequiredWithoutPretest_kelasNestedInput
  }

  export type Pretest_kelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasCreateManyInput = {
    id?: number
    id_pretest: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Pretest_kelasUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    rating: Decimal | DecimalJsLike | number | string
    deskripsi: string
    created_at?: Date | string
    review_pretest?: Review_pretestCreateNestedManyWithoutReviewInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: number
    rating: Decimal | DecimalJsLike | number | string
    deskripsi: string
    created_at?: Date | string
    review_pretest?: Review_pretestUncheckedCreateNestedManyWithoutReviewInput
  }

  export type ReviewUpdateInput = {
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    review_pretest?: Review_pretestUpdateManyWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    review_pretest?: Review_pretestUncheckedUpdateManyWithoutReviewNestedInput
  }

  export type ReviewCreateManyInput = {
    id?: number
    rating: Decimal | DecimalJsLike | number | string
    deskripsi: string
    created_at?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestCreateInput = {
    created_at?: Date | string
    pretest: PretestCreateNestedOneWithoutReview_pretestInput
    review: ReviewCreateNestedOneWithoutReview_pretestInput
  }

  export type Review_pretestUncheckedCreateInput = {
    id?: number
    id_pretest: number
    id_review: number
    created_at?: Date | string
  }

  export type Review_pretestUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest?: PretestUpdateOneRequiredWithoutReview_pretestNestedInput
    review?: ReviewUpdateOneRequiredWithoutReview_pretestNestedInput
  }

  export type Review_pretestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    id_review?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestCreateManyInput = {
    id?: number
    id_pretest: number
    id_review: number
    created_at?: Date | string
  }

  export type Review_pretestUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    id_review?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusCreateInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutSilabusInput
    modul: Modul_kelasCreateNestedOneWithoutSilabusInput
  }

  export type SilabusUncheckedCreateInput = {
    id?: number
    id_kelas: number
    id_modul: number
    created_at?: Date | string
  }

  export type SilabusUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutSilabusNestedInput
    modul?: Modul_kelasUpdateOneRequiredWithoutSilabusNestedInput
  }

  export type SilabusUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_modul?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusCreateManyInput = {
    id?: number
    id_kelas: number
    id_modul: number
    created_at?: Date | string
  }

  export type SilabusUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_modul?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasCreateInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutTransaksi_kelasInput
    pembayaran: PembayaranCreateNestedOneWithoutTransaksi_kelasInput
  }

  export type Transaksi_kelasUncheckedCreateInput = {
    id?: number
    id_kelas: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Transaksi_kelasUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutTransaksi_kelasNestedInput
    pembayaran?: PembayaranUpdateOneRequiredWithoutTransaksi_kelasNestedInput
  }

  export type Transaksi_kelasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasCreateManyInput = {
    id?: number
    id_kelas: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Transaksi_kelasUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    emailToken?: SortOrder
    isVerified?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    emailToken?: SortOrder
    isVerified?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    emailToken?: SortOrder
    isVerified?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type MengajarListRelationFilter = {
    every?: MengajarWhereInput
    some?: MengajarWhereInput
    none?: MengajarWhereInput
  }

  export type MengajarOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TutorCountOrderByAggregateInput = {
    nama?: SortOrder
    email?: SortOrder
    password?: SortOrder
    jabatan?: SortOrder
    perusahaan?: SortOrder
    created_at?: SortOrder
  }

  export type TutorMaxOrderByAggregateInput = {
    nama?: SortOrder
    email?: SortOrder
    password?: SortOrder
    jabatan?: SortOrder
    perusahaan?: SortOrder
    created_at?: SortOrder
  }

  export type TutorMinOrderByAggregateInput = {
    nama?: SortOrder
    email?: SortOrder
    password?: SortOrder
    jabatan?: SortOrder
    perusahaan?: SortOrder
    created_at?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Kategori_kelas_relasiListRelationFilter = {
    every?: Kategori_kelas_relasiWhereInput
    some?: Kategori_kelas_relasiWhereInput
    none?: Kategori_kelas_relasiWhereInput
  }

  export type SilabusListRelationFilter = {
    every?: SilabusWhereInput
    some?: SilabusWhereInput
    none?: SilabusWhereInput
  }

  export type Transaksi_kelasListRelationFilter = {
    every?: Transaksi_kelasWhereInput
    some?: Transaksi_kelasWhereInput
    none?: Transaksi_kelasWhereInput
  }

  export type Kategori_kelas_relasiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SilabusOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Transaksi_kelasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KelasCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    deskripsi?: SortOrder
    background_foto?: SortOrder
    video?: SortOrder
    created_at?: SortOrder
  }

  export type KelasAvgOrderByAggregateInput = {
    id?: SortOrder
    harga?: SortOrder
  }

  export type KelasMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    deskripsi?: SortOrder
    background_foto?: SortOrder
    video?: SortOrder
    created_at?: SortOrder
  }

  export type KelasMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    deskripsi?: SortOrder
    background_foto?: SortOrder
    video?: SortOrder
    created_at?: SortOrder
  }

  export type KelasSumOrderByAggregateInput = {
    id?: SortOrder
    harga?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Kategori_kelasCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Kategori_kelasMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelasMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type KelasRelationFilter = {
    is?: KelasWhereInput
    isNot?: KelasWhereInput
  }

  export type Kategori_kelasRelationFilter = {
    is?: Kategori_kelasWhereInput
    isNot?: Kategori_kelasWhereInput
  }

  export type Kategori_kelas_relasiCountOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelas_relasiAvgOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
  }

  export type Kategori_kelas_relasiMaxOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelas_relasiMinOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kategori_kelas_relasiSumOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_kategori_kelas?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumStatus_kelasFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_kelas | EnumStatus_kelasFieldRefInput<$PrismaModel>
    in?: $Enums.Status_kelas[]
    notIn?: $Enums.Status_kelas[]
    not?: NestedEnumStatus_kelasFilter<$PrismaModel> | $Enums.Status_kelas
  }

  export type Orders_kelasListRelationFilter = {
    every?: Orders_kelasWhereInput
    some?: Orders_kelasWhereInput
    none?: Orders_kelasWhereInput
  }

  export type Pretest_kelasListRelationFilter = {
    every?: Pretest_kelasWhereInput
    some?: Pretest_kelasWhereInput
    none?: Pretest_kelasWhereInput
  }

  export type Orders_kelasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Pretest_kelasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Kelas_sayaCountOrderByAggregateInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
    status_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kelas_sayaAvgOrderByAggregateInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
  }

  export type Kelas_sayaMaxOrderByAggregateInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
    status_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kelas_sayaMinOrderByAggregateInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
    status_kelas?: SortOrder
    created_at?: SortOrder
  }

  export type Kelas_sayaSumOrderByAggregateInput = {
    id?: SortOrder
    progres_kelas?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumStatus_kelasWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_kelas | EnumStatus_kelasFieldRefInput<$PrismaModel>
    in?: $Enums.Status_kelas[]
    notIn?: $Enums.Status_kelas[]
    not?: NestedEnumStatus_kelasWithAggregatesFilter<$PrismaModel> | $Enums.Status_kelas
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_kelasFilter<$PrismaModel>
    _max?: NestedEnumStatus_kelasFilter<$PrismaModel>
  }

  export type Modul_materialListRelationFilter = {
    every?: Modul_materialWhereInput
    some?: Modul_materialWhereInput
    none?: Modul_materialWhereInput
  }

  export type Modul_materialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialCountOrderByAggregateInput = {
    id?: SortOrder
    durasi?: SortOrder
    kuis?: SortOrder
    rangkuman?: SortOrder
    created_at?: SortOrder
  }

  export type MaterialAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MaterialMaxOrderByAggregateInput = {
    id?: SortOrder
    durasi?: SortOrder
    kuis?: SortOrder
    rangkuman?: SortOrder
    created_at?: SortOrder
  }

  export type MaterialMinOrderByAggregateInput = {
    id?: SortOrder
    durasi?: SortOrder
    kuis?: SortOrder
    rangkuman?: SortOrder
    created_at?: SortOrder
  }

  export type MaterialSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TutorRelationFilter = {
    is?: TutorWhereInput
    isNot?: TutorWhereInput
  }

  export type MengajarCountOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    email_tutor?: SortOrder
    created_at?: SortOrder
  }

  export type MengajarAvgOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
  }

  export type MengajarMaxOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    email_tutor?: SortOrder
    created_at?: SortOrder
  }

  export type MengajarMinOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    email_tutor?: SortOrder
    created_at?: SortOrder
  }

  export type MengajarSumOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
  }

  export type Modul_kelasCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Modul_kelasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Modul_kelasMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Modul_kelasMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    created_at?: SortOrder
  }

  export type Modul_kelasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MaterialRelationFilter = {
    is?: MaterialWhereInput
    isNot?: MaterialWhereInput
  }

  export type Modul_kelasRelationFilter = {
    is?: Modul_kelasWhereInput
    isNot?: Modul_kelasWhereInput
  }

  export type Modul_materialCountOrderByAggregateInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
  }

  export type Modul_materialAvgOrderByAggregateInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
  }

  export type Modul_materialMaxOrderByAggregateInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
  }

  export type Modul_materialMinOrderByAggregateInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
  }

  export type Modul_materialSumOrderByAggregateInput = {
    id?: SortOrder
    id_material?: SortOrder
    id_modul_kelas?: SortOrder
  }

  export type EnumStatus_pembayaranFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_pembayaran | EnumStatus_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Status_pembayaran[]
    notIn?: $Enums.Status_pembayaran[]
    not?: NestedEnumStatus_pembayaranFilter<$PrismaModel> | $Enums.Status_pembayaran
  }

  export type Orders_pembayaranListRelationFilter = {
    every?: Orders_pembayaranWhereInput
    some?: Orders_pembayaranWhereInput
    none?: Orders_pembayaranWhereInput
  }

  export type Orders_pembayaranOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    invoice?: SortOrder
    waktu_transaksi?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
    status_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    id?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    invoice?: SortOrder
    waktu_transaksi?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
    status_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    invoice?: SortOrder
    waktu_transaksi?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
    status_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    id?: SortOrder
    total_pembayaran?: SortOrder
    harga?: SortOrder
  }

  export type EnumStatus_pembayaranWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_pembayaran | EnumStatus_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Status_pembayaran[]
    notIn?: $Enums.Status_pembayaran[]
    not?: NestedEnumStatus_pembayaranWithAggregatesFilter<$PrismaModel> | $Enums.Status_pembayaran
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_pembayaranFilter<$PrismaModel>
    _max?: NestedEnumStatus_pembayaranFilter<$PrismaModel>
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type Kelas_sayaRelationFilter = {
    is?: Kelas_sayaWhereInput
    isNot?: Kelas_sayaWhereInput
  }

  export type Orders_kelasCountOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_kelasAvgOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
  }

  export type Orders_kelasMaxOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_kelasMinOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_kelasSumOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_kelas_saya?: SortOrder
  }

  export type EnumJenis_pembayaranFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenis_pembayaran | EnumJenis_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Jenis_pembayaran[]
    notIn?: $Enums.Jenis_pembayaran[]
    not?: NestedEnumJenis_pembayaranFilter<$PrismaModel> | $Enums.Jenis_pembayaran
  }

  export type PembayaranCountOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    jenis_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type PembayaranAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PembayaranMaxOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    jenis_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type PembayaranMinOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    jenis_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type PembayaranSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumJenis_pembayaranWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenis_pembayaran | EnumJenis_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Jenis_pembayaran[]
    notIn?: $Enums.Jenis_pembayaran[]
    not?: NestedEnumJenis_pembayaranWithAggregatesFilter<$PrismaModel> | $Enums.Jenis_pembayaran
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenis_pembayaranFilter<$PrismaModel>
    _max?: NestedEnumJenis_pembayaranFilter<$PrismaModel>
  }

  export type PembayaranRelationFilter = {
    is?: PembayaranWhereInput
    isNot?: PembayaranWhereInput
  }

  export type Orders_pembayaranCountOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_pembayaranAvgOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
  }

  export type Orders_pembayaranMaxOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_pembayaranMinOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Orders_pembayaranSumOrderByAggregateInput = {
    id?: SortOrder
    id_orders?: SortOrder
    id_pembayaran?: SortOrder
  }

  export type Review_pretestListRelationFilter = {
    every?: Review_pretestWhereInput
    some?: Review_pretestWhereInput
    none?: Review_pretestWhereInput
  }

  export type Review_pretestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PretestCountOrderByAggregateInput = {
    id?: SortOrder
    jdudul_pertanyaan?: SortOrder
    list_soal?: SortOrder
    opsi_jawaban?: SortOrder
    pertanyaan?: SortOrder
    created_at?: SortOrder
  }

  export type PretestAvgOrderByAggregateInput = {
    id?: SortOrder
    list_soal?: SortOrder
  }

  export type PretestMaxOrderByAggregateInput = {
    id?: SortOrder
    jdudul_pertanyaan?: SortOrder
    list_soal?: SortOrder
    opsi_jawaban?: SortOrder
    pertanyaan?: SortOrder
    created_at?: SortOrder
  }

  export type PretestMinOrderByAggregateInput = {
    id?: SortOrder
    jdudul_pertanyaan?: SortOrder
    list_soal?: SortOrder
    opsi_jawaban?: SortOrder
    pertanyaan?: SortOrder
    created_at?: SortOrder
  }

  export type PretestSumOrderByAggregateInput = {
    id?: SortOrder
    list_soal?: SortOrder
  }

  export type PretestRelationFilter = {
    is?: PretestWhereInput
    isNot?: PretestWhereInput
  }

  export type Pretest_kelasCountOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Pretest_kelasAvgOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
  }

  export type Pretest_kelasMaxOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Pretest_kelasMinOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
    created_at?: SortOrder
  }

  export type Pretest_kelasSumOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_kelas_saya?: SortOrder
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    deskripsi?: SortOrder
    created_at?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    deskripsi?: SortOrder
    created_at?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    deskripsi?: SortOrder
    created_at?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
  }

  export type ReviewRelationFilter = {
    is?: ReviewWhereInput
    isNot?: ReviewWhereInput
  }

  export type Review_pretestCountOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
    created_at?: SortOrder
  }

  export type Review_pretestAvgOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
  }

  export type Review_pretestMaxOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
    created_at?: SortOrder
  }

  export type Review_pretestMinOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
    created_at?: SortOrder
  }

  export type Review_pretestSumOrderByAggregateInput = {
    id?: SortOrder
    id_pretest?: SortOrder
    id_review?: SortOrder
  }

  export type SilabusCountOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
    created_at?: SortOrder
  }

  export type SilabusAvgOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
  }

  export type SilabusMaxOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
    created_at?: SortOrder
  }

  export type SilabusMinOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
    created_at?: SortOrder
  }

  export type SilabusSumOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_modul?: SortOrder
  }

  export type Transaksi_kelasCountOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Transaksi_kelasAvgOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
  }

  export type Transaksi_kelasMaxOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Transaksi_kelasMinOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
    created_at?: SortOrder
  }

  export type Transaksi_kelasSumOrderByAggregateInput = {
    id?: SortOrder
    id_kelas?: SortOrder
    id_pembayaran?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MengajarCreateNestedManyWithoutTutorInput = {
    create?: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput> | MengajarCreateWithoutTutorInput[] | MengajarUncheckedCreateWithoutTutorInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutTutorInput | MengajarCreateOrConnectWithoutTutorInput[]
    createMany?: MengajarCreateManyTutorInputEnvelope
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
  }

  export type MengajarUncheckedCreateNestedManyWithoutTutorInput = {
    create?: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput> | MengajarCreateWithoutTutorInput[] | MengajarUncheckedCreateWithoutTutorInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutTutorInput | MengajarCreateOrConnectWithoutTutorInput[]
    createMany?: MengajarCreateManyTutorInputEnvelope
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type MengajarUpdateManyWithoutTutorNestedInput = {
    create?: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput> | MengajarCreateWithoutTutorInput[] | MengajarUncheckedCreateWithoutTutorInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutTutorInput | MengajarCreateOrConnectWithoutTutorInput[]
    upsert?: MengajarUpsertWithWhereUniqueWithoutTutorInput | MengajarUpsertWithWhereUniqueWithoutTutorInput[]
    createMany?: MengajarCreateManyTutorInputEnvelope
    set?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    disconnect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    delete?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    update?: MengajarUpdateWithWhereUniqueWithoutTutorInput | MengajarUpdateWithWhereUniqueWithoutTutorInput[]
    updateMany?: MengajarUpdateManyWithWhereWithoutTutorInput | MengajarUpdateManyWithWhereWithoutTutorInput[]
    deleteMany?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
  }

  export type MengajarUncheckedUpdateManyWithoutTutorNestedInput = {
    create?: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput> | MengajarCreateWithoutTutorInput[] | MengajarUncheckedCreateWithoutTutorInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutTutorInput | MengajarCreateOrConnectWithoutTutorInput[]
    upsert?: MengajarUpsertWithWhereUniqueWithoutTutorInput | MengajarUpsertWithWhereUniqueWithoutTutorInput[]
    createMany?: MengajarCreateManyTutorInputEnvelope
    set?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    disconnect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    delete?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    update?: MengajarUpdateWithWhereUniqueWithoutTutorInput | MengajarUpdateWithWhereUniqueWithoutTutorInput[]
    updateMany?: MengajarUpdateManyWithWhereWithoutTutorInput | MengajarUpdateManyWithWhereWithoutTutorInput[]
    deleteMany?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
  }

  export type Kategori_kelas_relasiCreateNestedManyWithoutKelasInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput> | Kategori_kelas_relasiCreateWithoutKelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKelasInputEnvelope
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
  }

  export type MengajarCreateNestedManyWithoutKelasInput = {
    create?: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput> | MengajarCreateWithoutKelasInput[] | MengajarUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutKelasInput | MengajarCreateOrConnectWithoutKelasInput[]
    createMany?: MengajarCreateManyKelasInputEnvelope
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
  }

  export type SilabusCreateNestedManyWithoutKelasInput = {
    create?: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput> | SilabusCreateWithoutKelasInput[] | SilabusUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutKelasInput | SilabusCreateOrConnectWithoutKelasInput[]
    createMany?: SilabusCreateManyKelasInputEnvelope
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
  }

  export type Transaksi_kelasCreateNestedManyWithoutKelasInput = {
    create?: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput> | Transaksi_kelasCreateWithoutKelasInput[] | Transaksi_kelasUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutKelasInput | Transaksi_kelasCreateOrConnectWithoutKelasInput[]
    createMany?: Transaksi_kelasCreateManyKelasInputEnvelope
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
  }

  export type Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKelasInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput> | Kategori_kelas_relasiCreateWithoutKelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKelasInputEnvelope
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
  }

  export type MengajarUncheckedCreateNestedManyWithoutKelasInput = {
    create?: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput> | MengajarCreateWithoutKelasInput[] | MengajarUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutKelasInput | MengajarCreateOrConnectWithoutKelasInput[]
    createMany?: MengajarCreateManyKelasInputEnvelope
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
  }

  export type SilabusUncheckedCreateNestedManyWithoutKelasInput = {
    create?: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput> | SilabusCreateWithoutKelasInput[] | SilabusUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutKelasInput | SilabusCreateOrConnectWithoutKelasInput[]
    createMany?: SilabusCreateManyKelasInputEnvelope
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
  }

  export type Transaksi_kelasUncheckedCreateNestedManyWithoutKelasInput = {
    create?: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput> | Transaksi_kelasCreateWithoutKelasInput[] | Transaksi_kelasUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutKelasInput | Transaksi_kelasCreateOrConnectWithoutKelasInput[]
    createMany?: Transaksi_kelasCreateManyKelasInputEnvelope
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Kategori_kelas_relasiUpdateManyWithoutKelasNestedInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput> | Kategori_kelas_relasiCreateWithoutKelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKelasInput[]
    upsert?: Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKelasInput | Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKelasInputEnvelope
    set?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    disconnect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    delete?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    update?: Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKelasInput | Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: Kategori_kelas_relasiUpdateManyWithWhereWithoutKelasInput | Kategori_kelas_relasiUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
  }

  export type MengajarUpdateManyWithoutKelasNestedInput = {
    create?: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput> | MengajarCreateWithoutKelasInput[] | MengajarUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutKelasInput | MengajarCreateOrConnectWithoutKelasInput[]
    upsert?: MengajarUpsertWithWhereUniqueWithoutKelasInput | MengajarUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: MengajarCreateManyKelasInputEnvelope
    set?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    disconnect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    delete?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    update?: MengajarUpdateWithWhereUniqueWithoutKelasInput | MengajarUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: MengajarUpdateManyWithWhereWithoutKelasInput | MengajarUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
  }

  export type SilabusUpdateManyWithoutKelasNestedInput = {
    create?: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput> | SilabusCreateWithoutKelasInput[] | SilabusUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutKelasInput | SilabusCreateOrConnectWithoutKelasInput[]
    upsert?: SilabusUpsertWithWhereUniqueWithoutKelasInput | SilabusUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: SilabusCreateManyKelasInputEnvelope
    set?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    disconnect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    delete?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    update?: SilabusUpdateWithWhereUniqueWithoutKelasInput | SilabusUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: SilabusUpdateManyWithWhereWithoutKelasInput | SilabusUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
  }

  export type Transaksi_kelasUpdateManyWithoutKelasNestedInput = {
    create?: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput> | Transaksi_kelasCreateWithoutKelasInput[] | Transaksi_kelasUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutKelasInput | Transaksi_kelasCreateOrConnectWithoutKelasInput[]
    upsert?: Transaksi_kelasUpsertWithWhereUniqueWithoutKelasInput | Transaksi_kelasUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: Transaksi_kelasCreateManyKelasInputEnvelope
    set?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    disconnect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    delete?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    update?: Transaksi_kelasUpdateWithWhereUniqueWithoutKelasInput | Transaksi_kelasUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: Transaksi_kelasUpdateManyWithWhereWithoutKelasInput | Transaksi_kelasUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
  }

  export type Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasNestedInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput> | Kategori_kelas_relasiCreateWithoutKelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKelasInput[]
    upsert?: Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKelasInput | Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKelasInputEnvelope
    set?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    disconnect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    delete?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    update?: Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKelasInput | Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: Kategori_kelas_relasiUpdateManyWithWhereWithoutKelasInput | Kategori_kelas_relasiUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
  }

  export type MengajarUncheckedUpdateManyWithoutKelasNestedInput = {
    create?: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput> | MengajarCreateWithoutKelasInput[] | MengajarUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: MengajarCreateOrConnectWithoutKelasInput | MengajarCreateOrConnectWithoutKelasInput[]
    upsert?: MengajarUpsertWithWhereUniqueWithoutKelasInput | MengajarUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: MengajarCreateManyKelasInputEnvelope
    set?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    disconnect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    delete?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    connect?: MengajarWhereUniqueInput | MengajarWhereUniqueInput[]
    update?: MengajarUpdateWithWhereUniqueWithoutKelasInput | MengajarUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: MengajarUpdateManyWithWhereWithoutKelasInput | MengajarUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
  }

  export type SilabusUncheckedUpdateManyWithoutKelasNestedInput = {
    create?: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput> | SilabusCreateWithoutKelasInput[] | SilabusUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutKelasInput | SilabusCreateOrConnectWithoutKelasInput[]
    upsert?: SilabusUpsertWithWhereUniqueWithoutKelasInput | SilabusUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: SilabusCreateManyKelasInputEnvelope
    set?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    disconnect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    delete?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    update?: SilabusUpdateWithWhereUniqueWithoutKelasInput | SilabusUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: SilabusUpdateManyWithWhereWithoutKelasInput | SilabusUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
  }

  export type Transaksi_kelasUncheckedUpdateManyWithoutKelasNestedInput = {
    create?: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput> | Transaksi_kelasCreateWithoutKelasInput[] | Transaksi_kelasUncheckedCreateWithoutKelasInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutKelasInput | Transaksi_kelasCreateOrConnectWithoutKelasInput[]
    upsert?: Transaksi_kelasUpsertWithWhereUniqueWithoutKelasInput | Transaksi_kelasUpsertWithWhereUniqueWithoutKelasInput[]
    createMany?: Transaksi_kelasCreateManyKelasInputEnvelope
    set?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    disconnect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    delete?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    update?: Transaksi_kelasUpdateWithWhereUniqueWithoutKelasInput | Transaksi_kelasUpdateWithWhereUniqueWithoutKelasInput[]
    updateMany?: Transaksi_kelasUpdateManyWithWhereWithoutKelasInput | Transaksi_kelasUpdateManyWithWhereWithoutKelasInput[]
    deleteMany?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
  }

  export type Kategori_kelas_relasiCreateNestedManyWithoutKategori_kelasInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput> | Kategori_kelas_relasiCreateWithoutKategori_kelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKategori_kelasInputEnvelope
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
  }

  export type Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKategori_kelasInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput> | Kategori_kelas_relasiCreateWithoutKategori_kelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKategori_kelasInputEnvelope
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
  }

  export type Kategori_kelas_relasiUpdateManyWithoutKategori_kelasNestedInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput> | Kategori_kelas_relasiCreateWithoutKategori_kelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput[]
    upsert?: Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKategori_kelasInput | Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKategori_kelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKategori_kelasInputEnvelope
    set?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    disconnect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    delete?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    update?: Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKategori_kelasInput | Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKategori_kelasInput[]
    updateMany?: Kategori_kelas_relasiUpdateManyWithWhereWithoutKategori_kelasInput | Kategori_kelas_relasiUpdateManyWithWhereWithoutKategori_kelasInput[]
    deleteMany?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
  }

  export type Kategori_kelas_relasiUncheckedUpdateManyWithoutKategori_kelasNestedInput = {
    create?: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput> | Kategori_kelas_relasiCreateWithoutKategori_kelasInput[] | Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput[]
    connectOrCreate?: Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput | Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput[]
    upsert?: Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKategori_kelasInput | Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKategori_kelasInput[]
    createMany?: Kategori_kelas_relasiCreateManyKategori_kelasInputEnvelope
    set?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    disconnect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    delete?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    connect?: Kategori_kelas_relasiWhereUniqueInput | Kategori_kelas_relasiWhereUniqueInput[]
    update?: Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKategori_kelasInput | Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKategori_kelasInput[]
    updateMany?: Kategori_kelas_relasiUpdateManyWithWhereWithoutKategori_kelasInput | Kategori_kelas_relasiUpdateManyWithWhereWithoutKategori_kelasInput[]
    deleteMany?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
  }

  export type KelasCreateNestedOneWithoutKategori_kelas_relasiInput = {
    create?: XOR<KelasCreateWithoutKategori_kelas_relasiInput, KelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    connectOrCreate?: KelasCreateOrConnectWithoutKategori_kelas_relasiInput
    connect?: KelasWhereUniqueInput
  }

  export type Kategori_kelasCreateNestedOneWithoutKategori_kelas_relasiInput = {
    create?: XOR<Kategori_kelasCreateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    connectOrCreate?: Kategori_kelasCreateOrConnectWithoutKategori_kelas_relasiInput
    connect?: Kategori_kelasWhereUniqueInput
  }

  export type KelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput = {
    create?: XOR<KelasCreateWithoutKategori_kelas_relasiInput, KelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    connectOrCreate?: KelasCreateOrConnectWithoutKategori_kelas_relasiInput
    upsert?: KelasUpsertWithoutKategori_kelas_relasiInput
    connect?: KelasWhereUniqueInput
    update?: XOR<XOR<KelasUpdateToOneWithWhereWithoutKategori_kelas_relasiInput, KelasUpdateWithoutKategori_kelas_relasiInput>, KelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
  }

  export type Kategori_kelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput = {
    create?: XOR<Kategori_kelasCreateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    connectOrCreate?: Kategori_kelasCreateOrConnectWithoutKategori_kelas_relasiInput
    upsert?: Kategori_kelasUpsertWithoutKategori_kelas_relasiInput
    connect?: Kategori_kelasWhereUniqueInput
    update?: XOR<XOR<Kategori_kelasUpdateToOneWithWhereWithoutKategori_kelas_relasiInput, Kategori_kelasUpdateWithoutKategori_kelas_relasiInput>, Kategori_kelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
  }

  export type Orders_kelasCreateNestedManyWithoutKelas_sayaInput = {
    create?: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput> | Orders_kelasCreateWithoutKelas_sayaInput[] | Orders_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutKelas_sayaInput | Orders_kelasCreateOrConnectWithoutKelas_sayaInput[]
    createMany?: Orders_kelasCreateManyKelas_sayaInputEnvelope
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
  }

  export type Pretest_kelasCreateNestedManyWithoutKelas_sayaInput = {
    create?: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput> | Pretest_kelasCreateWithoutKelas_sayaInput[] | Pretest_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutKelas_sayaInput | Pretest_kelasCreateOrConnectWithoutKelas_sayaInput[]
    createMany?: Pretest_kelasCreateManyKelas_sayaInputEnvelope
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
  }

  export type Orders_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput = {
    create?: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput> | Orders_kelasCreateWithoutKelas_sayaInput[] | Orders_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutKelas_sayaInput | Orders_kelasCreateOrConnectWithoutKelas_sayaInput[]
    createMany?: Orders_kelasCreateManyKelas_sayaInputEnvelope
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
  }

  export type Pretest_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput = {
    create?: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput> | Pretest_kelasCreateWithoutKelas_sayaInput[] | Pretest_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutKelas_sayaInput | Pretest_kelasCreateOrConnectWithoutKelas_sayaInput[]
    createMany?: Pretest_kelasCreateManyKelas_sayaInputEnvelope
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumStatus_kelasFieldUpdateOperationsInput = {
    set?: $Enums.Status_kelas
  }

  export type Orders_kelasUpdateManyWithoutKelas_sayaNestedInput = {
    create?: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput> | Orders_kelasCreateWithoutKelas_sayaInput[] | Orders_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutKelas_sayaInput | Orders_kelasCreateOrConnectWithoutKelas_sayaInput[]
    upsert?: Orders_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput | Orders_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput[]
    createMany?: Orders_kelasCreateManyKelas_sayaInputEnvelope
    set?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    disconnect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    delete?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    update?: Orders_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput | Orders_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput[]
    updateMany?: Orders_kelasUpdateManyWithWhereWithoutKelas_sayaInput | Orders_kelasUpdateManyWithWhereWithoutKelas_sayaInput[]
    deleteMany?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
  }

  export type Pretest_kelasUpdateManyWithoutKelas_sayaNestedInput = {
    create?: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput> | Pretest_kelasCreateWithoutKelas_sayaInput[] | Pretest_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutKelas_sayaInput | Pretest_kelasCreateOrConnectWithoutKelas_sayaInput[]
    upsert?: Pretest_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput | Pretest_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput[]
    createMany?: Pretest_kelasCreateManyKelas_sayaInputEnvelope
    set?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    disconnect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    delete?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    update?: Pretest_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput | Pretest_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput[]
    updateMany?: Pretest_kelasUpdateManyWithWhereWithoutKelas_sayaInput | Pretest_kelasUpdateManyWithWhereWithoutKelas_sayaInput[]
    deleteMany?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
  }

  export type Orders_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput = {
    create?: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput> | Orders_kelasCreateWithoutKelas_sayaInput[] | Orders_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutKelas_sayaInput | Orders_kelasCreateOrConnectWithoutKelas_sayaInput[]
    upsert?: Orders_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput | Orders_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput[]
    createMany?: Orders_kelasCreateManyKelas_sayaInputEnvelope
    set?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    disconnect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    delete?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    update?: Orders_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput | Orders_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput[]
    updateMany?: Orders_kelasUpdateManyWithWhereWithoutKelas_sayaInput | Orders_kelasUpdateManyWithWhereWithoutKelas_sayaInput[]
    deleteMany?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
  }

  export type Pretest_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput = {
    create?: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput> | Pretest_kelasCreateWithoutKelas_sayaInput[] | Pretest_kelasUncheckedCreateWithoutKelas_sayaInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutKelas_sayaInput | Pretest_kelasCreateOrConnectWithoutKelas_sayaInput[]
    upsert?: Pretest_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput | Pretest_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput[]
    createMany?: Pretest_kelasCreateManyKelas_sayaInputEnvelope
    set?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    disconnect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    delete?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    update?: Pretest_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput | Pretest_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput[]
    updateMany?: Pretest_kelasUpdateManyWithWhereWithoutKelas_sayaInput | Pretest_kelasUpdateManyWithWhereWithoutKelas_sayaInput[]
    deleteMany?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
  }

  export type Modul_materialCreateNestedManyWithoutMaterialInput = {
    create?: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput> | Modul_materialCreateWithoutMaterialInput[] | Modul_materialUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutMaterialInput | Modul_materialCreateOrConnectWithoutMaterialInput[]
    createMany?: Modul_materialCreateManyMaterialInputEnvelope
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
  }

  export type Modul_materialUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput> | Modul_materialCreateWithoutMaterialInput[] | Modul_materialUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutMaterialInput | Modul_materialCreateOrConnectWithoutMaterialInput[]
    createMany?: Modul_materialCreateManyMaterialInputEnvelope
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
  }

  export type Modul_materialUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput> | Modul_materialCreateWithoutMaterialInput[] | Modul_materialUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutMaterialInput | Modul_materialCreateOrConnectWithoutMaterialInput[]
    upsert?: Modul_materialUpsertWithWhereUniqueWithoutMaterialInput | Modul_materialUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: Modul_materialCreateManyMaterialInputEnvelope
    set?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    disconnect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    delete?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    update?: Modul_materialUpdateWithWhereUniqueWithoutMaterialInput | Modul_materialUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: Modul_materialUpdateManyWithWhereWithoutMaterialInput | Modul_materialUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
  }

  export type Modul_materialUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput> | Modul_materialCreateWithoutMaterialInput[] | Modul_materialUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutMaterialInput | Modul_materialCreateOrConnectWithoutMaterialInput[]
    upsert?: Modul_materialUpsertWithWhereUniqueWithoutMaterialInput | Modul_materialUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: Modul_materialCreateManyMaterialInputEnvelope
    set?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    disconnect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    delete?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    update?: Modul_materialUpdateWithWhereUniqueWithoutMaterialInput | Modul_materialUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: Modul_materialUpdateManyWithWhereWithoutMaterialInput | Modul_materialUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
  }

  export type KelasCreateNestedOneWithoutMengajarInput = {
    create?: XOR<KelasCreateWithoutMengajarInput, KelasUncheckedCreateWithoutMengajarInput>
    connectOrCreate?: KelasCreateOrConnectWithoutMengajarInput
    connect?: KelasWhereUniqueInput
  }

  export type TutorCreateNestedOneWithoutMengajarInput = {
    create?: XOR<TutorCreateWithoutMengajarInput, TutorUncheckedCreateWithoutMengajarInput>
    connectOrCreate?: TutorCreateOrConnectWithoutMengajarInput
    connect?: TutorWhereUniqueInput
  }

  export type KelasUpdateOneRequiredWithoutMengajarNestedInput = {
    create?: XOR<KelasCreateWithoutMengajarInput, KelasUncheckedCreateWithoutMengajarInput>
    connectOrCreate?: KelasCreateOrConnectWithoutMengajarInput
    upsert?: KelasUpsertWithoutMengajarInput
    connect?: KelasWhereUniqueInput
    update?: XOR<XOR<KelasUpdateToOneWithWhereWithoutMengajarInput, KelasUpdateWithoutMengajarInput>, KelasUncheckedUpdateWithoutMengajarInput>
  }

  export type TutorUpdateOneRequiredWithoutMengajarNestedInput = {
    create?: XOR<TutorCreateWithoutMengajarInput, TutorUncheckedCreateWithoutMengajarInput>
    connectOrCreate?: TutorCreateOrConnectWithoutMengajarInput
    upsert?: TutorUpsertWithoutMengajarInput
    connect?: TutorWhereUniqueInput
    update?: XOR<XOR<TutorUpdateToOneWithWhereWithoutMengajarInput, TutorUpdateWithoutMengajarInput>, TutorUncheckedUpdateWithoutMengajarInput>
  }

  export type Modul_materialCreateNestedManyWithoutModul_kelasInput = {
    create?: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput> | Modul_materialCreateWithoutModul_kelasInput[] | Modul_materialUncheckedCreateWithoutModul_kelasInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutModul_kelasInput | Modul_materialCreateOrConnectWithoutModul_kelasInput[]
    createMany?: Modul_materialCreateManyModul_kelasInputEnvelope
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
  }

  export type SilabusCreateNestedManyWithoutModulInput = {
    create?: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput> | SilabusCreateWithoutModulInput[] | SilabusUncheckedCreateWithoutModulInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutModulInput | SilabusCreateOrConnectWithoutModulInput[]
    createMany?: SilabusCreateManyModulInputEnvelope
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
  }

  export type Modul_materialUncheckedCreateNestedManyWithoutModul_kelasInput = {
    create?: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput> | Modul_materialCreateWithoutModul_kelasInput[] | Modul_materialUncheckedCreateWithoutModul_kelasInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutModul_kelasInput | Modul_materialCreateOrConnectWithoutModul_kelasInput[]
    createMany?: Modul_materialCreateManyModul_kelasInputEnvelope
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
  }

  export type SilabusUncheckedCreateNestedManyWithoutModulInput = {
    create?: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput> | SilabusCreateWithoutModulInput[] | SilabusUncheckedCreateWithoutModulInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutModulInput | SilabusCreateOrConnectWithoutModulInput[]
    createMany?: SilabusCreateManyModulInputEnvelope
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
  }

  export type Modul_materialUpdateManyWithoutModul_kelasNestedInput = {
    create?: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput> | Modul_materialCreateWithoutModul_kelasInput[] | Modul_materialUncheckedCreateWithoutModul_kelasInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutModul_kelasInput | Modul_materialCreateOrConnectWithoutModul_kelasInput[]
    upsert?: Modul_materialUpsertWithWhereUniqueWithoutModul_kelasInput | Modul_materialUpsertWithWhereUniqueWithoutModul_kelasInput[]
    createMany?: Modul_materialCreateManyModul_kelasInputEnvelope
    set?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    disconnect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    delete?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    update?: Modul_materialUpdateWithWhereUniqueWithoutModul_kelasInput | Modul_materialUpdateWithWhereUniqueWithoutModul_kelasInput[]
    updateMany?: Modul_materialUpdateManyWithWhereWithoutModul_kelasInput | Modul_materialUpdateManyWithWhereWithoutModul_kelasInput[]
    deleteMany?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
  }

  export type SilabusUpdateManyWithoutModulNestedInput = {
    create?: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput> | SilabusCreateWithoutModulInput[] | SilabusUncheckedCreateWithoutModulInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutModulInput | SilabusCreateOrConnectWithoutModulInput[]
    upsert?: SilabusUpsertWithWhereUniqueWithoutModulInput | SilabusUpsertWithWhereUniqueWithoutModulInput[]
    createMany?: SilabusCreateManyModulInputEnvelope
    set?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    disconnect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    delete?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    update?: SilabusUpdateWithWhereUniqueWithoutModulInput | SilabusUpdateWithWhereUniqueWithoutModulInput[]
    updateMany?: SilabusUpdateManyWithWhereWithoutModulInput | SilabusUpdateManyWithWhereWithoutModulInput[]
    deleteMany?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
  }

  export type Modul_materialUncheckedUpdateManyWithoutModul_kelasNestedInput = {
    create?: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput> | Modul_materialCreateWithoutModul_kelasInput[] | Modul_materialUncheckedCreateWithoutModul_kelasInput[]
    connectOrCreate?: Modul_materialCreateOrConnectWithoutModul_kelasInput | Modul_materialCreateOrConnectWithoutModul_kelasInput[]
    upsert?: Modul_materialUpsertWithWhereUniqueWithoutModul_kelasInput | Modul_materialUpsertWithWhereUniqueWithoutModul_kelasInput[]
    createMany?: Modul_materialCreateManyModul_kelasInputEnvelope
    set?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    disconnect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    delete?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    connect?: Modul_materialWhereUniqueInput | Modul_materialWhereUniqueInput[]
    update?: Modul_materialUpdateWithWhereUniqueWithoutModul_kelasInput | Modul_materialUpdateWithWhereUniqueWithoutModul_kelasInput[]
    updateMany?: Modul_materialUpdateManyWithWhereWithoutModul_kelasInput | Modul_materialUpdateManyWithWhereWithoutModul_kelasInput[]
    deleteMany?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
  }

  export type SilabusUncheckedUpdateManyWithoutModulNestedInput = {
    create?: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput> | SilabusCreateWithoutModulInput[] | SilabusUncheckedCreateWithoutModulInput[]
    connectOrCreate?: SilabusCreateOrConnectWithoutModulInput | SilabusCreateOrConnectWithoutModulInput[]
    upsert?: SilabusUpsertWithWhereUniqueWithoutModulInput | SilabusUpsertWithWhereUniqueWithoutModulInput[]
    createMany?: SilabusCreateManyModulInputEnvelope
    set?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    disconnect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    delete?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    connect?: SilabusWhereUniqueInput | SilabusWhereUniqueInput[]
    update?: SilabusUpdateWithWhereUniqueWithoutModulInput | SilabusUpdateWithWhereUniqueWithoutModulInput[]
    updateMany?: SilabusUpdateManyWithWhereWithoutModulInput | SilabusUpdateManyWithWhereWithoutModulInput[]
    deleteMany?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
  }

  export type MaterialCreateNestedOneWithoutModul_materialInput = {
    create?: XOR<MaterialCreateWithoutModul_materialInput, MaterialUncheckedCreateWithoutModul_materialInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutModul_materialInput
    connect?: MaterialWhereUniqueInput
  }

  export type Modul_kelasCreateNestedOneWithoutModul_materialInput = {
    create?: XOR<Modul_kelasCreateWithoutModul_materialInput, Modul_kelasUncheckedCreateWithoutModul_materialInput>
    connectOrCreate?: Modul_kelasCreateOrConnectWithoutModul_materialInput
    connect?: Modul_kelasWhereUniqueInput
  }

  export type MaterialUpdateOneRequiredWithoutModul_materialNestedInput = {
    create?: XOR<MaterialCreateWithoutModul_materialInput, MaterialUncheckedCreateWithoutModul_materialInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutModul_materialInput
    upsert?: MaterialUpsertWithoutModul_materialInput
    connect?: MaterialWhereUniqueInput
    update?: XOR<XOR<MaterialUpdateToOneWithWhereWithoutModul_materialInput, MaterialUpdateWithoutModul_materialInput>, MaterialUncheckedUpdateWithoutModul_materialInput>
  }

  export type Modul_kelasUpdateOneRequiredWithoutModul_materialNestedInput = {
    create?: XOR<Modul_kelasCreateWithoutModul_materialInput, Modul_kelasUncheckedCreateWithoutModul_materialInput>
    connectOrCreate?: Modul_kelasCreateOrConnectWithoutModul_materialInput
    upsert?: Modul_kelasUpsertWithoutModul_materialInput
    connect?: Modul_kelasWhereUniqueInput
    update?: XOR<XOR<Modul_kelasUpdateToOneWithWhereWithoutModul_materialInput, Modul_kelasUpdateWithoutModul_materialInput>, Modul_kelasUncheckedUpdateWithoutModul_materialInput>
  }

  export type Orders_kelasCreateNestedManyWithoutOrdersInput = {
    create?: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput> | Orders_kelasCreateWithoutOrdersInput[] | Orders_kelasUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutOrdersInput | Orders_kelasCreateOrConnectWithoutOrdersInput[]
    createMany?: Orders_kelasCreateManyOrdersInputEnvelope
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
  }

  export type Orders_pembayaranCreateNestedManyWithoutOrdersInput = {
    create?: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput> | Orders_pembayaranCreateWithoutOrdersInput[] | Orders_pembayaranUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutOrdersInput | Orders_pembayaranCreateOrConnectWithoutOrdersInput[]
    createMany?: Orders_pembayaranCreateManyOrdersInputEnvelope
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
  }

  export type Orders_kelasUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput> | Orders_kelasCreateWithoutOrdersInput[] | Orders_kelasUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutOrdersInput | Orders_kelasCreateOrConnectWithoutOrdersInput[]
    createMany?: Orders_kelasCreateManyOrdersInputEnvelope
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
  }

  export type Orders_pembayaranUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput> | Orders_pembayaranCreateWithoutOrdersInput[] | Orders_pembayaranUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutOrdersInput | Orders_pembayaranCreateOrConnectWithoutOrdersInput[]
    createMany?: Orders_pembayaranCreateManyOrdersInputEnvelope
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
  }

  export type EnumStatus_pembayaranFieldUpdateOperationsInput = {
    set?: $Enums.Status_pembayaran
  }

  export type Orders_kelasUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput> | Orders_kelasCreateWithoutOrdersInput[] | Orders_kelasUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutOrdersInput | Orders_kelasCreateOrConnectWithoutOrdersInput[]
    upsert?: Orders_kelasUpsertWithWhereUniqueWithoutOrdersInput | Orders_kelasUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: Orders_kelasCreateManyOrdersInputEnvelope
    set?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    disconnect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    delete?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    update?: Orders_kelasUpdateWithWhereUniqueWithoutOrdersInput | Orders_kelasUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: Orders_kelasUpdateManyWithWhereWithoutOrdersInput | Orders_kelasUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
  }

  export type Orders_pembayaranUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput> | Orders_pembayaranCreateWithoutOrdersInput[] | Orders_pembayaranUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutOrdersInput | Orders_pembayaranCreateOrConnectWithoutOrdersInput[]
    upsert?: Orders_pembayaranUpsertWithWhereUniqueWithoutOrdersInput | Orders_pembayaranUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: Orders_pembayaranCreateManyOrdersInputEnvelope
    set?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    disconnect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    delete?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    update?: Orders_pembayaranUpdateWithWhereUniqueWithoutOrdersInput | Orders_pembayaranUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: Orders_pembayaranUpdateManyWithWhereWithoutOrdersInput | Orders_pembayaranUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
  }

  export type Orders_kelasUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput> | Orders_kelasCreateWithoutOrdersInput[] | Orders_kelasUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_kelasCreateOrConnectWithoutOrdersInput | Orders_kelasCreateOrConnectWithoutOrdersInput[]
    upsert?: Orders_kelasUpsertWithWhereUniqueWithoutOrdersInput | Orders_kelasUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: Orders_kelasCreateManyOrdersInputEnvelope
    set?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    disconnect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    delete?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    connect?: Orders_kelasWhereUniqueInput | Orders_kelasWhereUniqueInput[]
    update?: Orders_kelasUpdateWithWhereUniqueWithoutOrdersInput | Orders_kelasUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: Orders_kelasUpdateManyWithWhereWithoutOrdersInput | Orders_kelasUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
  }

  export type Orders_pembayaranUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput> | Orders_pembayaranCreateWithoutOrdersInput[] | Orders_pembayaranUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutOrdersInput | Orders_pembayaranCreateOrConnectWithoutOrdersInput[]
    upsert?: Orders_pembayaranUpsertWithWhereUniqueWithoutOrdersInput | Orders_pembayaranUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: Orders_pembayaranCreateManyOrdersInputEnvelope
    set?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    disconnect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    delete?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    update?: Orders_pembayaranUpdateWithWhereUniqueWithoutOrdersInput | Orders_pembayaranUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: Orders_pembayaranUpdateManyWithWhereWithoutOrdersInput | Orders_pembayaranUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrders_kelasInput = {
    create?: XOR<OrderCreateWithoutOrders_kelasInput, OrderUncheckedCreateWithoutOrders_kelasInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrders_kelasInput
    connect?: OrderWhereUniqueInput
  }

  export type Kelas_sayaCreateNestedOneWithoutOrders_kelasInput = {
    create?: XOR<Kelas_sayaCreateWithoutOrders_kelasInput, Kelas_sayaUncheckedCreateWithoutOrders_kelasInput>
    connectOrCreate?: Kelas_sayaCreateOrConnectWithoutOrders_kelasInput
    connect?: Kelas_sayaWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrders_kelasNestedInput = {
    create?: XOR<OrderCreateWithoutOrders_kelasInput, OrderUncheckedCreateWithoutOrders_kelasInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrders_kelasInput
    upsert?: OrderUpsertWithoutOrders_kelasInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrders_kelasInput, OrderUpdateWithoutOrders_kelasInput>, OrderUncheckedUpdateWithoutOrders_kelasInput>
  }

  export type Kelas_sayaUpdateOneRequiredWithoutOrders_kelasNestedInput = {
    create?: XOR<Kelas_sayaCreateWithoutOrders_kelasInput, Kelas_sayaUncheckedCreateWithoutOrders_kelasInput>
    connectOrCreate?: Kelas_sayaCreateOrConnectWithoutOrders_kelasInput
    upsert?: Kelas_sayaUpsertWithoutOrders_kelasInput
    connect?: Kelas_sayaWhereUniqueInput
    update?: XOR<XOR<Kelas_sayaUpdateToOneWithWhereWithoutOrders_kelasInput, Kelas_sayaUpdateWithoutOrders_kelasInput>, Kelas_sayaUncheckedUpdateWithoutOrders_kelasInput>
  }

  export type Orders_pembayaranCreateNestedManyWithoutPembayaranInput = {
    create?: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput> | Orders_pembayaranCreateWithoutPembayaranInput[] | Orders_pembayaranUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutPembayaranInput | Orders_pembayaranCreateOrConnectWithoutPembayaranInput[]
    createMany?: Orders_pembayaranCreateManyPembayaranInputEnvelope
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
  }

  export type Transaksi_kelasCreateNestedManyWithoutPembayaranInput = {
    create?: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput> | Transaksi_kelasCreateWithoutPembayaranInput[] | Transaksi_kelasUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutPembayaranInput | Transaksi_kelasCreateOrConnectWithoutPembayaranInput[]
    createMany?: Transaksi_kelasCreateManyPembayaranInputEnvelope
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
  }

  export type Orders_pembayaranUncheckedCreateNestedManyWithoutPembayaranInput = {
    create?: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput> | Orders_pembayaranCreateWithoutPembayaranInput[] | Orders_pembayaranUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutPembayaranInput | Orders_pembayaranCreateOrConnectWithoutPembayaranInput[]
    createMany?: Orders_pembayaranCreateManyPembayaranInputEnvelope
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
  }

  export type Transaksi_kelasUncheckedCreateNestedManyWithoutPembayaranInput = {
    create?: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput> | Transaksi_kelasCreateWithoutPembayaranInput[] | Transaksi_kelasUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutPembayaranInput | Transaksi_kelasCreateOrConnectWithoutPembayaranInput[]
    createMany?: Transaksi_kelasCreateManyPembayaranInputEnvelope
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
  }

  export type EnumJenis_pembayaranFieldUpdateOperationsInput = {
    set?: $Enums.Jenis_pembayaran
  }

  export type Orders_pembayaranUpdateManyWithoutPembayaranNestedInput = {
    create?: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput> | Orders_pembayaranCreateWithoutPembayaranInput[] | Orders_pembayaranUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutPembayaranInput | Orders_pembayaranCreateOrConnectWithoutPembayaranInput[]
    upsert?: Orders_pembayaranUpsertWithWhereUniqueWithoutPembayaranInput | Orders_pembayaranUpsertWithWhereUniqueWithoutPembayaranInput[]
    createMany?: Orders_pembayaranCreateManyPembayaranInputEnvelope
    set?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    disconnect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    delete?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    update?: Orders_pembayaranUpdateWithWhereUniqueWithoutPembayaranInput | Orders_pembayaranUpdateWithWhereUniqueWithoutPembayaranInput[]
    updateMany?: Orders_pembayaranUpdateManyWithWhereWithoutPembayaranInput | Orders_pembayaranUpdateManyWithWhereWithoutPembayaranInput[]
    deleteMany?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
  }

  export type Transaksi_kelasUpdateManyWithoutPembayaranNestedInput = {
    create?: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput> | Transaksi_kelasCreateWithoutPembayaranInput[] | Transaksi_kelasUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutPembayaranInput | Transaksi_kelasCreateOrConnectWithoutPembayaranInput[]
    upsert?: Transaksi_kelasUpsertWithWhereUniqueWithoutPembayaranInput | Transaksi_kelasUpsertWithWhereUniqueWithoutPembayaranInput[]
    createMany?: Transaksi_kelasCreateManyPembayaranInputEnvelope
    set?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    disconnect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    delete?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    update?: Transaksi_kelasUpdateWithWhereUniqueWithoutPembayaranInput | Transaksi_kelasUpdateWithWhereUniqueWithoutPembayaranInput[]
    updateMany?: Transaksi_kelasUpdateManyWithWhereWithoutPembayaranInput | Transaksi_kelasUpdateManyWithWhereWithoutPembayaranInput[]
    deleteMany?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
  }

  export type Orders_pembayaranUncheckedUpdateManyWithoutPembayaranNestedInput = {
    create?: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput> | Orders_pembayaranCreateWithoutPembayaranInput[] | Orders_pembayaranUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Orders_pembayaranCreateOrConnectWithoutPembayaranInput | Orders_pembayaranCreateOrConnectWithoutPembayaranInput[]
    upsert?: Orders_pembayaranUpsertWithWhereUniqueWithoutPembayaranInput | Orders_pembayaranUpsertWithWhereUniqueWithoutPembayaranInput[]
    createMany?: Orders_pembayaranCreateManyPembayaranInputEnvelope
    set?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    disconnect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    delete?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    connect?: Orders_pembayaranWhereUniqueInput | Orders_pembayaranWhereUniqueInput[]
    update?: Orders_pembayaranUpdateWithWhereUniqueWithoutPembayaranInput | Orders_pembayaranUpdateWithWhereUniqueWithoutPembayaranInput[]
    updateMany?: Orders_pembayaranUpdateManyWithWhereWithoutPembayaranInput | Orders_pembayaranUpdateManyWithWhereWithoutPembayaranInput[]
    deleteMany?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
  }

  export type Transaksi_kelasUncheckedUpdateManyWithoutPembayaranNestedInput = {
    create?: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput> | Transaksi_kelasCreateWithoutPembayaranInput[] | Transaksi_kelasUncheckedCreateWithoutPembayaranInput[]
    connectOrCreate?: Transaksi_kelasCreateOrConnectWithoutPembayaranInput | Transaksi_kelasCreateOrConnectWithoutPembayaranInput[]
    upsert?: Transaksi_kelasUpsertWithWhereUniqueWithoutPembayaranInput | Transaksi_kelasUpsertWithWhereUniqueWithoutPembayaranInput[]
    createMany?: Transaksi_kelasCreateManyPembayaranInputEnvelope
    set?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    disconnect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    delete?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    connect?: Transaksi_kelasWhereUniqueInput | Transaksi_kelasWhereUniqueInput[]
    update?: Transaksi_kelasUpdateWithWhereUniqueWithoutPembayaranInput | Transaksi_kelasUpdateWithWhereUniqueWithoutPembayaranInput[]
    updateMany?: Transaksi_kelasUpdateManyWithWhereWithoutPembayaranInput | Transaksi_kelasUpdateManyWithWhereWithoutPembayaranInput[]
    deleteMany?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrders_pembayaranInput = {
    create?: XOR<OrderCreateWithoutOrders_pembayaranInput, OrderUncheckedCreateWithoutOrders_pembayaranInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrders_pembayaranInput
    connect?: OrderWhereUniqueInput
  }

  export type PembayaranCreateNestedOneWithoutOrders_pembayaranInput = {
    create?: XOR<PembayaranCreateWithoutOrders_pembayaranInput, PembayaranUncheckedCreateWithoutOrders_pembayaranInput>
    connectOrCreate?: PembayaranCreateOrConnectWithoutOrders_pembayaranInput
    connect?: PembayaranWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrders_pembayaranNestedInput = {
    create?: XOR<OrderCreateWithoutOrders_pembayaranInput, OrderUncheckedCreateWithoutOrders_pembayaranInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrders_pembayaranInput
    upsert?: OrderUpsertWithoutOrders_pembayaranInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrders_pembayaranInput, OrderUpdateWithoutOrders_pembayaranInput>, OrderUncheckedUpdateWithoutOrders_pembayaranInput>
  }

  export type PembayaranUpdateOneRequiredWithoutOrders_pembayaranNestedInput = {
    create?: XOR<PembayaranCreateWithoutOrders_pembayaranInput, PembayaranUncheckedCreateWithoutOrders_pembayaranInput>
    connectOrCreate?: PembayaranCreateOrConnectWithoutOrders_pembayaranInput
    upsert?: PembayaranUpsertWithoutOrders_pembayaranInput
    connect?: PembayaranWhereUniqueInput
    update?: XOR<XOR<PembayaranUpdateToOneWithWhereWithoutOrders_pembayaranInput, PembayaranUpdateWithoutOrders_pembayaranInput>, PembayaranUncheckedUpdateWithoutOrders_pembayaranInput>
  }

  export type Pretest_kelasCreateNestedManyWithoutPretestInput = {
    create?: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput> | Pretest_kelasCreateWithoutPretestInput[] | Pretest_kelasUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutPretestInput | Pretest_kelasCreateOrConnectWithoutPretestInput[]
    createMany?: Pretest_kelasCreateManyPretestInputEnvelope
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
  }

  export type Review_pretestCreateNestedManyWithoutPretestInput = {
    create?: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput> | Review_pretestCreateWithoutPretestInput[] | Review_pretestUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutPretestInput | Review_pretestCreateOrConnectWithoutPretestInput[]
    createMany?: Review_pretestCreateManyPretestInputEnvelope
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
  }

  export type Pretest_kelasUncheckedCreateNestedManyWithoutPretestInput = {
    create?: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput> | Pretest_kelasCreateWithoutPretestInput[] | Pretest_kelasUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutPretestInput | Pretest_kelasCreateOrConnectWithoutPretestInput[]
    createMany?: Pretest_kelasCreateManyPretestInputEnvelope
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
  }

  export type Review_pretestUncheckedCreateNestedManyWithoutPretestInput = {
    create?: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput> | Review_pretestCreateWithoutPretestInput[] | Review_pretestUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutPretestInput | Review_pretestCreateOrConnectWithoutPretestInput[]
    createMany?: Review_pretestCreateManyPretestInputEnvelope
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
  }

  export type Pretest_kelasUpdateManyWithoutPretestNestedInput = {
    create?: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput> | Pretest_kelasCreateWithoutPretestInput[] | Pretest_kelasUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutPretestInput | Pretest_kelasCreateOrConnectWithoutPretestInput[]
    upsert?: Pretest_kelasUpsertWithWhereUniqueWithoutPretestInput | Pretest_kelasUpsertWithWhereUniqueWithoutPretestInput[]
    createMany?: Pretest_kelasCreateManyPretestInputEnvelope
    set?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    disconnect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    delete?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    update?: Pretest_kelasUpdateWithWhereUniqueWithoutPretestInput | Pretest_kelasUpdateWithWhereUniqueWithoutPretestInput[]
    updateMany?: Pretest_kelasUpdateManyWithWhereWithoutPretestInput | Pretest_kelasUpdateManyWithWhereWithoutPretestInput[]
    deleteMany?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
  }

  export type Review_pretestUpdateManyWithoutPretestNestedInput = {
    create?: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput> | Review_pretestCreateWithoutPretestInput[] | Review_pretestUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutPretestInput | Review_pretestCreateOrConnectWithoutPretestInput[]
    upsert?: Review_pretestUpsertWithWhereUniqueWithoutPretestInput | Review_pretestUpsertWithWhereUniqueWithoutPretestInput[]
    createMany?: Review_pretestCreateManyPretestInputEnvelope
    set?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    disconnect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    delete?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    update?: Review_pretestUpdateWithWhereUniqueWithoutPretestInput | Review_pretestUpdateWithWhereUniqueWithoutPretestInput[]
    updateMany?: Review_pretestUpdateManyWithWhereWithoutPretestInput | Review_pretestUpdateManyWithWhereWithoutPretestInput[]
    deleteMany?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
  }

  export type Pretest_kelasUncheckedUpdateManyWithoutPretestNestedInput = {
    create?: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput> | Pretest_kelasCreateWithoutPretestInput[] | Pretest_kelasUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Pretest_kelasCreateOrConnectWithoutPretestInput | Pretest_kelasCreateOrConnectWithoutPretestInput[]
    upsert?: Pretest_kelasUpsertWithWhereUniqueWithoutPretestInput | Pretest_kelasUpsertWithWhereUniqueWithoutPretestInput[]
    createMany?: Pretest_kelasCreateManyPretestInputEnvelope
    set?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    disconnect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    delete?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    connect?: Pretest_kelasWhereUniqueInput | Pretest_kelasWhereUniqueInput[]
    update?: Pretest_kelasUpdateWithWhereUniqueWithoutPretestInput | Pretest_kelasUpdateWithWhereUniqueWithoutPretestInput[]
    updateMany?: Pretest_kelasUpdateManyWithWhereWithoutPretestInput | Pretest_kelasUpdateManyWithWhereWithoutPretestInput[]
    deleteMany?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
  }

  export type Review_pretestUncheckedUpdateManyWithoutPretestNestedInput = {
    create?: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput> | Review_pretestCreateWithoutPretestInput[] | Review_pretestUncheckedCreateWithoutPretestInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutPretestInput | Review_pretestCreateOrConnectWithoutPretestInput[]
    upsert?: Review_pretestUpsertWithWhereUniqueWithoutPretestInput | Review_pretestUpsertWithWhereUniqueWithoutPretestInput[]
    createMany?: Review_pretestCreateManyPretestInputEnvelope
    set?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    disconnect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    delete?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    update?: Review_pretestUpdateWithWhereUniqueWithoutPretestInput | Review_pretestUpdateWithWhereUniqueWithoutPretestInput[]
    updateMany?: Review_pretestUpdateManyWithWhereWithoutPretestInput | Review_pretestUpdateManyWithWhereWithoutPretestInput[]
    deleteMany?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
  }

  export type PretestCreateNestedOneWithoutPretest_kelasInput = {
    create?: XOR<PretestCreateWithoutPretest_kelasInput, PretestUncheckedCreateWithoutPretest_kelasInput>
    connectOrCreate?: PretestCreateOrConnectWithoutPretest_kelasInput
    connect?: PretestWhereUniqueInput
  }

  export type Kelas_sayaCreateNestedOneWithoutPretest_kelasInput = {
    create?: XOR<Kelas_sayaCreateWithoutPretest_kelasInput, Kelas_sayaUncheckedCreateWithoutPretest_kelasInput>
    connectOrCreate?: Kelas_sayaCreateOrConnectWithoutPretest_kelasInput
    connect?: Kelas_sayaWhereUniqueInput
  }

  export type PretestUpdateOneRequiredWithoutPretest_kelasNestedInput = {
    create?: XOR<PretestCreateWithoutPretest_kelasInput, PretestUncheckedCreateWithoutPretest_kelasInput>
    connectOrCreate?: PretestCreateOrConnectWithoutPretest_kelasInput
    upsert?: PretestUpsertWithoutPretest_kelasInput
    connect?: PretestWhereUniqueInput
    update?: XOR<XOR<PretestUpdateToOneWithWhereWithoutPretest_kelasInput, PretestUpdateWithoutPretest_kelasInput>, PretestUncheckedUpdateWithoutPretest_kelasInput>
  }

  export type Kelas_sayaUpdateOneRequiredWithoutPretest_kelasNestedInput = {
    create?: XOR<Kelas_sayaCreateWithoutPretest_kelasInput, Kelas_sayaUncheckedCreateWithoutPretest_kelasInput>
    connectOrCreate?: Kelas_sayaCreateOrConnectWithoutPretest_kelasInput
    upsert?: Kelas_sayaUpsertWithoutPretest_kelasInput
    connect?: Kelas_sayaWhereUniqueInput
    update?: XOR<XOR<Kelas_sayaUpdateToOneWithWhereWithoutPretest_kelasInput, Kelas_sayaUpdateWithoutPretest_kelasInput>, Kelas_sayaUncheckedUpdateWithoutPretest_kelasInput>
  }

  export type Review_pretestCreateNestedManyWithoutReviewInput = {
    create?: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput> | Review_pretestCreateWithoutReviewInput[] | Review_pretestUncheckedCreateWithoutReviewInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutReviewInput | Review_pretestCreateOrConnectWithoutReviewInput[]
    createMany?: Review_pretestCreateManyReviewInputEnvelope
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
  }

  export type Review_pretestUncheckedCreateNestedManyWithoutReviewInput = {
    create?: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput> | Review_pretestCreateWithoutReviewInput[] | Review_pretestUncheckedCreateWithoutReviewInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutReviewInput | Review_pretestCreateOrConnectWithoutReviewInput[]
    createMany?: Review_pretestCreateManyReviewInputEnvelope
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
  }

  export type Review_pretestUpdateManyWithoutReviewNestedInput = {
    create?: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput> | Review_pretestCreateWithoutReviewInput[] | Review_pretestUncheckedCreateWithoutReviewInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutReviewInput | Review_pretestCreateOrConnectWithoutReviewInput[]
    upsert?: Review_pretestUpsertWithWhereUniqueWithoutReviewInput | Review_pretestUpsertWithWhereUniqueWithoutReviewInput[]
    createMany?: Review_pretestCreateManyReviewInputEnvelope
    set?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    disconnect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    delete?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    update?: Review_pretestUpdateWithWhereUniqueWithoutReviewInput | Review_pretestUpdateWithWhereUniqueWithoutReviewInput[]
    updateMany?: Review_pretestUpdateManyWithWhereWithoutReviewInput | Review_pretestUpdateManyWithWhereWithoutReviewInput[]
    deleteMany?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
  }

  export type Review_pretestUncheckedUpdateManyWithoutReviewNestedInput = {
    create?: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput> | Review_pretestCreateWithoutReviewInput[] | Review_pretestUncheckedCreateWithoutReviewInput[]
    connectOrCreate?: Review_pretestCreateOrConnectWithoutReviewInput | Review_pretestCreateOrConnectWithoutReviewInput[]
    upsert?: Review_pretestUpsertWithWhereUniqueWithoutReviewInput | Review_pretestUpsertWithWhereUniqueWithoutReviewInput[]
    createMany?: Review_pretestCreateManyReviewInputEnvelope
    set?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    disconnect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    delete?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    connect?: Review_pretestWhereUniqueInput | Review_pretestWhereUniqueInput[]
    update?: Review_pretestUpdateWithWhereUniqueWithoutReviewInput | Review_pretestUpdateWithWhereUniqueWithoutReviewInput[]
    updateMany?: Review_pretestUpdateManyWithWhereWithoutReviewInput | Review_pretestUpdateManyWithWhereWithoutReviewInput[]
    deleteMany?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
  }

  export type PretestCreateNestedOneWithoutReview_pretestInput = {
    create?: XOR<PretestCreateWithoutReview_pretestInput, PretestUncheckedCreateWithoutReview_pretestInput>
    connectOrCreate?: PretestCreateOrConnectWithoutReview_pretestInput
    connect?: PretestWhereUniqueInput
  }

  export type ReviewCreateNestedOneWithoutReview_pretestInput = {
    create?: XOR<ReviewCreateWithoutReview_pretestInput, ReviewUncheckedCreateWithoutReview_pretestInput>
    connectOrCreate?: ReviewCreateOrConnectWithoutReview_pretestInput
    connect?: ReviewWhereUniqueInput
  }

  export type PretestUpdateOneRequiredWithoutReview_pretestNestedInput = {
    create?: XOR<PretestCreateWithoutReview_pretestInput, PretestUncheckedCreateWithoutReview_pretestInput>
    connectOrCreate?: PretestCreateOrConnectWithoutReview_pretestInput
    upsert?: PretestUpsertWithoutReview_pretestInput
    connect?: PretestWhereUniqueInput
    update?: XOR<XOR<PretestUpdateToOneWithWhereWithoutReview_pretestInput, PretestUpdateWithoutReview_pretestInput>, PretestUncheckedUpdateWithoutReview_pretestInput>
  }

  export type ReviewUpdateOneRequiredWithoutReview_pretestNestedInput = {
    create?: XOR<ReviewCreateWithoutReview_pretestInput, ReviewUncheckedCreateWithoutReview_pretestInput>
    connectOrCreate?: ReviewCreateOrConnectWithoutReview_pretestInput
    upsert?: ReviewUpsertWithoutReview_pretestInput
    connect?: ReviewWhereUniqueInput
    update?: XOR<XOR<ReviewUpdateToOneWithWhereWithoutReview_pretestInput, ReviewUpdateWithoutReview_pretestInput>, ReviewUncheckedUpdateWithoutReview_pretestInput>
  }

  export type KelasCreateNestedOneWithoutSilabusInput = {
    create?: XOR<KelasCreateWithoutSilabusInput, KelasUncheckedCreateWithoutSilabusInput>
    connectOrCreate?: KelasCreateOrConnectWithoutSilabusInput
    connect?: KelasWhereUniqueInput
  }

  export type Modul_kelasCreateNestedOneWithoutSilabusInput = {
    create?: XOR<Modul_kelasCreateWithoutSilabusInput, Modul_kelasUncheckedCreateWithoutSilabusInput>
    connectOrCreate?: Modul_kelasCreateOrConnectWithoutSilabusInput
    connect?: Modul_kelasWhereUniqueInput
  }

  export type KelasUpdateOneRequiredWithoutSilabusNestedInput = {
    create?: XOR<KelasCreateWithoutSilabusInput, KelasUncheckedCreateWithoutSilabusInput>
    connectOrCreate?: KelasCreateOrConnectWithoutSilabusInput
    upsert?: KelasUpsertWithoutSilabusInput
    connect?: KelasWhereUniqueInput
    update?: XOR<XOR<KelasUpdateToOneWithWhereWithoutSilabusInput, KelasUpdateWithoutSilabusInput>, KelasUncheckedUpdateWithoutSilabusInput>
  }

  export type Modul_kelasUpdateOneRequiredWithoutSilabusNestedInput = {
    create?: XOR<Modul_kelasCreateWithoutSilabusInput, Modul_kelasUncheckedCreateWithoutSilabusInput>
    connectOrCreate?: Modul_kelasCreateOrConnectWithoutSilabusInput
    upsert?: Modul_kelasUpsertWithoutSilabusInput
    connect?: Modul_kelasWhereUniqueInput
    update?: XOR<XOR<Modul_kelasUpdateToOneWithWhereWithoutSilabusInput, Modul_kelasUpdateWithoutSilabusInput>, Modul_kelasUncheckedUpdateWithoutSilabusInput>
  }

  export type KelasCreateNestedOneWithoutTransaksi_kelasInput = {
    create?: XOR<KelasCreateWithoutTransaksi_kelasInput, KelasUncheckedCreateWithoutTransaksi_kelasInput>
    connectOrCreate?: KelasCreateOrConnectWithoutTransaksi_kelasInput
    connect?: KelasWhereUniqueInput
  }

  export type PembayaranCreateNestedOneWithoutTransaksi_kelasInput = {
    create?: XOR<PembayaranCreateWithoutTransaksi_kelasInput, PembayaranUncheckedCreateWithoutTransaksi_kelasInput>
    connectOrCreate?: PembayaranCreateOrConnectWithoutTransaksi_kelasInput
    connect?: PembayaranWhereUniqueInput
  }

  export type KelasUpdateOneRequiredWithoutTransaksi_kelasNestedInput = {
    create?: XOR<KelasCreateWithoutTransaksi_kelasInput, KelasUncheckedCreateWithoutTransaksi_kelasInput>
    connectOrCreate?: KelasCreateOrConnectWithoutTransaksi_kelasInput
    upsert?: KelasUpsertWithoutTransaksi_kelasInput
    connect?: KelasWhereUniqueInput
    update?: XOR<XOR<KelasUpdateToOneWithWhereWithoutTransaksi_kelasInput, KelasUpdateWithoutTransaksi_kelasInput>, KelasUncheckedUpdateWithoutTransaksi_kelasInput>
  }

  export type PembayaranUpdateOneRequiredWithoutTransaksi_kelasNestedInput = {
    create?: XOR<PembayaranCreateWithoutTransaksi_kelasInput, PembayaranUncheckedCreateWithoutTransaksi_kelasInput>
    connectOrCreate?: PembayaranCreateOrConnectWithoutTransaksi_kelasInput
    upsert?: PembayaranUpsertWithoutTransaksi_kelasInput
    connect?: PembayaranWhereUniqueInput
    update?: XOR<XOR<PembayaranUpdateToOneWithWhereWithoutTransaksi_kelasInput, PembayaranUpdateWithoutTransaksi_kelasInput>, PembayaranUncheckedUpdateWithoutTransaksi_kelasInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumStatus_kelasFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_kelas | EnumStatus_kelasFieldRefInput<$PrismaModel>
    in?: $Enums.Status_kelas[]
    notIn?: $Enums.Status_kelas[]
    not?: NestedEnumStatus_kelasFilter<$PrismaModel> | $Enums.Status_kelas
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumStatus_kelasWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_kelas | EnumStatus_kelasFieldRefInput<$PrismaModel>
    in?: $Enums.Status_kelas[]
    notIn?: $Enums.Status_kelas[]
    not?: NestedEnumStatus_kelasWithAggregatesFilter<$PrismaModel> | $Enums.Status_kelas
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_kelasFilter<$PrismaModel>
    _max?: NestedEnumStatus_kelasFilter<$PrismaModel>
  }

  export type NestedEnumStatus_pembayaranFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_pembayaran | EnumStatus_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Status_pembayaran[]
    notIn?: $Enums.Status_pembayaran[]
    not?: NestedEnumStatus_pembayaranFilter<$PrismaModel> | $Enums.Status_pembayaran
  }

  export type NestedEnumStatus_pembayaranWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_pembayaran | EnumStatus_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Status_pembayaran[]
    notIn?: $Enums.Status_pembayaran[]
    not?: NestedEnumStatus_pembayaranWithAggregatesFilter<$PrismaModel> | $Enums.Status_pembayaran
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_pembayaranFilter<$PrismaModel>
    _max?: NestedEnumStatus_pembayaranFilter<$PrismaModel>
  }

  export type NestedEnumJenis_pembayaranFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenis_pembayaran | EnumJenis_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Jenis_pembayaran[]
    notIn?: $Enums.Jenis_pembayaran[]
    not?: NestedEnumJenis_pembayaranFilter<$PrismaModel> | $Enums.Jenis_pembayaran
  }

  export type NestedEnumJenis_pembayaranWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenis_pembayaran | EnumJenis_pembayaranFieldRefInput<$PrismaModel>
    in?: $Enums.Jenis_pembayaran[]
    notIn?: $Enums.Jenis_pembayaran[]
    not?: NestedEnumJenis_pembayaranWithAggregatesFilter<$PrismaModel> | $Enums.Jenis_pembayaran
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenis_pembayaranFilter<$PrismaModel>
    _max?: NestedEnumJenis_pembayaranFilter<$PrismaModel>
  }

  export type MengajarCreateWithoutTutorInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutMengajarInput
  }

  export type MengajarUncheckedCreateWithoutTutorInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type MengajarCreateOrConnectWithoutTutorInput = {
    where: MengajarWhereUniqueInput
    create: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput>
  }

  export type MengajarCreateManyTutorInputEnvelope = {
    data: MengajarCreateManyTutorInput | MengajarCreateManyTutorInput[]
    skipDuplicates?: boolean
  }

  export type MengajarUpsertWithWhereUniqueWithoutTutorInput = {
    where: MengajarWhereUniqueInput
    update: XOR<MengajarUpdateWithoutTutorInput, MengajarUncheckedUpdateWithoutTutorInput>
    create: XOR<MengajarCreateWithoutTutorInput, MengajarUncheckedCreateWithoutTutorInput>
  }

  export type MengajarUpdateWithWhereUniqueWithoutTutorInput = {
    where: MengajarWhereUniqueInput
    data: XOR<MengajarUpdateWithoutTutorInput, MengajarUncheckedUpdateWithoutTutorInput>
  }

  export type MengajarUpdateManyWithWhereWithoutTutorInput = {
    where: MengajarScalarWhereInput
    data: XOR<MengajarUpdateManyMutationInput, MengajarUncheckedUpdateManyWithoutTutorInput>
  }

  export type MengajarScalarWhereInput = {
    AND?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
    OR?: MengajarScalarWhereInput[]
    NOT?: MengajarScalarWhereInput | MengajarScalarWhereInput[]
    id?: IntFilter<"Mengajar"> | number
    id_kelas?: IntFilter<"Mengajar"> | number
    email_tutor?: StringFilter<"Mengajar"> | string
    created_at?: DateTimeFilter<"Mengajar"> | Date | string
  }

  export type Kategori_kelas_relasiCreateWithoutKelasInput = {
    created_at?: Date | string
    kategori_kelas: Kategori_kelasCreateNestedOneWithoutKategori_kelas_relasiInput
  }

  export type Kategori_kelas_relasiUncheckedCreateWithoutKelasInput = {
    id?: number
    id_kategori_kelas: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiCreateOrConnectWithoutKelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    create: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput>
  }

  export type Kategori_kelas_relasiCreateManyKelasInputEnvelope = {
    data: Kategori_kelas_relasiCreateManyKelasInput | Kategori_kelas_relasiCreateManyKelasInput[]
    skipDuplicates?: boolean
  }

  export type MengajarCreateWithoutKelasInput = {
    created_at?: Date | string
    tutor: TutorCreateNestedOneWithoutMengajarInput
  }

  export type MengajarUncheckedCreateWithoutKelasInput = {
    id?: number
    email_tutor: string
    created_at?: Date | string
  }

  export type MengajarCreateOrConnectWithoutKelasInput = {
    where: MengajarWhereUniqueInput
    create: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput>
  }

  export type MengajarCreateManyKelasInputEnvelope = {
    data: MengajarCreateManyKelasInput | MengajarCreateManyKelasInput[]
    skipDuplicates?: boolean
  }

  export type SilabusCreateWithoutKelasInput = {
    created_at?: Date | string
    modul: Modul_kelasCreateNestedOneWithoutSilabusInput
  }

  export type SilabusUncheckedCreateWithoutKelasInput = {
    id?: number
    id_modul: number
    created_at?: Date | string
  }

  export type SilabusCreateOrConnectWithoutKelasInput = {
    where: SilabusWhereUniqueInput
    create: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput>
  }

  export type SilabusCreateManyKelasInputEnvelope = {
    data: SilabusCreateManyKelasInput | SilabusCreateManyKelasInput[]
    skipDuplicates?: boolean
  }

  export type Transaksi_kelasCreateWithoutKelasInput = {
    created_at?: Date | string
    pembayaran: PembayaranCreateNestedOneWithoutTransaksi_kelasInput
  }

  export type Transaksi_kelasUncheckedCreateWithoutKelasInput = {
    id?: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Transaksi_kelasCreateOrConnectWithoutKelasInput = {
    where: Transaksi_kelasWhereUniqueInput
    create: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput>
  }

  export type Transaksi_kelasCreateManyKelasInputEnvelope = {
    data: Transaksi_kelasCreateManyKelasInput | Transaksi_kelasCreateManyKelasInput[]
    skipDuplicates?: boolean
  }

  export type Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    update: XOR<Kategori_kelas_relasiUpdateWithoutKelasInput, Kategori_kelas_relasiUncheckedUpdateWithoutKelasInput>
    create: XOR<Kategori_kelas_relasiCreateWithoutKelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKelasInput>
  }

  export type Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    data: XOR<Kategori_kelas_relasiUpdateWithoutKelasInput, Kategori_kelas_relasiUncheckedUpdateWithoutKelasInput>
  }

  export type Kategori_kelas_relasiUpdateManyWithWhereWithoutKelasInput = {
    where: Kategori_kelas_relasiScalarWhereInput
    data: XOR<Kategori_kelas_relasiUpdateManyMutationInput, Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasInput>
  }

  export type Kategori_kelas_relasiScalarWhereInput = {
    AND?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
    OR?: Kategori_kelas_relasiScalarWhereInput[]
    NOT?: Kategori_kelas_relasiScalarWhereInput | Kategori_kelas_relasiScalarWhereInput[]
    id?: IntFilter<"Kategori_kelas_relasi"> | number
    id_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    id_kategori_kelas?: IntFilter<"Kategori_kelas_relasi"> | number
    created_at?: DateTimeFilter<"Kategori_kelas_relasi"> | Date | string
  }

  export type MengajarUpsertWithWhereUniqueWithoutKelasInput = {
    where: MengajarWhereUniqueInput
    update: XOR<MengajarUpdateWithoutKelasInput, MengajarUncheckedUpdateWithoutKelasInput>
    create: XOR<MengajarCreateWithoutKelasInput, MengajarUncheckedCreateWithoutKelasInput>
  }

  export type MengajarUpdateWithWhereUniqueWithoutKelasInput = {
    where: MengajarWhereUniqueInput
    data: XOR<MengajarUpdateWithoutKelasInput, MengajarUncheckedUpdateWithoutKelasInput>
  }

  export type MengajarUpdateManyWithWhereWithoutKelasInput = {
    where: MengajarScalarWhereInput
    data: XOR<MengajarUpdateManyMutationInput, MengajarUncheckedUpdateManyWithoutKelasInput>
  }

  export type SilabusUpsertWithWhereUniqueWithoutKelasInput = {
    where: SilabusWhereUniqueInput
    update: XOR<SilabusUpdateWithoutKelasInput, SilabusUncheckedUpdateWithoutKelasInput>
    create: XOR<SilabusCreateWithoutKelasInput, SilabusUncheckedCreateWithoutKelasInput>
  }

  export type SilabusUpdateWithWhereUniqueWithoutKelasInput = {
    where: SilabusWhereUniqueInput
    data: XOR<SilabusUpdateWithoutKelasInput, SilabusUncheckedUpdateWithoutKelasInput>
  }

  export type SilabusUpdateManyWithWhereWithoutKelasInput = {
    where: SilabusScalarWhereInput
    data: XOR<SilabusUpdateManyMutationInput, SilabusUncheckedUpdateManyWithoutKelasInput>
  }

  export type SilabusScalarWhereInput = {
    AND?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
    OR?: SilabusScalarWhereInput[]
    NOT?: SilabusScalarWhereInput | SilabusScalarWhereInput[]
    id?: IntFilter<"Silabus"> | number
    id_kelas?: IntFilter<"Silabus"> | number
    id_modul?: IntFilter<"Silabus"> | number
    created_at?: DateTimeFilter<"Silabus"> | Date | string
  }

  export type Transaksi_kelasUpsertWithWhereUniqueWithoutKelasInput = {
    where: Transaksi_kelasWhereUniqueInput
    update: XOR<Transaksi_kelasUpdateWithoutKelasInput, Transaksi_kelasUncheckedUpdateWithoutKelasInput>
    create: XOR<Transaksi_kelasCreateWithoutKelasInput, Transaksi_kelasUncheckedCreateWithoutKelasInput>
  }

  export type Transaksi_kelasUpdateWithWhereUniqueWithoutKelasInput = {
    where: Transaksi_kelasWhereUniqueInput
    data: XOR<Transaksi_kelasUpdateWithoutKelasInput, Transaksi_kelasUncheckedUpdateWithoutKelasInput>
  }

  export type Transaksi_kelasUpdateManyWithWhereWithoutKelasInput = {
    where: Transaksi_kelasScalarWhereInput
    data: XOR<Transaksi_kelasUpdateManyMutationInput, Transaksi_kelasUncheckedUpdateManyWithoutKelasInput>
  }

  export type Transaksi_kelasScalarWhereInput = {
    AND?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
    OR?: Transaksi_kelasScalarWhereInput[]
    NOT?: Transaksi_kelasScalarWhereInput | Transaksi_kelasScalarWhereInput[]
    id?: IntFilter<"Transaksi_kelas"> | number
    id_kelas?: IntFilter<"Transaksi_kelas"> | number
    id_pembayaran?: IntFilter<"Transaksi_kelas"> | number
    created_at?: DateTimeFilter<"Transaksi_kelas"> | Date | string
  }

  export type Kategori_kelas_relasiCreateWithoutKategori_kelasInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutKategori_kelas_relasiInput
  }

  export type Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiCreateOrConnectWithoutKategori_kelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    create: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput>
  }

  export type Kategori_kelas_relasiCreateManyKategori_kelasInputEnvelope = {
    data: Kategori_kelas_relasiCreateManyKategori_kelasInput | Kategori_kelas_relasiCreateManyKategori_kelasInput[]
    skipDuplicates?: boolean
  }

  export type Kategori_kelas_relasiUpsertWithWhereUniqueWithoutKategori_kelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    update: XOR<Kategori_kelas_relasiUpdateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedUpdateWithoutKategori_kelasInput>
    create: XOR<Kategori_kelas_relasiCreateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedCreateWithoutKategori_kelasInput>
  }

  export type Kategori_kelas_relasiUpdateWithWhereUniqueWithoutKategori_kelasInput = {
    where: Kategori_kelas_relasiWhereUniqueInput
    data: XOR<Kategori_kelas_relasiUpdateWithoutKategori_kelasInput, Kategori_kelas_relasiUncheckedUpdateWithoutKategori_kelasInput>
  }

  export type Kategori_kelas_relasiUpdateManyWithWhereWithoutKategori_kelasInput = {
    where: Kategori_kelas_relasiScalarWhereInput
    data: XOR<Kategori_kelas_relasiUpdateManyMutationInput, Kategori_kelas_relasiUncheckedUpdateManyWithoutKategori_kelasInput>
  }

  export type KelasCreateWithoutKategori_kelas_relasiInput = {
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    mengajar?: MengajarCreateNestedManyWithoutKelasInput
    silabus?: SilabusCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutKelasInput
  }

  export type KelasUncheckedCreateWithoutKategori_kelas_relasiInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    mengajar?: MengajarUncheckedCreateNestedManyWithoutKelasInput
    silabus?: SilabusUncheckedCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutKelasInput
  }

  export type KelasCreateOrConnectWithoutKategori_kelas_relasiInput = {
    where: KelasWhereUniqueInput
    create: XOR<KelasCreateWithoutKategori_kelas_relasiInput, KelasUncheckedCreateWithoutKategori_kelas_relasiInput>
  }

  export type Kategori_kelasCreateWithoutKategori_kelas_relasiInput = {
    nama: string
    created_at?: Date | string
  }

  export type Kategori_kelasUncheckedCreateWithoutKategori_kelas_relasiInput = {
    id?: number
    nama: string
    created_at?: Date | string
  }

  export type Kategori_kelasCreateOrConnectWithoutKategori_kelas_relasiInput = {
    where: Kategori_kelasWhereUniqueInput
    create: XOR<Kategori_kelasCreateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedCreateWithoutKategori_kelas_relasiInput>
  }

  export type KelasUpsertWithoutKategori_kelas_relasiInput = {
    update: XOR<KelasUpdateWithoutKategori_kelas_relasiInput, KelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
    create: XOR<KelasCreateWithoutKategori_kelas_relasiInput, KelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    where?: KelasWhereInput
  }

  export type KelasUpdateToOneWithWhereWithoutKategori_kelas_relasiInput = {
    where?: KelasWhereInput
    data: XOR<KelasUpdateWithoutKategori_kelas_relasiInput, KelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
  }

  export type KelasUpdateWithoutKategori_kelas_relasiInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    mengajar?: MengajarUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutKelasNestedInput
  }

  export type KelasUncheckedUpdateWithoutKategori_kelas_relasiInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    mengajar?: MengajarUncheckedUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUncheckedUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutKelasNestedInput
  }

  export type Kategori_kelasUpsertWithoutKategori_kelas_relasiInput = {
    update: XOR<Kategori_kelasUpdateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
    create: XOR<Kategori_kelasCreateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedCreateWithoutKategori_kelas_relasiInput>
    where?: Kategori_kelasWhereInput
  }

  export type Kategori_kelasUpdateToOneWithWhereWithoutKategori_kelas_relasiInput = {
    where?: Kategori_kelasWhereInput
    data: XOR<Kategori_kelasUpdateWithoutKategori_kelas_relasiInput, Kategori_kelasUncheckedUpdateWithoutKategori_kelas_relasiInput>
  }

  export type Kategori_kelasUpdateWithoutKategori_kelas_relasiInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelasUncheckedUpdateWithoutKategori_kelas_relasiInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasCreateWithoutKelas_sayaInput = {
    created_at?: Date | string
    orders: OrderCreateNestedOneWithoutOrders_kelasInput
  }

  export type Orders_kelasUncheckedCreateWithoutKelas_sayaInput = {
    id?: number
    id_orders: number
    created_at?: Date | string
  }

  export type Orders_kelasCreateOrConnectWithoutKelas_sayaInput = {
    where: Orders_kelasWhereUniqueInput
    create: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput>
  }

  export type Orders_kelasCreateManyKelas_sayaInputEnvelope = {
    data: Orders_kelasCreateManyKelas_sayaInput | Orders_kelasCreateManyKelas_sayaInput[]
    skipDuplicates?: boolean
  }

  export type Pretest_kelasCreateWithoutKelas_sayaInput = {
    created_at?: Date | string
    pretest: PretestCreateNestedOneWithoutPretest_kelasInput
  }

  export type Pretest_kelasUncheckedCreateWithoutKelas_sayaInput = {
    id?: number
    id_pretest: number
    created_at?: Date | string
  }

  export type Pretest_kelasCreateOrConnectWithoutKelas_sayaInput = {
    where: Pretest_kelasWhereUniqueInput
    create: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput>
  }

  export type Pretest_kelasCreateManyKelas_sayaInputEnvelope = {
    data: Pretest_kelasCreateManyKelas_sayaInput | Pretest_kelasCreateManyKelas_sayaInput[]
    skipDuplicates?: boolean
  }

  export type Orders_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput = {
    where: Orders_kelasWhereUniqueInput
    update: XOR<Orders_kelasUpdateWithoutKelas_sayaInput, Orders_kelasUncheckedUpdateWithoutKelas_sayaInput>
    create: XOR<Orders_kelasCreateWithoutKelas_sayaInput, Orders_kelasUncheckedCreateWithoutKelas_sayaInput>
  }

  export type Orders_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput = {
    where: Orders_kelasWhereUniqueInput
    data: XOR<Orders_kelasUpdateWithoutKelas_sayaInput, Orders_kelasUncheckedUpdateWithoutKelas_sayaInput>
  }

  export type Orders_kelasUpdateManyWithWhereWithoutKelas_sayaInput = {
    where: Orders_kelasScalarWhereInput
    data: XOR<Orders_kelasUpdateManyMutationInput, Orders_kelasUncheckedUpdateManyWithoutKelas_sayaInput>
  }

  export type Orders_kelasScalarWhereInput = {
    AND?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
    OR?: Orders_kelasScalarWhereInput[]
    NOT?: Orders_kelasScalarWhereInput | Orders_kelasScalarWhereInput[]
    id?: IntFilter<"Orders_kelas"> | number
    id_orders?: IntFilter<"Orders_kelas"> | number
    id_kelas_saya?: IntFilter<"Orders_kelas"> | number
    created_at?: DateTimeFilter<"Orders_kelas"> | Date | string
  }

  export type Pretest_kelasUpsertWithWhereUniqueWithoutKelas_sayaInput = {
    where: Pretest_kelasWhereUniqueInput
    update: XOR<Pretest_kelasUpdateWithoutKelas_sayaInput, Pretest_kelasUncheckedUpdateWithoutKelas_sayaInput>
    create: XOR<Pretest_kelasCreateWithoutKelas_sayaInput, Pretest_kelasUncheckedCreateWithoutKelas_sayaInput>
  }

  export type Pretest_kelasUpdateWithWhereUniqueWithoutKelas_sayaInput = {
    where: Pretest_kelasWhereUniqueInput
    data: XOR<Pretest_kelasUpdateWithoutKelas_sayaInput, Pretest_kelasUncheckedUpdateWithoutKelas_sayaInput>
  }

  export type Pretest_kelasUpdateManyWithWhereWithoutKelas_sayaInput = {
    where: Pretest_kelasScalarWhereInput
    data: XOR<Pretest_kelasUpdateManyMutationInput, Pretest_kelasUncheckedUpdateManyWithoutKelas_sayaInput>
  }

  export type Pretest_kelasScalarWhereInput = {
    AND?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
    OR?: Pretest_kelasScalarWhereInput[]
    NOT?: Pretest_kelasScalarWhereInput | Pretest_kelasScalarWhereInput[]
    id?: IntFilter<"Pretest_kelas"> | number
    id_pretest?: IntFilter<"Pretest_kelas"> | number
    id_kelas_saya?: IntFilter<"Pretest_kelas"> | number
    created_at?: DateTimeFilter<"Pretest_kelas"> | Date | string
  }

  export type Modul_materialCreateWithoutMaterialInput = {
    modul_kelas: Modul_kelasCreateNestedOneWithoutModul_materialInput
  }

  export type Modul_materialUncheckedCreateWithoutMaterialInput = {
    id?: number
    id_modul_kelas: number
  }

  export type Modul_materialCreateOrConnectWithoutMaterialInput = {
    where: Modul_materialWhereUniqueInput
    create: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput>
  }

  export type Modul_materialCreateManyMaterialInputEnvelope = {
    data: Modul_materialCreateManyMaterialInput | Modul_materialCreateManyMaterialInput[]
    skipDuplicates?: boolean
  }

  export type Modul_materialUpsertWithWhereUniqueWithoutMaterialInput = {
    where: Modul_materialWhereUniqueInput
    update: XOR<Modul_materialUpdateWithoutMaterialInput, Modul_materialUncheckedUpdateWithoutMaterialInput>
    create: XOR<Modul_materialCreateWithoutMaterialInput, Modul_materialUncheckedCreateWithoutMaterialInput>
  }

  export type Modul_materialUpdateWithWhereUniqueWithoutMaterialInput = {
    where: Modul_materialWhereUniqueInput
    data: XOR<Modul_materialUpdateWithoutMaterialInput, Modul_materialUncheckedUpdateWithoutMaterialInput>
  }

  export type Modul_materialUpdateManyWithWhereWithoutMaterialInput = {
    where: Modul_materialScalarWhereInput
    data: XOR<Modul_materialUpdateManyMutationInput, Modul_materialUncheckedUpdateManyWithoutMaterialInput>
  }

  export type Modul_materialScalarWhereInput = {
    AND?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
    OR?: Modul_materialScalarWhereInput[]
    NOT?: Modul_materialScalarWhereInput | Modul_materialScalarWhereInput[]
    id?: IntFilter<"Modul_material"> | number
    id_material?: IntFilter<"Modul_material"> | number
    id_modul_kelas?: IntFilter<"Modul_material"> | number
  }

  export type KelasCreateWithoutMengajarInput = {
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiCreateNestedManyWithoutKelasInput
    silabus?: SilabusCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutKelasInput
  }

  export type KelasUncheckedCreateWithoutMengajarInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKelasInput
    silabus?: SilabusUncheckedCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutKelasInput
  }

  export type KelasCreateOrConnectWithoutMengajarInput = {
    where: KelasWhereUniqueInput
    create: XOR<KelasCreateWithoutMengajarInput, KelasUncheckedCreateWithoutMengajarInput>
  }

  export type TutorCreateWithoutMengajarInput = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at?: Date | string
  }

  export type TutorUncheckedCreateWithoutMengajarInput = {
    nama: string
    email: string
    password: string
    jabatan: string
    perusahaan: string
    created_at?: Date | string
  }

  export type TutorCreateOrConnectWithoutMengajarInput = {
    where: TutorWhereUniqueInput
    create: XOR<TutorCreateWithoutMengajarInput, TutorUncheckedCreateWithoutMengajarInput>
  }

  export type KelasUpsertWithoutMengajarInput = {
    update: XOR<KelasUpdateWithoutMengajarInput, KelasUncheckedUpdateWithoutMengajarInput>
    create: XOR<KelasCreateWithoutMengajarInput, KelasUncheckedCreateWithoutMengajarInput>
    where?: KelasWhereInput
  }

  export type KelasUpdateToOneWithWhereWithoutMengajarInput = {
    where?: KelasWhereInput
    data: XOR<KelasUpdateWithoutMengajarInput, KelasUncheckedUpdateWithoutMengajarInput>
  }

  export type KelasUpdateWithoutMengajarInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutKelasNestedInput
  }

  export type KelasUncheckedUpdateWithoutMengajarInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUncheckedUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutKelasNestedInput
  }

  export type TutorUpsertWithoutMengajarInput = {
    update: XOR<TutorUpdateWithoutMengajarInput, TutorUncheckedUpdateWithoutMengajarInput>
    create: XOR<TutorCreateWithoutMengajarInput, TutorUncheckedCreateWithoutMengajarInput>
    where?: TutorWhereInput
  }

  export type TutorUpdateToOneWithWhereWithoutMengajarInput = {
    where?: TutorWhereInput
    data: XOR<TutorUpdateWithoutMengajarInput, TutorUncheckedUpdateWithoutMengajarInput>
  }

  export type TutorUpdateWithoutMengajarInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TutorUncheckedUpdateWithoutMengajarInput = {
    nama?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    jabatan?: StringFieldUpdateOperationsInput | string
    perusahaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_materialCreateWithoutModul_kelasInput = {
    material: MaterialCreateNestedOneWithoutModul_materialInput
  }

  export type Modul_materialUncheckedCreateWithoutModul_kelasInput = {
    id?: number
    id_material: number
  }

  export type Modul_materialCreateOrConnectWithoutModul_kelasInput = {
    where: Modul_materialWhereUniqueInput
    create: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput>
  }

  export type Modul_materialCreateManyModul_kelasInputEnvelope = {
    data: Modul_materialCreateManyModul_kelasInput | Modul_materialCreateManyModul_kelasInput[]
    skipDuplicates?: boolean
  }

  export type SilabusCreateWithoutModulInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutSilabusInput
  }

  export type SilabusUncheckedCreateWithoutModulInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type SilabusCreateOrConnectWithoutModulInput = {
    where: SilabusWhereUniqueInput
    create: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput>
  }

  export type SilabusCreateManyModulInputEnvelope = {
    data: SilabusCreateManyModulInput | SilabusCreateManyModulInput[]
    skipDuplicates?: boolean
  }

  export type Modul_materialUpsertWithWhereUniqueWithoutModul_kelasInput = {
    where: Modul_materialWhereUniqueInput
    update: XOR<Modul_materialUpdateWithoutModul_kelasInput, Modul_materialUncheckedUpdateWithoutModul_kelasInput>
    create: XOR<Modul_materialCreateWithoutModul_kelasInput, Modul_materialUncheckedCreateWithoutModul_kelasInput>
  }

  export type Modul_materialUpdateWithWhereUniqueWithoutModul_kelasInput = {
    where: Modul_materialWhereUniqueInput
    data: XOR<Modul_materialUpdateWithoutModul_kelasInput, Modul_materialUncheckedUpdateWithoutModul_kelasInput>
  }

  export type Modul_materialUpdateManyWithWhereWithoutModul_kelasInput = {
    where: Modul_materialScalarWhereInput
    data: XOR<Modul_materialUpdateManyMutationInput, Modul_materialUncheckedUpdateManyWithoutModul_kelasInput>
  }

  export type SilabusUpsertWithWhereUniqueWithoutModulInput = {
    where: SilabusWhereUniqueInput
    update: XOR<SilabusUpdateWithoutModulInput, SilabusUncheckedUpdateWithoutModulInput>
    create: XOR<SilabusCreateWithoutModulInput, SilabusUncheckedCreateWithoutModulInput>
  }

  export type SilabusUpdateWithWhereUniqueWithoutModulInput = {
    where: SilabusWhereUniqueInput
    data: XOR<SilabusUpdateWithoutModulInput, SilabusUncheckedUpdateWithoutModulInput>
  }

  export type SilabusUpdateManyWithWhereWithoutModulInput = {
    where: SilabusScalarWhereInput
    data: XOR<SilabusUpdateManyMutationInput, SilabusUncheckedUpdateManyWithoutModulInput>
  }

  export type MaterialCreateWithoutModul_materialInput = {
    durasi: Date | string
    kuis: string
    rangkuman: string
    created_at?: Date | string
  }

  export type MaterialUncheckedCreateWithoutModul_materialInput = {
    id?: number
    durasi: Date | string
    kuis: string
    rangkuman: string
    created_at?: Date | string
  }

  export type MaterialCreateOrConnectWithoutModul_materialInput = {
    where: MaterialWhereUniqueInput
    create: XOR<MaterialCreateWithoutModul_materialInput, MaterialUncheckedCreateWithoutModul_materialInput>
  }

  export type Modul_kelasCreateWithoutModul_materialInput = {
    nama: string
    created_at?: Date | string
    silabus?: SilabusCreateNestedManyWithoutModulInput
  }

  export type Modul_kelasUncheckedCreateWithoutModul_materialInput = {
    id?: number
    nama: string
    created_at?: Date | string
    silabus?: SilabusUncheckedCreateNestedManyWithoutModulInput
  }

  export type Modul_kelasCreateOrConnectWithoutModul_materialInput = {
    where: Modul_kelasWhereUniqueInput
    create: XOR<Modul_kelasCreateWithoutModul_materialInput, Modul_kelasUncheckedCreateWithoutModul_materialInput>
  }

  export type MaterialUpsertWithoutModul_materialInput = {
    update: XOR<MaterialUpdateWithoutModul_materialInput, MaterialUncheckedUpdateWithoutModul_materialInput>
    create: XOR<MaterialCreateWithoutModul_materialInput, MaterialUncheckedCreateWithoutModul_materialInput>
    where?: MaterialWhereInput
  }

  export type MaterialUpdateToOneWithWhereWithoutModul_materialInput = {
    where?: MaterialWhereInput
    data: XOR<MaterialUpdateWithoutModul_materialInput, MaterialUncheckedUpdateWithoutModul_materialInput>
  }

  export type MaterialUpdateWithoutModul_materialInput = {
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialUncheckedUpdateWithoutModul_materialInput = {
    id?: IntFieldUpdateOperationsInput | number
    durasi?: DateTimeFieldUpdateOperationsInput | Date | string
    kuis?: StringFieldUpdateOperationsInput | string
    rangkuman?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_kelasUpsertWithoutModul_materialInput = {
    update: XOR<Modul_kelasUpdateWithoutModul_materialInput, Modul_kelasUncheckedUpdateWithoutModul_materialInput>
    create: XOR<Modul_kelasCreateWithoutModul_materialInput, Modul_kelasUncheckedCreateWithoutModul_materialInput>
    where?: Modul_kelasWhereInput
  }

  export type Modul_kelasUpdateToOneWithWhereWithoutModul_materialInput = {
    where?: Modul_kelasWhereInput
    data: XOR<Modul_kelasUpdateWithoutModul_materialInput, Modul_kelasUncheckedUpdateWithoutModul_materialInput>
  }

  export type Modul_kelasUpdateWithoutModul_materialInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    silabus?: SilabusUpdateManyWithoutModulNestedInput
  }

  export type Modul_kelasUncheckedUpdateWithoutModul_materialInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    silabus?: SilabusUncheckedUpdateManyWithoutModulNestedInput
  }

  export type Orders_kelasCreateWithoutOrdersInput = {
    created_at?: Date | string
    kelas_saya: Kelas_sayaCreateNestedOneWithoutOrders_kelasInput
  }

  export type Orders_kelasUncheckedCreateWithoutOrdersInput = {
    id?: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Orders_kelasCreateOrConnectWithoutOrdersInput = {
    where: Orders_kelasWhereUniqueInput
    create: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput>
  }

  export type Orders_kelasCreateManyOrdersInputEnvelope = {
    data: Orders_kelasCreateManyOrdersInput | Orders_kelasCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type Orders_pembayaranCreateWithoutOrdersInput = {
    created_at?: Date | string
    pembayaran: PembayaranCreateNestedOneWithoutOrders_pembayaranInput
  }

  export type Orders_pembayaranUncheckedCreateWithoutOrdersInput = {
    id?: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Orders_pembayaranCreateOrConnectWithoutOrdersInput = {
    where: Orders_pembayaranWhereUniqueInput
    create: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput>
  }

  export type Orders_pembayaranCreateManyOrdersInputEnvelope = {
    data: Orders_pembayaranCreateManyOrdersInput | Orders_pembayaranCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type Orders_kelasUpsertWithWhereUniqueWithoutOrdersInput = {
    where: Orders_kelasWhereUniqueInput
    update: XOR<Orders_kelasUpdateWithoutOrdersInput, Orders_kelasUncheckedUpdateWithoutOrdersInput>
    create: XOR<Orders_kelasCreateWithoutOrdersInput, Orders_kelasUncheckedCreateWithoutOrdersInput>
  }

  export type Orders_kelasUpdateWithWhereUniqueWithoutOrdersInput = {
    where: Orders_kelasWhereUniqueInput
    data: XOR<Orders_kelasUpdateWithoutOrdersInput, Orders_kelasUncheckedUpdateWithoutOrdersInput>
  }

  export type Orders_kelasUpdateManyWithWhereWithoutOrdersInput = {
    where: Orders_kelasScalarWhereInput
    data: XOR<Orders_kelasUpdateManyMutationInput, Orders_kelasUncheckedUpdateManyWithoutOrdersInput>
  }

  export type Orders_pembayaranUpsertWithWhereUniqueWithoutOrdersInput = {
    where: Orders_pembayaranWhereUniqueInput
    update: XOR<Orders_pembayaranUpdateWithoutOrdersInput, Orders_pembayaranUncheckedUpdateWithoutOrdersInput>
    create: XOR<Orders_pembayaranCreateWithoutOrdersInput, Orders_pembayaranUncheckedCreateWithoutOrdersInput>
  }

  export type Orders_pembayaranUpdateWithWhereUniqueWithoutOrdersInput = {
    where: Orders_pembayaranWhereUniqueInput
    data: XOR<Orders_pembayaranUpdateWithoutOrdersInput, Orders_pembayaranUncheckedUpdateWithoutOrdersInput>
  }

  export type Orders_pembayaranUpdateManyWithWhereWithoutOrdersInput = {
    where: Orders_pembayaranScalarWhereInput
    data: XOR<Orders_pembayaranUpdateManyMutationInput, Orders_pembayaranUncheckedUpdateManyWithoutOrdersInput>
  }

  export type Orders_pembayaranScalarWhereInput = {
    AND?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
    OR?: Orders_pembayaranScalarWhereInput[]
    NOT?: Orders_pembayaranScalarWhereInput | Orders_pembayaranScalarWhereInput[]
    id?: IntFilter<"Orders_pembayaran"> | number
    id_orders?: IntFilter<"Orders_pembayaran"> | number
    id_pembayaran?: IntFilter<"Orders_pembayaran"> | number
    created_at?: DateTimeFilter<"Orders_pembayaran"> | Date | string
  }

  export type OrderCreateWithoutOrders_kelasInput = {
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranCreateNestedManyWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutOrders_kelasInput = {
    id?: number
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type OrderCreateOrConnectWithoutOrders_kelasInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrders_kelasInput, OrderUncheckedCreateWithoutOrders_kelasInput>
  }

  export type Kelas_sayaCreateWithoutOrders_kelasInput = {
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaUncheckedCreateWithoutOrders_kelasInput = {
    id?: number
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaCreateOrConnectWithoutOrders_kelasInput = {
    where: Kelas_sayaWhereUniqueInput
    create: XOR<Kelas_sayaCreateWithoutOrders_kelasInput, Kelas_sayaUncheckedCreateWithoutOrders_kelasInput>
  }

  export type OrderUpsertWithoutOrders_kelasInput = {
    update: XOR<OrderUpdateWithoutOrders_kelasInput, OrderUncheckedUpdateWithoutOrders_kelasInput>
    create: XOR<OrderCreateWithoutOrders_kelasInput, OrderUncheckedCreateWithoutOrders_kelasInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrders_kelasInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrders_kelasInput, OrderUncheckedUpdateWithoutOrders_kelasInput>
  }

  export type OrderUpdateWithoutOrders_kelasInput = {
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUpdateManyWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrders_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type Kelas_sayaUpsertWithoutOrders_kelasInput = {
    update: XOR<Kelas_sayaUpdateWithoutOrders_kelasInput, Kelas_sayaUncheckedUpdateWithoutOrders_kelasInput>
    create: XOR<Kelas_sayaCreateWithoutOrders_kelasInput, Kelas_sayaUncheckedCreateWithoutOrders_kelasInput>
    where?: Kelas_sayaWhereInput
  }

  export type Kelas_sayaUpdateToOneWithWhereWithoutOrders_kelasInput = {
    where?: Kelas_sayaWhereInput
    data: XOR<Kelas_sayaUpdateWithoutOrders_kelasInput, Kelas_sayaUncheckedUpdateWithoutOrders_kelasInput>
  }

  export type Kelas_sayaUpdateWithoutOrders_kelasInput = {
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Kelas_sayaUncheckedUpdateWithoutOrders_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Orders_pembayaranCreateWithoutPembayaranInput = {
    created_at?: Date | string
    orders: OrderCreateNestedOneWithoutOrders_pembayaranInput
  }

  export type Orders_pembayaranUncheckedCreateWithoutPembayaranInput = {
    id?: number
    id_orders: number
    created_at?: Date | string
  }

  export type Orders_pembayaranCreateOrConnectWithoutPembayaranInput = {
    where: Orders_pembayaranWhereUniqueInput
    create: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput>
  }

  export type Orders_pembayaranCreateManyPembayaranInputEnvelope = {
    data: Orders_pembayaranCreateManyPembayaranInput | Orders_pembayaranCreateManyPembayaranInput[]
    skipDuplicates?: boolean
  }

  export type Transaksi_kelasCreateWithoutPembayaranInput = {
    created_at?: Date | string
    kelas: KelasCreateNestedOneWithoutTransaksi_kelasInput
  }

  export type Transaksi_kelasUncheckedCreateWithoutPembayaranInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type Transaksi_kelasCreateOrConnectWithoutPembayaranInput = {
    where: Transaksi_kelasWhereUniqueInput
    create: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput>
  }

  export type Transaksi_kelasCreateManyPembayaranInputEnvelope = {
    data: Transaksi_kelasCreateManyPembayaranInput | Transaksi_kelasCreateManyPembayaranInput[]
    skipDuplicates?: boolean
  }

  export type Orders_pembayaranUpsertWithWhereUniqueWithoutPembayaranInput = {
    where: Orders_pembayaranWhereUniqueInput
    update: XOR<Orders_pembayaranUpdateWithoutPembayaranInput, Orders_pembayaranUncheckedUpdateWithoutPembayaranInput>
    create: XOR<Orders_pembayaranCreateWithoutPembayaranInput, Orders_pembayaranUncheckedCreateWithoutPembayaranInput>
  }

  export type Orders_pembayaranUpdateWithWhereUniqueWithoutPembayaranInput = {
    where: Orders_pembayaranWhereUniqueInput
    data: XOR<Orders_pembayaranUpdateWithoutPembayaranInput, Orders_pembayaranUncheckedUpdateWithoutPembayaranInput>
  }

  export type Orders_pembayaranUpdateManyWithWhereWithoutPembayaranInput = {
    where: Orders_pembayaranScalarWhereInput
    data: XOR<Orders_pembayaranUpdateManyMutationInput, Orders_pembayaranUncheckedUpdateManyWithoutPembayaranInput>
  }

  export type Transaksi_kelasUpsertWithWhereUniqueWithoutPembayaranInput = {
    where: Transaksi_kelasWhereUniqueInput
    update: XOR<Transaksi_kelasUpdateWithoutPembayaranInput, Transaksi_kelasUncheckedUpdateWithoutPembayaranInput>
    create: XOR<Transaksi_kelasCreateWithoutPembayaranInput, Transaksi_kelasUncheckedCreateWithoutPembayaranInput>
  }

  export type Transaksi_kelasUpdateWithWhereUniqueWithoutPembayaranInput = {
    where: Transaksi_kelasWhereUniqueInput
    data: XOR<Transaksi_kelasUpdateWithoutPembayaranInput, Transaksi_kelasUncheckedUpdateWithoutPembayaranInput>
  }

  export type Transaksi_kelasUpdateManyWithWhereWithoutPembayaranInput = {
    where: Transaksi_kelasScalarWhereInput
    data: XOR<Transaksi_kelasUpdateManyMutationInput, Transaksi_kelasUncheckedUpdateManyWithoutPembayaranInput>
  }

  export type OrderCreateWithoutOrders_pembayaranInput = {
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_kelas?: Orders_kelasCreateNestedManyWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutOrders_pembayaranInput = {
    id?: number
    nama: string
    invoice: string
    waktu_transaksi: Date | string
    total_pembayaran: Decimal | DecimalJsLike | number | string
    harga: Decimal | DecimalJsLike | number | string
    status_pembayaran: $Enums.Status_pembayaran
    created_at?: Date | string
    orders_kelas?: Orders_kelasUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type OrderCreateOrConnectWithoutOrders_pembayaranInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrders_pembayaranInput, OrderUncheckedCreateWithoutOrders_pembayaranInput>
  }

  export type PembayaranCreateWithoutOrders_pembayaranInput = {
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranUncheckedCreateWithoutOrders_pembayaranInput = {
    id?: number
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranCreateOrConnectWithoutOrders_pembayaranInput = {
    where: PembayaranWhereUniqueInput
    create: XOR<PembayaranCreateWithoutOrders_pembayaranInput, PembayaranUncheckedCreateWithoutOrders_pembayaranInput>
  }

  export type OrderUpsertWithoutOrders_pembayaranInput = {
    update: XOR<OrderUpdateWithoutOrders_pembayaranInput, OrderUncheckedUpdateWithoutOrders_pembayaranInput>
    create: XOR<OrderCreateWithoutOrders_pembayaranInput, OrderUncheckedCreateWithoutOrders_pembayaranInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrders_pembayaranInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrders_pembayaranInput, OrderUncheckedUpdateWithoutOrders_pembayaranInput>
  }

  export type OrderUpdateWithoutOrders_pembayaranInput = {
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUpdateManyWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrders_pembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    invoice?: StringFieldUpdateOperationsInput | string
    waktu_transaksi?: DateTimeFieldUpdateOperationsInput | Date | string
    total_pembayaran?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_pembayaran?: EnumStatus_pembayaranFieldUpdateOperationsInput | $Enums.Status_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type PembayaranUpsertWithoutOrders_pembayaranInput = {
    update: XOR<PembayaranUpdateWithoutOrders_pembayaranInput, PembayaranUncheckedUpdateWithoutOrders_pembayaranInput>
    create: XOR<PembayaranCreateWithoutOrders_pembayaranInput, PembayaranUncheckedCreateWithoutOrders_pembayaranInput>
    where?: PembayaranWhereInput
  }

  export type PembayaranUpdateToOneWithWhereWithoutOrders_pembayaranInput = {
    where?: PembayaranWhereInput
    data: XOR<PembayaranUpdateWithoutOrders_pembayaranInput, PembayaranUncheckedUpdateWithoutOrders_pembayaranInput>
  }

  export type PembayaranUpdateWithoutOrders_pembayaranInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutPembayaranNestedInput
  }

  export type PembayaranUncheckedUpdateWithoutOrders_pembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutPembayaranNestedInput
  }

  export type Pretest_kelasCreateWithoutPretestInput = {
    created_at?: Date | string
    kelas_saya: Kelas_sayaCreateNestedOneWithoutPretest_kelasInput
  }

  export type Pretest_kelasUncheckedCreateWithoutPretestInput = {
    id?: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Pretest_kelasCreateOrConnectWithoutPretestInput = {
    where: Pretest_kelasWhereUniqueInput
    create: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput>
  }

  export type Pretest_kelasCreateManyPretestInputEnvelope = {
    data: Pretest_kelasCreateManyPretestInput | Pretest_kelasCreateManyPretestInput[]
    skipDuplicates?: boolean
  }

  export type Review_pretestCreateWithoutPretestInput = {
    created_at?: Date | string
    review: ReviewCreateNestedOneWithoutReview_pretestInput
  }

  export type Review_pretestUncheckedCreateWithoutPretestInput = {
    id?: number
    id_review: number
    created_at?: Date | string
  }

  export type Review_pretestCreateOrConnectWithoutPretestInput = {
    where: Review_pretestWhereUniqueInput
    create: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput>
  }

  export type Review_pretestCreateManyPretestInputEnvelope = {
    data: Review_pretestCreateManyPretestInput | Review_pretestCreateManyPretestInput[]
    skipDuplicates?: boolean
  }

  export type Pretest_kelasUpsertWithWhereUniqueWithoutPretestInput = {
    where: Pretest_kelasWhereUniqueInput
    update: XOR<Pretest_kelasUpdateWithoutPretestInput, Pretest_kelasUncheckedUpdateWithoutPretestInput>
    create: XOR<Pretest_kelasCreateWithoutPretestInput, Pretest_kelasUncheckedCreateWithoutPretestInput>
  }

  export type Pretest_kelasUpdateWithWhereUniqueWithoutPretestInput = {
    where: Pretest_kelasWhereUniqueInput
    data: XOR<Pretest_kelasUpdateWithoutPretestInput, Pretest_kelasUncheckedUpdateWithoutPretestInput>
  }

  export type Pretest_kelasUpdateManyWithWhereWithoutPretestInput = {
    where: Pretest_kelasScalarWhereInput
    data: XOR<Pretest_kelasUpdateManyMutationInput, Pretest_kelasUncheckedUpdateManyWithoutPretestInput>
  }

  export type Review_pretestUpsertWithWhereUniqueWithoutPretestInput = {
    where: Review_pretestWhereUniqueInput
    update: XOR<Review_pretestUpdateWithoutPretestInput, Review_pretestUncheckedUpdateWithoutPretestInput>
    create: XOR<Review_pretestCreateWithoutPretestInput, Review_pretestUncheckedCreateWithoutPretestInput>
  }

  export type Review_pretestUpdateWithWhereUniqueWithoutPretestInput = {
    where: Review_pretestWhereUniqueInput
    data: XOR<Review_pretestUpdateWithoutPretestInput, Review_pretestUncheckedUpdateWithoutPretestInput>
  }

  export type Review_pretestUpdateManyWithWhereWithoutPretestInput = {
    where: Review_pretestScalarWhereInput
    data: XOR<Review_pretestUpdateManyMutationInput, Review_pretestUncheckedUpdateManyWithoutPretestInput>
  }

  export type Review_pretestScalarWhereInput = {
    AND?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
    OR?: Review_pretestScalarWhereInput[]
    NOT?: Review_pretestScalarWhereInput | Review_pretestScalarWhereInput[]
    id?: IntFilter<"Review_pretest"> | number
    id_pretest?: IntFilter<"Review_pretest"> | number
    id_review?: IntFilter<"Review_pretest"> | number
    created_at?: DateTimeFilter<"Review_pretest"> | Date | string
  }

  export type PretestCreateWithoutPretest_kelasInput = {
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    review_pretest?: Review_pretestCreateNestedManyWithoutPretestInput
  }

  export type PretestUncheckedCreateWithoutPretest_kelasInput = {
    id?: number
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    review_pretest?: Review_pretestUncheckedCreateNestedManyWithoutPretestInput
  }

  export type PretestCreateOrConnectWithoutPretest_kelasInput = {
    where: PretestWhereUniqueInput
    create: XOR<PretestCreateWithoutPretest_kelasInput, PretestUncheckedCreateWithoutPretest_kelasInput>
  }

  export type Kelas_sayaCreateWithoutPretest_kelasInput = {
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    orders_kelas?: Orders_kelasCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaUncheckedCreateWithoutPretest_kelasInput = {
    id?: number
    progres_kelas: number
    status_kelas: $Enums.Status_kelas
    created_at?: Date | string
    orders_kelas?: Orders_kelasUncheckedCreateNestedManyWithoutKelas_sayaInput
  }

  export type Kelas_sayaCreateOrConnectWithoutPretest_kelasInput = {
    where: Kelas_sayaWhereUniqueInput
    create: XOR<Kelas_sayaCreateWithoutPretest_kelasInput, Kelas_sayaUncheckedCreateWithoutPretest_kelasInput>
  }

  export type PretestUpsertWithoutPretest_kelasInput = {
    update: XOR<PretestUpdateWithoutPretest_kelasInput, PretestUncheckedUpdateWithoutPretest_kelasInput>
    create: XOR<PretestCreateWithoutPretest_kelasInput, PretestUncheckedCreateWithoutPretest_kelasInput>
    where?: PretestWhereInput
  }

  export type PretestUpdateToOneWithWhereWithoutPretest_kelasInput = {
    where?: PretestWhereInput
    data: XOR<PretestUpdateWithoutPretest_kelasInput, PretestUncheckedUpdateWithoutPretest_kelasInput>
  }

  export type PretestUpdateWithoutPretest_kelasInput = {
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    review_pretest?: Review_pretestUpdateManyWithoutPretestNestedInput
  }

  export type PretestUncheckedUpdateWithoutPretest_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    review_pretest?: Review_pretestUncheckedUpdateManyWithoutPretestNestedInput
  }

  export type Kelas_sayaUpsertWithoutPretest_kelasInput = {
    update: XOR<Kelas_sayaUpdateWithoutPretest_kelasInput, Kelas_sayaUncheckedUpdateWithoutPretest_kelasInput>
    create: XOR<Kelas_sayaCreateWithoutPretest_kelasInput, Kelas_sayaUncheckedCreateWithoutPretest_kelasInput>
    where?: Kelas_sayaWhereInput
  }

  export type Kelas_sayaUpdateToOneWithWhereWithoutPretest_kelasInput = {
    where?: Kelas_sayaWhereInput
    data: XOR<Kelas_sayaUpdateWithoutPretest_kelasInput, Kelas_sayaUncheckedUpdateWithoutPretest_kelasInput>
  }

  export type Kelas_sayaUpdateWithoutPretest_kelasInput = {
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Kelas_sayaUncheckedUpdateWithoutPretest_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    progres_kelas?: FloatFieldUpdateOperationsInput | number
    status_kelas?: EnumStatus_kelasFieldUpdateOperationsInput | $Enums.Status_kelas
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_kelas?: Orders_kelasUncheckedUpdateManyWithoutKelas_sayaNestedInput
  }

  export type Review_pretestCreateWithoutReviewInput = {
    created_at?: Date | string
    pretest: PretestCreateNestedOneWithoutReview_pretestInput
  }

  export type Review_pretestUncheckedCreateWithoutReviewInput = {
    id?: number
    id_pretest: number
    created_at?: Date | string
  }

  export type Review_pretestCreateOrConnectWithoutReviewInput = {
    where: Review_pretestWhereUniqueInput
    create: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput>
  }

  export type Review_pretestCreateManyReviewInputEnvelope = {
    data: Review_pretestCreateManyReviewInput | Review_pretestCreateManyReviewInput[]
    skipDuplicates?: boolean
  }

  export type Review_pretestUpsertWithWhereUniqueWithoutReviewInput = {
    where: Review_pretestWhereUniqueInput
    update: XOR<Review_pretestUpdateWithoutReviewInput, Review_pretestUncheckedUpdateWithoutReviewInput>
    create: XOR<Review_pretestCreateWithoutReviewInput, Review_pretestUncheckedCreateWithoutReviewInput>
  }

  export type Review_pretestUpdateWithWhereUniqueWithoutReviewInput = {
    where: Review_pretestWhereUniqueInput
    data: XOR<Review_pretestUpdateWithoutReviewInput, Review_pretestUncheckedUpdateWithoutReviewInput>
  }

  export type Review_pretestUpdateManyWithWhereWithoutReviewInput = {
    where: Review_pretestScalarWhereInput
    data: XOR<Review_pretestUpdateManyMutationInput, Review_pretestUncheckedUpdateManyWithoutReviewInput>
  }

  export type PretestCreateWithoutReview_pretestInput = {
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasCreateNestedManyWithoutPretestInput
  }

  export type PretestUncheckedCreateWithoutReview_pretestInput = {
    id?: number
    jdudul_pertanyaan: string
    list_soal: number
    opsi_jawaban: string
    pertanyaan: string
    created_at?: Date | string
    pretest_kelas?: Pretest_kelasUncheckedCreateNestedManyWithoutPretestInput
  }

  export type PretestCreateOrConnectWithoutReview_pretestInput = {
    where: PretestWhereUniqueInput
    create: XOR<PretestCreateWithoutReview_pretestInput, PretestUncheckedCreateWithoutReview_pretestInput>
  }

  export type ReviewCreateWithoutReview_pretestInput = {
    rating: Decimal | DecimalJsLike | number | string
    deskripsi: string
    created_at?: Date | string
  }

  export type ReviewUncheckedCreateWithoutReview_pretestInput = {
    id?: number
    rating: Decimal | DecimalJsLike | number | string
    deskripsi: string
    created_at?: Date | string
  }

  export type ReviewCreateOrConnectWithoutReview_pretestInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutReview_pretestInput, ReviewUncheckedCreateWithoutReview_pretestInput>
  }

  export type PretestUpsertWithoutReview_pretestInput = {
    update: XOR<PretestUpdateWithoutReview_pretestInput, PretestUncheckedUpdateWithoutReview_pretestInput>
    create: XOR<PretestCreateWithoutReview_pretestInput, PretestUncheckedCreateWithoutReview_pretestInput>
    where?: PretestWhereInput
  }

  export type PretestUpdateToOneWithWhereWithoutReview_pretestInput = {
    where?: PretestWhereInput
    data: XOR<PretestUpdateWithoutReview_pretestInput, PretestUncheckedUpdateWithoutReview_pretestInput>
  }

  export type PretestUpdateWithoutReview_pretestInput = {
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUpdateManyWithoutPretestNestedInput
  }

  export type PretestUncheckedUpdateWithoutReview_pretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    jdudul_pertanyaan?: StringFieldUpdateOperationsInput | string
    list_soal?: IntFieldUpdateOperationsInput | number
    opsi_jawaban?: StringFieldUpdateOperationsInput | string
    pertanyaan?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest_kelas?: Pretest_kelasUncheckedUpdateManyWithoutPretestNestedInput
  }

  export type ReviewUpsertWithoutReview_pretestInput = {
    update: XOR<ReviewUpdateWithoutReview_pretestInput, ReviewUncheckedUpdateWithoutReview_pretestInput>
    create: XOR<ReviewCreateWithoutReview_pretestInput, ReviewUncheckedCreateWithoutReview_pretestInput>
    where?: ReviewWhereInput
  }

  export type ReviewUpdateToOneWithWhereWithoutReview_pretestInput = {
    where?: ReviewWhereInput
    data: XOR<ReviewUpdateWithoutReview_pretestInput, ReviewUncheckedUpdateWithoutReview_pretestInput>
  }

  export type ReviewUpdateWithoutReview_pretestInput = {
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateWithoutReview_pretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KelasCreateWithoutSilabusInput = {
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiCreateNestedManyWithoutKelasInput
    mengajar?: MengajarCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasCreateNestedManyWithoutKelasInput
  }

  export type KelasUncheckedCreateWithoutSilabusInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKelasInput
    mengajar?: MengajarUncheckedCreateNestedManyWithoutKelasInput
    transaksi_kelas?: Transaksi_kelasUncheckedCreateNestedManyWithoutKelasInput
  }

  export type KelasCreateOrConnectWithoutSilabusInput = {
    where: KelasWhereUniqueInput
    create: XOR<KelasCreateWithoutSilabusInput, KelasUncheckedCreateWithoutSilabusInput>
  }

  export type Modul_kelasCreateWithoutSilabusInput = {
    nama: string
    created_at?: Date | string
    modul_material?: Modul_materialCreateNestedManyWithoutModul_kelasInput
  }

  export type Modul_kelasUncheckedCreateWithoutSilabusInput = {
    id?: number
    nama: string
    created_at?: Date | string
    modul_material?: Modul_materialUncheckedCreateNestedManyWithoutModul_kelasInput
  }

  export type Modul_kelasCreateOrConnectWithoutSilabusInput = {
    where: Modul_kelasWhereUniqueInput
    create: XOR<Modul_kelasCreateWithoutSilabusInput, Modul_kelasUncheckedCreateWithoutSilabusInput>
  }

  export type KelasUpsertWithoutSilabusInput = {
    update: XOR<KelasUpdateWithoutSilabusInput, KelasUncheckedUpdateWithoutSilabusInput>
    create: XOR<KelasCreateWithoutSilabusInput, KelasUncheckedCreateWithoutSilabusInput>
    where?: KelasWhereInput
  }

  export type KelasUpdateToOneWithWhereWithoutSilabusInput = {
    where?: KelasWhereInput
    data: XOR<KelasUpdateWithoutSilabusInput, KelasUncheckedUpdateWithoutSilabusInput>
  }

  export type KelasUpdateWithoutSilabusInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUpdateManyWithoutKelasNestedInput
  }

  export type KelasUncheckedUpdateWithoutSilabusInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUncheckedUpdateManyWithoutKelasNestedInput
    transaksi_kelas?: Transaksi_kelasUncheckedUpdateManyWithoutKelasNestedInput
  }

  export type Modul_kelasUpsertWithoutSilabusInput = {
    update: XOR<Modul_kelasUpdateWithoutSilabusInput, Modul_kelasUncheckedUpdateWithoutSilabusInput>
    create: XOR<Modul_kelasCreateWithoutSilabusInput, Modul_kelasUncheckedCreateWithoutSilabusInput>
    where?: Modul_kelasWhereInput
  }

  export type Modul_kelasUpdateToOneWithWhereWithoutSilabusInput = {
    where?: Modul_kelasWhereInput
    data: XOR<Modul_kelasUpdateWithoutSilabusInput, Modul_kelasUncheckedUpdateWithoutSilabusInput>
  }

  export type Modul_kelasUpdateWithoutSilabusInput = {
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUpdateManyWithoutModul_kelasNestedInput
  }

  export type Modul_kelasUncheckedUpdateWithoutSilabusInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul_material?: Modul_materialUncheckedUpdateManyWithoutModul_kelasNestedInput
  }

  export type KelasCreateWithoutTransaksi_kelasInput = {
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiCreateNestedManyWithoutKelasInput
    mengajar?: MengajarCreateNestedManyWithoutKelasInput
    silabus?: SilabusCreateNestedManyWithoutKelasInput
  }

  export type KelasUncheckedCreateWithoutTransaksi_kelasInput = {
    id?: number
    nama: string
    harga: Decimal | DecimalJsLike | number | string
    deskripsi: string
    background_foto: string
    video: string
    created_at?: Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedCreateNestedManyWithoutKelasInput
    mengajar?: MengajarUncheckedCreateNestedManyWithoutKelasInput
    silabus?: SilabusUncheckedCreateNestedManyWithoutKelasInput
  }

  export type KelasCreateOrConnectWithoutTransaksi_kelasInput = {
    where: KelasWhereUniqueInput
    create: XOR<KelasCreateWithoutTransaksi_kelasInput, KelasUncheckedCreateWithoutTransaksi_kelasInput>
  }

  export type PembayaranCreateWithoutTransaksi_kelasInput = {
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranUncheckedCreateWithoutTransaksi_kelasInput = {
    id?: number
    kode: string
    nama: string
    jenis_pembayaran: $Enums.Jenis_pembayaran
    created_at?: Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedCreateNestedManyWithoutPembayaranInput
  }

  export type PembayaranCreateOrConnectWithoutTransaksi_kelasInput = {
    where: PembayaranWhereUniqueInput
    create: XOR<PembayaranCreateWithoutTransaksi_kelasInput, PembayaranUncheckedCreateWithoutTransaksi_kelasInput>
  }

  export type KelasUpsertWithoutTransaksi_kelasInput = {
    update: XOR<KelasUpdateWithoutTransaksi_kelasInput, KelasUncheckedUpdateWithoutTransaksi_kelasInput>
    create: XOR<KelasCreateWithoutTransaksi_kelasInput, KelasUncheckedCreateWithoutTransaksi_kelasInput>
    where?: KelasWhereInput
  }

  export type KelasUpdateToOneWithWhereWithoutTransaksi_kelasInput = {
    where?: KelasWhereInput
    data: XOR<KelasUpdateWithoutTransaksi_kelasInput, KelasUncheckedUpdateWithoutTransaksi_kelasInput>
  }

  export type KelasUpdateWithoutTransaksi_kelasInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUpdateManyWithoutKelasNestedInput
  }

  export type KelasUncheckedUpdateWithoutTransaksi_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deskripsi?: StringFieldUpdateOperationsInput | string
    background_foto?: StringFieldUpdateOperationsInput | string
    video?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas_relasi?: Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasNestedInput
    mengajar?: MengajarUncheckedUpdateManyWithoutKelasNestedInput
    silabus?: SilabusUncheckedUpdateManyWithoutKelasNestedInput
  }

  export type PembayaranUpsertWithoutTransaksi_kelasInput = {
    update: XOR<PembayaranUpdateWithoutTransaksi_kelasInput, PembayaranUncheckedUpdateWithoutTransaksi_kelasInput>
    create: XOR<PembayaranCreateWithoutTransaksi_kelasInput, PembayaranUncheckedCreateWithoutTransaksi_kelasInput>
    where?: PembayaranWhereInput
  }

  export type PembayaranUpdateToOneWithWhereWithoutTransaksi_kelasInput = {
    where?: PembayaranWhereInput
    data: XOR<PembayaranUpdateWithoutTransaksi_kelasInput, PembayaranUncheckedUpdateWithoutTransaksi_kelasInput>
  }

  export type PembayaranUpdateWithoutTransaksi_kelasInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUpdateManyWithoutPembayaranNestedInput
  }

  export type PembayaranUncheckedUpdateWithoutTransaksi_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    jenis_pembayaran?: EnumJenis_pembayaranFieldUpdateOperationsInput | $Enums.Jenis_pembayaran
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders_pembayaran?: Orders_pembayaranUncheckedUpdateManyWithoutPembayaranNestedInput
  }

  export type MengajarCreateManyTutorInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type MengajarUpdateWithoutTutorInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutMengajarNestedInput
  }

  export type MengajarUncheckedUpdateWithoutTutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarUncheckedUpdateManyWithoutTutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiCreateManyKelasInput = {
    id?: number
    id_kategori_kelas: number
    created_at?: Date | string
  }

  export type MengajarCreateManyKelasInput = {
    id?: number
    email_tutor: string
    created_at?: Date | string
  }

  export type SilabusCreateManyKelasInput = {
    id?: number
    id_modul: number
    created_at?: Date | string
  }

  export type Transaksi_kelasCreateManyKelasInput = {
    id?: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiUpdateWithoutKelasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_kelas?: Kategori_kelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput
  }

  export type Kategori_kelas_relasiUncheckedUpdateWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kategori_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiUncheckedUpdateManyWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kategori_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarUpdateWithoutKelasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tutor?: TutorUpdateOneRequiredWithoutMengajarNestedInput
  }

  export type MengajarUncheckedUpdateWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    email_tutor?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MengajarUncheckedUpdateManyWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    email_tutor?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusUpdateWithoutKelasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modul?: Modul_kelasUpdateOneRequiredWithoutSilabusNestedInput
  }

  export type SilabusUncheckedUpdateWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_modul?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusUncheckedUpdateManyWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_modul?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasUpdateWithoutKelasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pembayaran?: PembayaranUpdateOneRequiredWithoutTransaksi_kelasNestedInput
  }

  export type Transaksi_kelasUncheckedUpdateWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasUncheckedUpdateManyWithoutKelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiCreateManyKategori_kelasInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type Kategori_kelas_relasiUpdateWithoutKategori_kelasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutKategori_kelas_relasiNestedInput
  }

  export type Kategori_kelas_relasiUncheckedUpdateWithoutKategori_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Kategori_kelas_relasiUncheckedUpdateManyWithoutKategori_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasCreateManyKelas_sayaInput = {
    id?: number
    id_orders: number
    created_at?: Date | string
  }

  export type Pretest_kelasCreateManyKelas_sayaInput = {
    id?: number
    id_pretest: number
    created_at?: Date | string
  }

  export type Orders_kelasUpdateWithoutKelas_sayaInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateOneRequiredWithoutOrders_kelasNestedInput
  }

  export type Orders_kelasUncheckedUpdateWithoutKelas_sayaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasUncheckedUpdateManyWithoutKelas_sayaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasUpdateWithoutKelas_sayaInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest?: PretestUpdateOneRequiredWithoutPretest_kelasNestedInput
  }

  export type Pretest_kelasUncheckedUpdateWithoutKelas_sayaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasUncheckedUpdateManyWithoutKelas_sayaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Modul_materialCreateManyMaterialInput = {
    id?: number
    id_modul_kelas: number
  }

  export type Modul_materialUpdateWithoutMaterialInput = {
    modul_kelas?: Modul_kelasUpdateOneRequiredWithoutModul_materialNestedInput
  }

  export type Modul_materialUncheckedUpdateWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_modul_kelas?: IntFieldUpdateOperationsInput | number
  }

  export type Modul_materialUncheckedUpdateManyWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_modul_kelas?: IntFieldUpdateOperationsInput | number
  }

  export type Modul_materialCreateManyModul_kelasInput = {
    id?: number
    id_material: number
  }

  export type SilabusCreateManyModulInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type Modul_materialUpdateWithoutModul_kelasInput = {
    material?: MaterialUpdateOneRequiredWithoutModul_materialNestedInput
  }

  export type Modul_materialUncheckedUpdateWithoutModul_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_material?: IntFieldUpdateOperationsInput | number
  }

  export type Modul_materialUncheckedUpdateManyWithoutModul_kelasInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_material?: IntFieldUpdateOperationsInput | number
  }

  export type SilabusUpdateWithoutModulInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutSilabusNestedInput
  }

  export type SilabusUncheckedUpdateWithoutModulInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SilabusUncheckedUpdateManyWithoutModulInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasCreateManyOrdersInput = {
    id?: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Orders_pembayaranCreateManyOrdersInput = {
    id?: number
    id_pembayaran: number
    created_at?: Date | string
  }

  export type Orders_kelasUpdateWithoutOrdersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas_saya?: Kelas_sayaUpdateOneRequiredWithoutOrders_kelasNestedInput
  }

  export type Orders_kelasUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_kelasUncheckedUpdateManyWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranUpdateWithoutOrdersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pembayaran?: PembayaranUpdateOneRequiredWithoutOrders_pembayaranNestedInput
  }

  export type Orders_pembayaranUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranUncheckedUpdateManyWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pembayaran?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranCreateManyPembayaranInput = {
    id?: number
    id_orders: number
    created_at?: Date | string
  }

  export type Transaksi_kelasCreateManyPembayaranInput = {
    id?: number
    id_kelas: number
    created_at?: Date | string
  }

  export type Orders_pembayaranUpdateWithoutPembayaranInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateOneRequiredWithoutOrders_pembayaranNestedInput
  }

  export type Orders_pembayaranUncheckedUpdateWithoutPembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Orders_pembayaranUncheckedUpdateManyWithoutPembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_orders?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasUpdateWithoutPembayaranInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas?: KelasUpdateOneRequiredWithoutTransaksi_kelasNestedInput
  }

  export type Transaksi_kelasUncheckedUpdateWithoutPembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Transaksi_kelasUncheckedUpdateManyWithoutPembayaranInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasCreateManyPretestInput = {
    id?: number
    id_kelas_saya: number
    created_at?: Date | string
  }

  export type Review_pretestCreateManyPretestInput = {
    id?: number
    id_review: number
    created_at?: Date | string
  }

  export type Pretest_kelasUpdateWithoutPretestInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    kelas_saya?: Kelas_sayaUpdateOneRequiredWithoutPretest_kelasNestedInput
  }

  export type Pretest_kelasUncheckedUpdateWithoutPretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Pretest_kelasUncheckedUpdateManyWithoutPretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_kelas_saya?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestUpdateWithoutPretestInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    review?: ReviewUpdateOneRequiredWithoutReview_pretestNestedInput
  }

  export type Review_pretestUncheckedUpdateWithoutPretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_review?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestUncheckedUpdateManyWithoutPretestInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_review?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestCreateManyReviewInput = {
    id?: number
    id_pretest: number
    created_at?: Date | string
  }

  export type Review_pretestUpdateWithoutReviewInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    pretest?: PretestUpdateOneRequiredWithoutReview_pretestNestedInput
  }

  export type Review_pretestUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Review_pretestUncheckedUpdateManyWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_pretest?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use TutorCountOutputTypeDefaultArgs instead
     */
    export type TutorCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TutorCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KelasCountOutputTypeDefaultArgs instead
     */
    export type KelasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KelasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Kategori_kelasCountOutputTypeDefaultArgs instead
     */
    export type Kategori_kelasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Kategori_kelasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Kelas_sayaCountOutputTypeDefaultArgs instead
     */
    export type Kelas_sayaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Kelas_sayaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialCountOutputTypeDefaultArgs instead
     */
    export type MaterialCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Modul_kelasCountOutputTypeDefaultArgs instead
     */
    export type Modul_kelasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Modul_kelasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PembayaranCountOutputTypeDefaultArgs instead
     */
    export type PembayaranCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PembayaranCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PretestCountOutputTypeDefaultArgs instead
     */
    export type PretestCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PretestCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewCountOutputTypeDefaultArgs instead
     */
    export type ReviewCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TutorDefaultArgs instead
     */
    export type TutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TutorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KelasDefaultArgs instead
     */
    export type KelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KelasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Kategori_kelasDefaultArgs instead
     */
    export type Kategori_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Kategori_kelasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Kategori_kelas_relasiDefaultArgs instead
     */
    export type Kategori_kelas_relasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Kategori_kelas_relasiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Kelas_sayaDefaultArgs instead
     */
    export type Kelas_sayaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Kelas_sayaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialDefaultArgs instead
     */
    export type MaterialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MengajarDefaultArgs instead
     */
    export type MengajarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MengajarDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Modul_kelasDefaultArgs instead
     */
    export type Modul_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Modul_kelasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Modul_materialDefaultArgs instead
     */
    export type Modul_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Modul_materialDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Orders_kelasDefaultArgs instead
     */
    export type Orders_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Orders_kelasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PembayaranDefaultArgs instead
     */
    export type PembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PembayaranDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Orders_pembayaranDefaultArgs instead
     */
    export type Orders_pembayaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Orders_pembayaranDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PretestDefaultArgs instead
     */
    export type PretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PretestDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Pretest_kelasDefaultArgs instead
     */
    export type Pretest_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Pretest_kelasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Review_pretestDefaultArgs instead
     */
    export type Review_pretestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Review_pretestDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SilabusDefaultArgs instead
     */
    export type SilabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SilabusDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Transaksi_kelasDefaultArgs instead
     */
    export type Transaksi_kelasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Transaksi_kelasDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}